{"version":3,"file":"backstage-routes-67e3d8a7.js","sources":["../../../resources/client/web-player/backstage/images/claim-label.jpg","../../../resources/client/web-player/backstage/images/claim-artist.jpg","../../../resources/client/web-player/backstage/backstage-type-selector.tsx","../../../resources/client/web-player/backstage/requests/use-create-backstage-request.ts","../../../resources/client/web-player/backstage/backstage-request-form/use-backstage-request-form.ts","../../../resources/client/web-player/backstage/backstage-request-form/backstage-role-select.tsx","../../../resources/client/web-player/backstage/backstage-request-form/backstage-form-attachments.tsx","../../../resources/client/web-player/backstage/backstage-request-form/backstage-request-form-page.tsx","../../../resources/client/web-player/backstage/backstage-request-submitted-page.tsx","../../../resources/client/web-player/backstage/backstage-routes.tsx"],"sourcesContent":["export default \"__VITE_ASSET__dceebe86__\"","export default \"__VITE_ASSET__95695327__\"","import {Trans} from '@common/i18n/trans';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport claimLabelImage from './images/claim-label.jpg';\r\nimport claimArtistImage from './images/claim-artist.jpg';\r\nimport {ReactNode} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\r\nimport clsx from 'clsx';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\n\r\nexport function BackstageTypeSelector() {\r\n  const {branding} = useSettings();\r\n  const isArtist = usePrimaryArtistForCurrentUser() != null;\r\n  return (\r\n    <BackstageLayout>\r\n      <div className=\"max-w-780 my:20 md:my-40 mx-auto\">\r\n        <h1 className=\"text-3xl md:text-5xl text-center font-medium mb-10\">\r\n          <Trans\r\n            message=\"Get access to :siteName for artists\"\r\n            values={{siteName: branding.site_name}}\r\n          />\r\n        </h1>\r\n        <h2 className=\"text-lg font-medium mb-54 text-center\">\r\n          <Trans message=\"First, select the type of your request\" />\r\n        </h2>\r\n        <div className=\"md:flex items-center gap-54\">\r\n          <ClaimPanelLayout\r\n            className=\"mb-14 md:mb-0\"\r\n            title={\r\n              isArtist ? (\r\n                <Trans message=\"Get verified\" />\r\n              ) : (\r\n                <Trans message=\"Become an artist\" />\r\n              )\r\n            }\r\n            link={isArtist ? 'verify-artist' : 'become-artist'}\r\n            image={claimArtistImage}\r\n          />\r\n          <ClaimPanelLayout\r\n            title={<Trans message=\"Claim existing artist\" />}\r\n            link=\"claim-artist\"\r\n            image={claimLabelImage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BackstageLayout>\r\n  );\r\n}\r\n\r\ninterface ClaimPanelLayoutProps {\r\n  title: ReactNode;\r\n  link: string;\r\n  image: string;\r\n  className?: string;\r\n}\r\nfunction ClaimPanelLayout({\r\n  title,\r\n  image,\r\n  link,\r\n  className,\r\n}: ClaimPanelLayoutProps) {\r\n  return (\r\n    <Link\r\n      to={link}\r\n      className={clsx(\r\n        'block flex-auto flex flex-col items-center justify-center p-34 border border-2 rounded-md bg-background transition-shadow hover:shadow-xl hover:bg-primary/4 cursor-pointer',\r\n        className\r\n      )}\r\n    >\r\n      <h3 className=\"text-lg mb-10 font-medium\">{title}</h3>\r\n      <img\r\n        className=\"w-132 h-132 object-cover rounded-full\"\r\n        src={image}\r\n        alt=\"\"\r\n      />\r\n    </Link>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\r\n\r\nconst endpoint = 'backstage-request';\r\n\r\ninterface Response extends BackendResponse {\r\n  request: BackstageRequest;\r\n}\r\n\r\nexport interface CreateBackstageRequestPayload {\r\n  type: 'verify-artist' | 'become-artist' | 'claim-artist';\r\n  artist_id: number | 'CURRENT_USER';\r\n  artist_name: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  image: string;\r\n  role: string;\r\n  company: string;\r\n  passportScan?: Omit<FileEntry, 'parent' | 'children'>;\r\n}\r\n\r\nexport function useCreateBackstageRequest(\r\n  form: UseFormReturn<CreateBackstageRequestPayload>,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (payload: CreateBackstageRequestPayload) =>\r\n      createRequest(payload),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint),\r\n      });\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createRequest(payload: CreateBackstageRequestPayload) {\r\n  return apiClient\r\n    .post<Response>(endpoint, {\r\n      artist_name: payload.artist_name,\r\n      artist_id: payload.artist_id,\r\n      type: payload.type,\r\n      data: {\r\n        first_name: payload.first_name,\r\n        last_name: payload.last_name,\r\n        image: payload.image,\r\n        role: payload.role,\r\n        company: payload.company,\r\n        passport_scan_id: payload.passportScan?.id,\r\n      },\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","import {useAuth} from '@common/auth/use-auth';\r\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\r\nimport {useForm} from 'react-hook-form';\r\nimport {CreateBackstageRequestPayload} from '@app/web-player/backstage/requests/use-create-backstage-request';\r\n\r\nexport function useBackstageRequestForm(\r\n  requestType: CreateBackstageRequestPayload['type']\r\n) {\r\n  const {user} = useAuth();\r\n  const primaryArtist = usePrimaryArtistForCurrentUser();\r\n\r\n  let artistId: number | 'CURRENT_USER' | undefined;\r\n  if (requestType === 'verify-artist') {\r\n    artistId = primaryArtist?.id as number;\r\n  } else if (requestType === 'become-artist') {\r\n    artistId = 'CURRENT_USER';\r\n  }\r\n\r\n  return useForm<CreateBackstageRequestPayload>({\r\n    defaultValues: {\r\n      artist_id: artistId,\r\n      artist_name: user?.display_name,\r\n      first_name: user?.first_name,\r\n      last_name: user?.last_name,\r\n      image: primaryArtist?.image || user?.avatar,\r\n      type: requestType,\r\n      role: requestType === 'claim-artist' ? 'artist' : undefined,\r\n    },\r\n  });\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {FormSelect} from '@common/ui/forms/select/select';\r\nimport React from 'react';\r\n\r\nexport function BackstageRoleSelect() {\r\n  return (\r\n    <FormSelect\r\n      name=\"role\"\r\n      label={<Trans message=\"Role\" />}\r\n      selectionMode=\"single\"\r\n      className=\"mb-24\"\r\n    >\r\n      <Item value=\"artist\">\r\n        <Trans message=\"Artist\" />\r\n      </Item>\r\n      <Item value=\"agent\">\r\n        <Trans message=\"Agent\" />\r\n      </Item>\r\n      <Item value=\"composer\">\r\n        <Trans message=\"Composer\" />\r\n      </Item>\r\n      <Item value=\"label\">\r\n        <Trans message=\"Label\" />\r\n      </Item>\r\n      <Item value=\"manager\">\r\n        <Trans message=\"Manager\" />\r\n      </Item>\r\n      <Item value=\"musician\">\r\n        <Trans message=\"Musician\" />\r\n      </Item>\r\n      <Item value=\"producer\">\r\n        <Trans message=\"Producer\" />\r\n      </Item>\r\n      <Item value=\"publisher\">\r\n        <Trans message=\"Publisher\" />\r\n      </Item>\r\n      <Item value=\"songwriter\">\r\n        <Trans message=\"Songwriter\" />\r\n      </Item>\r\n    </FormSelect>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {CreateBackstageRequestPayload} from '@app/web-player/backstage/requests/use-create-backstage-request';\r\nimport {useSocialLogin} from '@common/auth/requests/use-social-login';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {TwitterIcon} from '@common/icons/social/twitter';\r\nimport {useUser} from '@common/auth/ui/use-user';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {FacebookIcon} from '@common/icons/social/facebook';\r\nimport {DocumentScannerIcon} from '@common/icons/material/DocumentScanner';\r\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\r\nimport React, {cloneElement, ReactElement, ReactNode} from 'react';\r\nimport {SvgIconProps} from '@common/icons/svg-icon';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {useActiveUpload} from '@common/uploads/uploader/use-active-upload';\r\nimport {UploadInputType} from '@common/uploads/types/upload-input-config';\r\nimport {Disk} from '@common/uploads/types/backend-metadata';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\nexport function BackstageFormAttachments() {\r\n  const {social} = useSettings();\r\n  const {watch, setValue} = useFormContext<CreateBackstageRequestPayload>();\r\n  const {connectSocial} = useSocialLogin();\r\n  const passportScan = watch('passportScan');\r\n\r\n  return (\r\n    <div className=\"py-20\">\r\n      <div className=\"mb-14 text-sm\">\r\n        <Trans message=\"Speed up the process by connecting artist social media accounts or uploading your passport scan.\" />\r\n      </div>\r\n      {social?.twitter?.enable && (\r\n        <Button\r\n          variant=\"outline\"\r\n          startIcon={<TwitterIcon className=\"text-twitter\" />}\r\n          className=\"mr-10 mb-10 md:mb-0\"\r\n          onClick={async () => {\r\n            const e = await connectSocial('twitter');\r\n            if (e?.status === 'SUCCESS') {\r\n              queryClient.invalidateQueries({queryKey: ['users']});\r\n              toast(message('Connected twitter account'));\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Connect to twitter\" />\r\n        </Button>\r\n      )}\r\n      {social?.facebook?.enable && (\r\n        <Button\r\n          variant=\"outline\"\r\n          startIcon={<FacebookIcon className=\"text-facebook\" />}\r\n          className=\"mr-10 mb-10 md:mb-0\"\r\n          onClick={async () => {\r\n            const e = await connectSocial('facebook');\r\n            if (e?.status === 'SUCCESS') {\r\n              queryClient.invalidateQueries({queryKey: ['users']});\r\n              toast(message('Connected facebook account'));\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Connect to facebook\" />\r\n        </Button>\r\n      )}\r\n      <PassportScanButton />\r\n      <div className=\"mt-20\">\r\n        {passportScan && (\r\n          <AttachmentLayout\r\n            icon={<DocumentScannerIcon />}\r\n            title={<Trans message=\"Passport scan\" />}\r\n            description={`${passportScan.name} (${prettyBytes(\r\n              passportScan.file_size,\r\n            )})`}\r\n            onRemove={() => {\r\n              setValue('passportScan', undefined);\r\n            }}\r\n          />\r\n        )}\r\n        <SocialServiceAttachment service=\"twitter\" />\r\n        <SocialServiceAttachment service=\"facebook\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SocialServiceAttachmentProps {\r\n  service: 'twitter' | 'facebook';\r\n}\r\nfunction SocialServiceAttachment({service}: SocialServiceAttachmentProps) {\r\n  const {disconnectSocial} = useSocialLogin();\r\n  const {data} = useUser('me', {\r\n    with: ['social_profiles'],\r\n  });\r\n  const account = data?.user.social_profiles.find(\r\n    s => s.service_name === service,\r\n  );\r\n  if (!account) return null;\r\n\r\n  return (\r\n    <AttachmentLayout\r\n      icon={\r\n        service === 'twitter' ? (\r\n          <TwitterIcon className=\"text-twitter\" />\r\n        ) : (\r\n          <FacebookIcon className=\"text-facebook\" />\r\n        )\r\n      }\r\n      title={\r\n        <span className=\"capitalize\">\r\n          <Trans message=\":service account\" values={{service}} />\r\n        </span>\r\n      }\r\n      description={account.username}\r\n      isDisabled={disconnectSocial.isPending}\r\n      onRemove={() => {\r\n        disconnectSocial.mutate(\r\n          {service: 'twitter'},\r\n          {\r\n            onSuccess: () => {\r\n              queryClient.invalidateQueries({queryKey: ['users']});\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ninterface AttachmentLayoutProps {\r\n  icon: ReactElement<SvgIconProps>;\r\n  title: ReactNode;\r\n  description: ReactNode;\r\n  onRemove: () => void;\r\n  isDisabled?: boolean;\r\n}\r\nfunction AttachmentLayout({\r\n  icon,\r\n  title,\r\n  description,\r\n  onRemove,\r\n  isDisabled,\r\n}: AttachmentLayoutProps) {\r\n  return (\r\n    <div className=\"flex items-center gap-8 border rounded px-14 py-8 mb-8\">\r\n      <div className=\"flex-shrink-0 text-muted\">\r\n        {cloneElement(icon, {size: 'lg'})}\r\n      </div>\r\n      <div>\r\n        <div className=\"text-xs text-muted\">{title}</div>\r\n        <div className=\"text-sm\">{description}</div>\r\n      </div>\r\n      <IconButton\r\n        className=\"flex-shrink-0 ml-auto\"\r\n        onClick={() => onRemove()}\r\n        disabled={isDisabled}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FiveMB = 5 * 1024 * 1024;\r\nfunction PassportScanButton() {\r\n  const {setValue} = useFormContext<CreateBackstageRequestPayload>();\r\n  const {selectAndUploadFile} = useActiveUpload();\r\n\r\n  const handleUpload = () => {\r\n    selectAndUploadFile({\r\n      showToastOnRestrictionFail: true,\r\n      restrictions: {\r\n        allowedFileTypes: [UploadInputType.image],\r\n        maxFileSize: FiveMB,\r\n      },\r\n      metadata: {\r\n        disk: Disk.uploads,\r\n      },\r\n      onSuccess: entry => {\r\n        setValue('passportScan', entry);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      startIcon={<DocumentScannerIcon className=\"text-primary\" />}\r\n      onClick={() => handleUpload()}\r\n    >\r\n      <Trans message=\"Upload passport scan\" />\r\n    </Button>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\r\nimport React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {\r\n  CreateBackstageRequestPayload,\r\n  useCreateBackstageRequest,\r\n} from '@app/web-player/backstage/requests/use-create-backstage-request';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useBackstageRequestForm} from '@app/web-player/backstage/backstage-request-form/use-backstage-request-form';\r\nimport {BackstageRoleSelect} from '@app/web-player/backstage/backstage-request-form/backstage-role-select';\r\nimport {BackstageFormAttachments} from '@app/web-player/backstage/backstage-request-form/backstage-form-attachments';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\n\r\nexport function BackstageRequestFormPage() {\r\n  const {pathname} = useLocation();\r\n  const requestType = pathname\r\n    .split('/')\r\n    .pop() as CreateBackstageRequestPayload['type'];\r\n  return (\r\n    <BackstageLayout>\r\n      <div className=\"mx-auto my-40 max-w-780\">\r\n        <h1 className=\"text-center text-3xl font-medium md:text-5xl\">\r\n          <Trans message=\"Tell us about yourself\" />\r\n        </h1>\r\n        <ClaimForm requestType={requestType} />\r\n      </div>\r\n    </BackstageLayout>\r\n  );\r\n}\r\n\r\ninterface ClaimFormProps {\r\n  requestType: CreateBackstageRequestPayload['type'];\r\n}\r\nfunction ClaimForm({requestType}: ClaimFormProps) {\r\n  const navigate = useNavigate();\r\n  const form = useBackstageRequestForm(requestType);\r\n  const submitRequest = useCreateBackstageRequest(form);\r\n\r\n  return (\r\n    <FileUploadProvider>\r\n      <Form\r\n        form={form}\r\n        onSubmit={values => {\r\n          submitRequest.mutate(values, {\r\n            onSuccess: response => {\r\n              navigate(\r\n                `/backstage/requests/${response.request.id}/request-submitted`,\r\n                {replace: true},\r\n              );\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        <FormImageSelector\r\n          name=\"image\"\r\n          diskPrefix=\"artist_media\"\r\n          variant=\"avatar\"\r\n          previewSize=\"w-160 h-160\"\r\n          className=\"mx-auto my-30 max-w-max\"\r\n          disabled={requestType === 'become-artist'}\r\n        />\r\n        {requestType !== 'become-artist' && (\r\n          <FormNormalizedModelField\r\n            className=\"mb-24\"\r\n            label={<Trans message=\"Select artist\" />}\r\n            name=\"artist_id\"\r\n            endpoint=\"search/suggestions/artist\"\r\n            queryParams={{\r\n              listAll: 'true',\r\n              excludeSelf: 'true',\r\n            }}\r\n            disabled={requestType === 'verify-artist'}\r\n          />\r\n        )}\r\n        {requestType === 'become-artist' && (\r\n          <FormTextField\r\n            required\r\n            name=\"artist_name\"\r\n            label={<Trans message=\"Your artist name\" />}\r\n            className=\"mb-24\"\r\n          />\r\n        )}\r\n        <div className=\"mb-24 items-center gap-24 md:flex\">\r\n          <FormTextField\r\n            required\r\n            name=\"first_name\"\r\n            label={<Trans message=\"First name\" />}\r\n            className=\"mb-24 flex-auto md:mb-0\"\r\n          />\r\n          <FormTextField\r\n            required\r\n            name=\"last_name\"\r\n            label={<Trans message=\"Last name\" />}\r\n            className=\"flex-auto\"\r\n          />\r\n        </div>\r\n        {requestType === 'claim-artist' && <BackstageRoleSelect />}\r\n        <FormTextField\r\n          name=\"company\"\r\n          label={<Trans message=\"Company (optional)\" />}\r\n          className=\"mb-24\"\r\n        />\r\n        <BackstageFormAttachments />\r\n        <div className=\"flex justify-between gap-24 border-t pt-34\">\r\n          <Button\r\n            variant=\"raised\"\r\n            color=\"white\"\r\n            elementType={Link}\r\n            to=\"..\"\r\n            relative=\"path\"\r\n            className=\"min-w-140\"\r\n            radius=\"rounded-full\"\r\n          >\r\n            <Trans message=\"Go back\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"min-w-140\"\r\n            radius=\"rounded-full\"\r\n            disabled={submitRequest.isPending}\r\n          >\r\n            <Trans message=\"Submit request\" />\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n","import {CheckIcon} from '@common/icons/material/Check';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useBackstageRequest} from '@app/web-player/backstage/requests/use-backstage-request';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\n\r\nexport function BackstageRequestSubmittedPage() {\r\n  const {isLoading} = useBackstageRequest();\r\n\r\n  return (\r\n    <BackstageLayout>\r\n      <div className=\"mx-auto my-40 max-w-[590px]\">\r\n        {isLoading ? <FullPageLoader className=\"my-40\" /> : <SuccessMessage />}\r\n      </div>\r\n    </BackstageLayout>\r\n  );\r\n}\r\n\r\nfunction SuccessMessage() {\r\n  return (\r\n    <div>\r\n      <div className=\"text-center\">\r\n        <CheckIcon size=\"text-6xl\" />\r\n      </div>\r\n\r\n      <h1 className=\"mb-48 mt-24 text-center text-5xl font-medium\">\r\n        <Trans message=\"We've got your request\" />\r\n      </h1>\r\n\r\n      <ul className=\"mb-60 list-inside list-disc px-20\">\r\n        <li className=\"pb-10\">\r\n          <Trans message=\"Our support team will review it and send you an email within 3 days!\" />\r\n        </li>\r\n        <li className=\"pb-10\">\r\n          <Trans message=\"Don't submit another request until you hear from us.\" />\r\n        </li>\r\n        <li>\r\n          <Trans message=\"If this artist profile is already claimed, ask an admin on your team to invite you.\" />\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"text-center\">\r\n        <Button\r\n          variant=\"raised\"\r\n          color=\"primary\"\r\n          elementType={Link}\r\n          to=\"/\"\r\n          className=\"min-w-140\"\r\n          radius=\"rounded-full\"\r\n        >\r\n          <Trans message=\"Got It\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {RouteObject, useRoutes} from 'react-router-dom';\r\nimport React from 'react';\r\nimport {UpdateTrackPage} from '@app/admin/tracks-datatable-page/crupdate/update-track-page';\r\nimport {UploadPage} from '@app/web-player/backstage/upload-page/upload-page';\r\nimport {AuthRoute} from '@common/auth/guards/auth-route';\r\nimport {CreateTrackPage} from '@app/admin/tracks-datatable-page/crupdate/create-track-page';\r\nimport {CreateAlbumPage} from '@app/admin/albums-datatable-page/create-album-page';\r\nimport {UpdateAlbumPage} from '@app/admin/albums-datatable-page/update-album-page';\r\nimport {BackstageTypeSelector} from '@app/web-player/backstage/backstage-type-selector';\r\nimport {BackstageRequestFormPage} from '@app/web-player/backstage/backstage-request-form/backstage-request-form-page';\r\nimport {BackstageRequestSubmittedPage} from '@app/web-player/backstage/backstage-request-submitted-page';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\nimport {UpdateArtistPage} from '@app/admin/artist-datatable-page/update-artist-page';\r\nimport {BackstageArtistInsights} from '@app/web-player/backstage/insights/backstage-artist-insights';\r\nimport {BackstageAlbumInsights} from '@app/web-player/backstage/insights/backstage-album-insights';\r\nimport {BackstageTrackInsights} from '@app/web-player/backstage/insights/backstage-track-insights';\r\n\r\nconst RouteConfig: RouteObject[] = [\r\n  {\r\n    path: 'upload',\r\n    element: (\r\n      <AuthRoute permission=\"music.create\">\r\n        <UploadPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n\r\n  // Backstage request form\r\n  {\r\n    path: 'requests',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageTypeSelector />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/verify-artist',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestFormPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/become-artist',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestFormPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/claim-artist',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestFormPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/:requestId/request-submitted',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestSubmittedPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n\r\n  // Tracks\r\n  {\r\n    path: 'tracks/new',\r\n    element: (\r\n      <AuthRoute permission=\"music.create\">\r\n        <BackstageLayout>\r\n          <CreateTrackPage />\r\n        </BackstageLayout>\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'tracks/:trackId/edit',\r\n    element: (\r\n      <BackstageLayout>\r\n        <UpdateTrackPage />\r\n      </BackstageLayout>\r\n    ),\r\n  },\r\n  {\r\n    path: 'tracks/:trackId/insights',\r\n    element: <BackstageTrackInsights />,\r\n  },\r\n\r\n  // Albums\r\n  {\r\n    path: 'albums/new',\r\n    element: (\r\n      <AuthRoute permission=\"music.create\">\r\n        <BackstageLayout>\r\n          <CreateAlbumPage wrapInContainer={false} />\r\n        </BackstageLayout>\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'albums/:albumId/edit',\r\n    element: (\r\n      <BackstageLayout>\r\n        <UpdateAlbumPage wrapInContainer={false} />\r\n      </BackstageLayout>\r\n    ),\r\n  },\r\n  {\r\n    path: 'albums/:albumId/insights',\r\n    element: <BackstageAlbumInsights />,\r\n  },\r\n\r\n  // Artists\r\n  {\r\n    path: 'artists/:artistId/edit',\r\n    element: (\r\n      <BackstageLayout>\r\n        <UpdateArtistPage wrapInContainer={false} showExternalFields={false} />\r\n      </BackstageLayout>\r\n    ),\r\n  },\r\n  {\r\n    path: 'artists/:artistId/insights',\r\n    element: <BackstageArtistInsights />,\r\n  },\r\n];\r\n\r\nexport default function BackstageRoutes() {\r\n  return useRoutes(RouteConfig);\r\n}\r\n"],"names":["claimLabelImage","claimArtistImage","BackstageTypeSelector","branding","useSettings","isArtist","usePrimaryArtistForCurrentUser","jsx","BackstageLayout","jsxs","Trans","ClaimPanelLayout","title","image","link","className","Link","clsx","endpoint","useCreateBackstageRequest","form","useMutation","payload","createRequest","queryClient","DatatableDataQueryKey","err","onFormQueryError","apiClient","_a","r","useBackstageRequestForm","requestType","user","useAuth","primaryArtist","artistId","useForm","BackstageRoleSelect","FormSelect","Item","BackstageFormAttachments","social","watch","setValue","useFormContext","connectSocial","useSocialLogin","passportScan","Button","TwitterIcon","e","toast","message","_b","FacebookIcon","PassportScanButton","AttachmentLayout","DocumentScannerIcon","prettyBytes","SocialServiceAttachment","service","disconnectSocial","data","useUser","account","s","icon","description","onRemove","isDisabled","cloneElement","IconButton","CloseIcon","FiveMB","selectAndUploadFile","useActiveUpload","handleUpload","UploadInputType","Disk","entry","BackstageRequestFormPage","pathname","useLocation","ClaimForm","navigate","useNavigate","submitRequest","FileUploadProvider","Form","values","response","FormImageSelector","FormNormalizedModelField","FormTextField","BackstageRequestSubmittedPage","isLoading","useBackstageRequest","FullPageLoader","SuccessMessage","CheckIcon","RouteConfig","AuthRoute","UploadPage","CreateTrackPage","UpdateTrackPage","BackstageTrackInsights","CreateAlbumPage","UpdateAlbumPage","BackstageAlbumInsights","UpdateArtistPage","BackstageArtistInsights","BackstageRoutes","useRoutes"],"mappings":"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"}