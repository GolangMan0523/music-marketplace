{"version":3,"file":"backstage-routes-67e7bf53.mjs","sources":["../../../resources/client/web-player/backstage/images/claim-label.jpg","../../../resources/client/web-player/backstage/images/claim-artist.jpg","../../../resources/client/web-player/backstage/backstage-type-selector.tsx","../../../resources/client/web-player/backstage/requests/use-create-backstage-request.ts","../../../resources/client/web-player/backstage/backstage-request-form/use-backstage-request-form.ts","../../../resources/client/web-player/backstage/backstage-request-form/backstage-role-select.tsx","../../../resources/client/web-player/backstage/backstage-request-form/backstage-form-attachments.tsx","../../../resources/client/web-player/backstage/backstage-request-form/backstage-request-form-page.tsx","../../../resources/client/web-player/backstage/backstage-request-submitted-page.tsx","../../../resources/client/web-player/backstage/backstage-routes.tsx"],"sourcesContent":["export default \"__VITE_ASSET__dceebe86__\"","export default \"__VITE_ASSET__95695327__\"","import {Trans} from '@common/i18n/trans';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport claimLabelImage from './images/claim-label.jpg';\r\nimport claimArtistImage from './images/claim-artist.jpg';\r\nimport {ReactNode} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\r\nimport clsx from 'clsx';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\n\r\nexport function BackstageTypeSelector() {\r\n  const {branding} = useSettings();\r\n  const isArtist = usePrimaryArtistForCurrentUser() != null;\r\n  return (\r\n    <BackstageLayout>\r\n      <div className=\"max-w-780 my:20 md:my-40 mx-auto\">\r\n        <h1 className=\"text-3xl md:text-5xl text-center font-medium mb-10\">\r\n          <Trans\r\n            message=\"Get access to :siteName for artists\"\r\n            values={{siteName: branding.site_name}}\r\n          />\r\n        </h1>\r\n        <h2 className=\"text-lg font-medium mb-54 text-center\">\r\n          <Trans message=\"First, select the type of your request\" />\r\n        </h2>\r\n        <div className=\"md:flex items-center gap-54\">\r\n          <ClaimPanelLayout\r\n            className=\"mb-14 md:mb-0\"\r\n            title={\r\n              isArtist ? (\r\n                <Trans message=\"Get verified\" />\r\n              ) : (\r\n                <Trans message=\"Become an artist\" />\r\n              )\r\n            }\r\n            link={isArtist ? 'verify-artist' : 'become-artist'}\r\n            image={claimArtistImage}\r\n          />\r\n          <ClaimPanelLayout\r\n            title={<Trans message=\"Claim existing artist\" />}\r\n            link=\"claim-artist\"\r\n            image={claimLabelImage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BackstageLayout>\r\n  );\r\n}\r\n\r\ninterface ClaimPanelLayoutProps {\r\n  title: ReactNode;\r\n  link: string;\r\n  image: string;\r\n  className?: string;\r\n}\r\nfunction ClaimPanelLayout({\r\n  title,\r\n  image,\r\n  link,\r\n  className,\r\n}: ClaimPanelLayoutProps) {\r\n  return (\r\n    <Link\r\n      to={link}\r\n      className={clsx(\r\n        'block flex-auto flex flex-col items-center justify-center p-34 border border-2 rounded-md bg-background transition-shadow hover:shadow-xl hover:bg-primary/4 cursor-pointer',\r\n        className\r\n      )}\r\n    >\r\n      <h3 className=\"text-lg mb-10 font-medium\">{title}</h3>\r\n      <img\r\n        className=\"w-132 h-132 object-cover rounded-full\"\r\n        src={image}\r\n        alt=\"\"\r\n      />\r\n    </Link>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\r\n\r\nconst endpoint = 'backstage-request';\r\n\r\ninterface Response extends BackendResponse {\r\n  request: BackstageRequest;\r\n}\r\n\r\nexport interface CreateBackstageRequestPayload {\r\n  type: 'verify-artist' | 'become-artist' | 'claim-artist';\r\n  artist_id: number | 'CURRENT_USER';\r\n  artist_name: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  image: string;\r\n  role: string;\r\n  company: string;\r\n  passportScan?: Omit<FileEntry, 'parent' | 'children'>;\r\n}\r\n\r\nexport function useCreateBackstageRequest(\r\n  form: UseFormReturn<CreateBackstageRequestPayload>,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (payload: CreateBackstageRequestPayload) =>\r\n      createRequest(payload),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint),\r\n      });\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createRequest(payload: CreateBackstageRequestPayload) {\r\n  return apiClient\r\n    .post<Response>(endpoint, {\r\n      artist_name: payload.artist_name,\r\n      artist_id: payload.artist_id,\r\n      type: payload.type,\r\n      data: {\r\n        first_name: payload.first_name,\r\n        last_name: payload.last_name,\r\n        image: payload.image,\r\n        role: payload.role,\r\n        company: payload.company,\r\n        passport_scan_id: payload.passportScan?.id,\r\n      },\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","import {useAuth} from '@common/auth/use-auth';\r\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\r\nimport {useForm} from 'react-hook-form';\r\nimport {CreateBackstageRequestPayload} from '@app/web-player/backstage/requests/use-create-backstage-request';\r\n\r\nexport function useBackstageRequestForm(\r\n  requestType: CreateBackstageRequestPayload['type']\r\n) {\r\n  const {user} = useAuth();\r\n  const primaryArtist = usePrimaryArtistForCurrentUser();\r\n\r\n  let artistId: number | 'CURRENT_USER' | undefined;\r\n  if (requestType === 'verify-artist') {\r\n    artistId = primaryArtist?.id as number;\r\n  } else if (requestType === 'become-artist') {\r\n    artistId = 'CURRENT_USER';\r\n  }\r\n\r\n  return useForm<CreateBackstageRequestPayload>({\r\n    defaultValues: {\r\n      artist_id: artistId,\r\n      artist_name: user?.display_name,\r\n      first_name: user?.first_name,\r\n      last_name: user?.last_name,\r\n      image: primaryArtist?.image || user?.avatar,\r\n      type: requestType,\r\n      role: requestType === 'claim-artist' ? 'artist' : undefined,\r\n    },\r\n  });\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {FormSelect} from '@common/ui/forms/select/select';\r\nimport React from 'react';\r\n\r\nexport function BackstageRoleSelect() {\r\n  return (\r\n    <FormSelect\r\n      name=\"role\"\r\n      label={<Trans message=\"Role\" />}\r\n      selectionMode=\"single\"\r\n      className=\"mb-24\"\r\n    >\r\n      <Item value=\"artist\">\r\n        <Trans message=\"Artist\" />\r\n      </Item>\r\n      <Item value=\"agent\">\r\n        <Trans message=\"Agent\" />\r\n      </Item>\r\n      <Item value=\"composer\">\r\n        <Trans message=\"Composer\" />\r\n      </Item>\r\n      <Item value=\"label\">\r\n        <Trans message=\"Label\" />\r\n      </Item>\r\n      <Item value=\"manager\">\r\n        <Trans message=\"Manager\" />\r\n      </Item>\r\n      <Item value=\"musician\">\r\n        <Trans message=\"Musician\" />\r\n      </Item>\r\n      <Item value=\"producer\">\r\n        <Trans message=\"Producer\" />\r\n      </Item>\r\n      <Item value=\"publisher\">\r\n        <Trans message=\"Publisher\" />\r\n      </Item>\r\n      <Item value=\"songwriter\">\r\n        <Trans message=\"Songwriter\" />\r\n      </Item>\r\n    </FormSelect>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {CreateBackstageRequestPayload} from '@app/web-player/backstage/requests/use-create-backstage-request';\r\nimport {useSocialLogin} from '@common/auth/requests/use-social-login';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {TwitterIcon} from '@common/icons/social/twitter';\r\nimport {useUser} from '@common/auth/ui/use-user';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {FacebookIcon} from '@common/icons/social/facebook';\r\nimport {DocumentScannerIcon} from '@common/icons/material/DocumentScanner';\r\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\r\nimport React, {cloneElement, ReactElement, ReactNode} from 'react';\r\nimport {SvgIconProps} from '@common/icons/svg-icon';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {useActiveUpload} from '@common/uploads/uploader/use-active-upload';\r\nimport {UploadInputType} from '@common/uploads/types/upload-input-config';\r\nimport {Disk} from '@common/uploads/types/backend-metadata';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\nexport function BackstageFormAttachments() {\r\n  const {social} = useSettings();\r\n  const {watch, setValue} = useFormContext<CreateBackstageRequestPayload>();\r\n  const {connectSocial} = useSocialLogin();\r\n  const passportScan = watch('passportScan');\r\n\r\n  return (\r\n    <div className=\"py-20\">\r\n      <div className=\"mb-14 text-sm\">\r\n        <Trans message=\"Speed up the process by connecting artist social media accounts or uploading your passport scan.\" />\r\n      </div>\r\n      {social?.twitter?.enable && (\r\n        <Button\r\n          variant=\"outline\"\r\n          startIcon={<TwitterIcon className=\"text-twitter\" />}\r\n          className=\"mr-10 mb-10 md:mb-0\"\r\n          onClick={async () => {\r\n            const e = await connectSocial('twitter');\r\n            if (e?.status === 'SUCCESS') {\r\n              queryClient.invalidateQueries({queryKey: ['users']});\r\n              toast(message('Connected twitter account'));\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Connect to twitter\" />\r\n        </Button>\r\n      )}\r\n      {social?.facebook?.enable && (\r\n        <Button\r\n          variant=\"outline\"\r\n          startIcon={<FacebookIcon className=\"text-facebook\" />}\r\n          className=\"mr-10 mb-10 md:mb-0\"\r\n          onClick={async () => {\r\n            const e = await connectSocial('facebook');\r\n            if (e?.status === 'SUCCESS') {\r\n              queryClient.invalidateQueries({queryKey: ['users']});\r\n              toast(message('Connected facebook account'));\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Connect to facebook\" />\r\n        </Button>\r\n      )}\r\n      <PassportScanButton />\r\n      <div className=\"mt-20\">\r\n        {passportScan && (\r\n          <AttachmentLayout\r\n            icon={<DocumentScannerIcon />}\r\n            title={<Trans message=\"Passport scan\" />}\r\n            description={`${passportScan.name} (${prettyBytes(\r\n              passportScan.file_size,\r\n            )})`}\r\n            onRemove={() => {\r\n              setValue('passportScan', undefined);\r\n            }}\r\n          />\r\n        )}\r\n        <SocialServiceAttachment service=\"twitter\" />\r\n        <SocialServiceAttachment service=\"facebook\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SocialServiceAttachmentProps {\r\n  service: 'twitter' | 'facebook';\r\n}\r\nfunction SocialServiceAttachment({service}: SocialServiceAttachmentProps) {\r\n  const {disconnectSocial} = useSocialLogin();\r\n  const {data} = useUser('me', {\r\n    with: ['social_profiles'],\r\n  });\r\n  const account = data?.user.social_profiles.find(\r\n    s => s.service_name === service,\r\n  );\r\n  if (!account) return null;\r\n\r\n  return (\r\n    <AttachmentLayout\r\n      icon={\r\n        service === 'twitter' ? (\r\n          <TwitterIcon className=\"text-twitter\" />\r\n        ) : (\r\n          <FacebookIcon className=\"text-facebook\" />\r\n        )\r\n      }\r\n      title={\r\n        <span className=\"capitalize\">\r\n          <Trans message=\":service account\" values={{service}} />\r\n        </span>\r\n      }\r\n      description={account.username}\r\n      isDisabled={disconnectSocial.isPending}\r\n      onRemove={() => {\r\n        disconnectSocial.mutate(\r\n          {service: 'twitter'},\r\n          {\r\n            onSuccess: () => {\r\n              queryClient.invalidateQueries({queryKey: ['users']});\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ninterface AttachmentLayoutProps {\r\n  icon: ReactElement<SvgIconProps>;\r\n  title: ReactNode;\r\n  description: ReactNode;\r\n  onRemove: () => void;\r\n  isDisabled?: boolean;\r\n}\r\nfunction AttachmentLayout({\r\n  icon,\r\n  title,\r\n  description,\r\n  onRemove,\r\n  isDisabled,\r\n}: AttachmentLayoutProps) {\r\n  return (\r\n    <div className=\"flex items-center gap-8 border rounded px-14 py-8 mb-8\">\r\n      <div className=\"flex-shrink-0 text-muted\">\r\n        {cloneElement(icon, {size: 'lg'})}\r\n      </div>\r\n      <div>\r\n        <div className=\"text-xs text-muted\">{title}</div>\r\n        <div className=\"text-sm\">{description}</div>\r\n      </div>\r\n      <IconButton\r\n        className=\"flex-shrink-0 ml-auto\"\r\n        onClick={() => onRemove()}\r\n        disabled={isDisabled}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FiveMB = 5 * 1024 * 1024;\r\nfunction PassportScanButton() {\r\n  const {setValue} = useFormContext<CreateBackstageRequestPayload>();\r\n  const {selectAndUploadFile} = useActiveUpload();\r\n\r\n  const handleUpload = () => {\r\n    selectAndUploadFile({\r\n      showToastOnRestrictionFail: true,\r\n      restrictions: {\r\n        allowedFileTypes: [UploadInputType.image],\r\n        maxFileSize: FiveMB,\r\n      },\r\n      metadata: {\r\n        disk: Disk.uploads,\r\n      },\r\n      onSuccess: entry => {\r\n        setValue('passportScan', entry);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      startIcon={<DocumentScannerIcon className=\"text-primary\" />}\r\n      onClick={() => handleUpload()}\r\n    >\r\n      <Trans message=\"Upload passport scan\" />\r\n    </Button>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\r\nimport React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {\r\n  CreateBackstageRequestPayload,\r\n  useCreateBackstageRequest,\r\n} from '@app/web-player/backstage/requests/use-create-backstage-request';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useBackstageRequestForm} from '@app/web-player/backstage/backstage-request-form/use-backstage-request-form';\r\nimport {BackstageRoleSelect} from '@app/web-player/backstage/backstage-request-form/backstage-role-select';\r\nimport {BackstageFormAttachments} from '@app/web-player/backstage/backstage-request-form/backstage-form-attachments';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\n\r\nexport function BackstageRequestFormPage() {\r\n  const {pathname} = useLocation();\r\n  const requestType = pathname\r\n    .split('/')\r\n    .pop() as CreateBackstageRequestPayload['type'];\r\n  return (\r\n    <BackstageLayout>\r\n      <div className=\"mx-auto my-40 max-w-780\">\r\n        <h1 className=\"text-center text-3xl font-medium md:text-5xl\">\r\n          <Trans message=\"Tell us about yourself\" />\r\n        </h1>\r\n        <ClaimForm requestType={requestType} />\r\n      </div>\r\n    </BackstageLayout>\r\n  );\r\n}\r\n\r\ninterface ClaimFormProps {\r\n  requestType: CreateBackstageRequestPayload['type'];\r\n}\r\nfunction ClaimForm({requestType}: ClaimFormProps) {\r\n  const navigate = useNavigate();\r\n  const form = useBackstageRequestForm(requestType);\r\n  const submitRequest = useCreateBackstageRequest(form);\r\n\r\n  return (\r\n    <FileUploadProvider>\r\n      <Form\r\n        form={form}\r\n        onSubmit={values => {\r\n          submitRequest.mutate(values, {\r\n            onSuccess: response => {\r\n              navigate(\r\n                `/backstage/requests/${response.request.id}/request-submitted`,\r\n                {replace: true},\r\n              );\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        <FormImageSelector\r\n          name=\"image\"\r\n          diskPrefix=\"artist_media\"\r\n          variant=\"avatar\"\r\n          previewSize=\"w-160 h-160\"\r\n          className=\"mx-auto my-30 max-w-max\"\r\n          disabled={requestType === 'become-artist'}\r\n        />\r\n        {requestType !== 'become-artist' && (\r\n          <FormNormalizedModelField\r\n            className=\"mb-24\"\r\n            label={<Trans message=\"Select artist\" />}\r\n            name=\"artist_id\"\r\n            endpoint=\"search/suggestions/artist\"\r\n            queryParams={{\r\n              listAll: 'true',\r\n              excludeSelf: 'true',\r\n            }}\r\n            disabled={requestType === 'verify-artist'}\r\n          />\r\n        )}\r\n        {requestType === 'become-artist' && (\r\n          <FormTextField\r\n            required\r\n            name=\"artist_name\"\r\n            label={<Trans message=\"Your artist name\" />}\r\n            className=\"mb-24\"\r\n          />\r\n        )}\r\n        <div className=\"mb-24 items-center gap-24 md:flex\">\r\n          <FormTextField\r\n            required\r\n            name=\"first_name\"\r\n            label={<Trans message=\"First name\" />}\r\n            className=\"mb-24 flex-auto md:mb-0\"\r\n          />\r\n          <FormTextField\r\n            required\r\n            name=\"last_name\"\r\n            label={<Trans message=\"Last name\" />}\r\n            className=\"flex-auto\"\r\n          />\r\n        </div>\r\n        {requestType === 'claim-artist' && <BackstageRoleSelect />}\r\n        <FormTextField\r\n          name=\"company\"\r\n          label={<Trans message=\"Company (optional)\" />}\r\n          className=\"mb-24\"\r\n        />\r\n        <BackstageFormAttachments />\r\n        <div className=\"flex justify-between gap-24 border-t pt-34\">\r\n          <Button\r\n            variant=\"raised\"\r\n            color=\"white\"\r\n            elementType={Link}\r\n            to=\"..\"\r\n            relative=\"path\"\r\n            className=\"min-w-140\"\r\n            radius=\"rounded-full\"\r\n          >\r\n            <Trans message=\"Go back\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"min-w-140\"\r\n            radius=\"rounded-full\"\r\n            disabled={submitRequest.isPending}\r\n          >\r\n            <Trans message=\"Submit request\" />\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n","import {CheckIcon} from '@common/icons/material/Check';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useBackstageRequest} from '@app/web-player/backstage/requests/use-backstage-request';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\n\r\nexport function BackstageRequestSubmittedPage() {\r\n  const {isLoading} = useBackstageRequest();\r\n\r\n  return (\r\n    <BackstageLayout>\r\n      <div className=\"mx-auto my-40 max-w-[590px]\">\r\n        {isLoading ? <FullPageLoader className=\"my-40\" /> : <SuccessMessage />}\r\n      </div>\r\n    </BackstageLayout>\r\n  );\r\n}\r\n\r\nfunction SuccessMessage() {\r\n  return (\r\n    <div>\r\n      <div className=\"text-center\">\r\n        <CheckIcon size=\"text-6xl\" />\r\n      </div>\r\n\r\n      <h1 className=\"mb-48 mt-24 text-center text-5xl font-medium\">\r\n        <Trans message=\"We've got your request\" />\r\n      </h1>\r\n\r\n      <ul className=\"mb-60 list-inside list-disc px-20\">\r\n        <li className=\"pb-10\">\r\n          <Trans message=\"Our support team will review it and send you an email within 3 days!\" />\r\n        </li>\r\n        <li className=\"pb-10\">\r\n          <Trans message=\"Don't submit another request until you hear from us.\" />\r\n        </li>\r\n        <li>\r\n          <Trans message=\"If this artist profile is already claimed, ask an admin on your team to invite you.\" />\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"text-center\">\r\n        <Button\r\n          variant=\"raised\"\r\n          color=\"primary\"\r\n          elementType={Link}\r\n          to=\"/\"\r\n          className=\"min-w-140\"\r\n          radius=\"rounded-full\"\r\n        >\r\n          <Trans message=\"Got It\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {RouteObject, useRoutes} from 'react-router-dom';\r\nimport React from 'react';\r\nimport {UpdateTrackPage} from '@app/admin/tracks-datatable-page/crupdate/update-track-page';\r\nimport {UploadPage} from '@app/web-player/backstage/upload-page/upload-page';\r\nimport {AuthRoute} from '@common/auth/guards/auth-route';\r\nimport {CreateTrackPage} from '@app/admin/tracks-datatable-page/crupdate/create-track-page';\r\nimport {CreateAlbumPage} from '@app/admin/albums-datatable-page/create-album-page';\r\nimport {UpdateAlbumPage} from '@app/admin/albums-datatable-page/update-album-page';\r\nimport {BackstageTypeSelector} from '@app/web-player/backstage/backstage-type-selector';\r\nimport {BackstageRequestFormPage} from '@app/web-player/backstage/backstage-request-form/backstage-request-form-page';\r\nimport {BackstageRequestSubmittedPage} from '@app/web-player/backstage/backstage-request-submitted-page';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\nimport {UpdateArtistPage} from '@app/admin/artist-datatable-page/update-artist-page';\r\nimport {BackstageArtistInsights} from '@app/web-player/backstage/insights/backstage-artist-insights';\r\nimport {BackstageAlbumInsights} from '@app/web-player/backstage/insights/backstage-album-insights';\r\nimport {BackstageTrackInsights} from '@app/web-player/backstage/insights/backstage-track-insights';\r\n\r\nconst RouteConfig: RouteObject[] = [\r\n  {\r\n    path: 'upload',\r\n    element: (\r\n      <AuthRoute permission=\"music.create\">\r\n        <UploadPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n\r\n  // Backstage request form\r\n  {\r\n    path: 'requests',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageTypeSelector />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/verify-artist',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestFormPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/become-artist',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestFormPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/claim-artist',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestFormPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'requests/:requestId/request-submitted',\r\n    element: (\r\n      <AuthRoute permission=\"backstageRequests.create\">\r\n        <BackstageRequestSubmittedPage />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n\r\n  // Tracks\r\n  {\r\n    path: 'tracks/new',\r\n    element: (\r\n      <AuthRoute permission=\"music.create\">\r\n        <BackstageLayout>\r\n          <CreateTrackPage />\r\n        </BackstageLayout>\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'tracks/:trackId/edit',\r\n    element: (\r\n      <BackstageLayout>\r\n        <UpdateTrackPage />\r\n      </BackstageLayout>\r\n    ),\r\n  },\r\n  {\r\n    path: 'tracks/:trackId/insights',\r\n    element: <BackstageTrackInsights />,\r\n  },\r\n\r\n  // Albums\r\n  {\r\n    path: 'albums/new',\r\n    element: (\r\n      <AuthRoute permission=\"music.create\">\r\n        <BackstageLayout>\r\n          <CreateAlbumPage wrapInContainer={false} />\r\n        </BackstageLayout>\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: 'albums/:albumId/edit',\r\n    element: (\r\n      <BackstageLayout>\r\n        <UpdateAlbumPage wrapInContainer={false} />\r\n      </BackstageLayout>\r\n    ),\r\n  },\r\n  {\r\n    path: 'albums/:albumId/insights',\r\n    element: <BackstageAlbumInsights />,\r\n  },\r\n\r\n  // Artists\r\n  {\r\n    path: 'artists/:artistId/edit',\r\n    element: (\r\n      <BackstageLayout>\r\n        <UpdateArtistPage wrapInContainer={false} showExternalFields={false} />\r\n      </BackstageLayout>\r\n    ),\r\n  },\r\n  {\r\n    path: 'artists/:artistId/insights',\r\n    element: <BackstageArtistInsights />,\r\n  },\r\n];\r\n\r\nexport default function BackstageRoutes() {\r\n  return useRoutes(RouteConfig);\r\n}\r\n"],"names":[],"mappings":"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"}