{"version":3,"file":"web-player-routes-2e14812d.mjs","sources":["../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/web-player/library/like-icon-button.tsx","../../../resources/client/web-player/artists/artist-grid-item.tsx","../../../resources/client/web-player/albums/album-grid-item.tsx","../../../resources/client/web-player/genres/genre-image.tsx","../../../resources/client/web-player/genres/genre-grid-item.tsx","../../../resources/client/web-player/tracks/track-grid-item.tsx","../../../resources/client/web-player/users/user-grid-item.tsx","../../../resources/client/web-player/channels/channel-content-grid-item.tsx","../../../resources/client/web-player/channels/antenna-icon.tsx","../../../resources/client/web-player/channels/channel-heading.tsx","../../../common/resources/client/ui/infinite-scroll/use-infinite-data.ts","../../../common/resources/client/channels/requests/use-paginated-channel-content.ts","../../../common/resources/client/channels/requests/use-channel-content.ts","../../../resources/client/web-player/channels/channel-content-grid.tsx","../../../resources/client/web-player/tracks/track-table/use-track-table-meta.ts","../../../resources/client/web-player/tracks/hooks/use-is-track-cued.ts","../../../resources/client/web-player/tracks/hooks/use-is-track-playing.ts","../../../resources/client/web-player/tracks/track-table/toggle-playback-column.tsx","../../../resources/client/web-player/tracks/track-table/track-name-column.tsx","../../../resources/client/web-player/tracks/context-dialog/table-track-context-dialog.tsx","../../../resources/client/web-player/playlists/requests/use-remove-tracks-from-playlist.ts","../../../resources/client/web-player/playlists/playlist-page/playlist-track-context-dialog.tsx","../../../resources/client/web-player/tracks/track-table/track-options-column.tsx","../../../resources/client/web-player/tracks/track-table/track-table.tsx","../../../resources/client/web-player/playlists/virtual-table-body.tsx","../../../resources/client/web-player/channels/channel-track-table.tsx","../../../resources/client/web-player/tracks/waveform/waveform-animation.ts","../../../resources/client/web-player/tracks/requests/use-track-wave-data.ts","../../../resources/client/web-player/tracks/waveform/draw-waveform.ts","../../../resources/client/web-player/player-controls/seekbar/use-track-seekbar.ts","../../../resources/client/web-player/tracks/waveform/comment-bar-context.tsx","../../../resources/client/web-player/tracks/waveform/comment-bar.tsx","../../../resources/client/GlobalContext.tsx","../../../resources/client/web-player/tracks/waveform/waveform.tsx","../../../resources/client/web-player/player-controls/seekbar/track-seekbar.tsx","../../../common/resources/client/comments/requests/use-create-comment.ts","../../../common/resources/client/comments/new-comment-form.tsx","../../../resources/client/web-player/tracks/waveform/comment-bar-new-comment-form.tsx","../../../resources/client/web-player/library/like-button.tsx","../../../resources/client/web-player/reposts/repost-button.tsx","../../../resources/client/web-player/tracks/media-item-stats.tsx","../../../resources/client/web-player/tracks/track-actions-bar.tsx","../../../resources/client/web-player/tracks/track-list/track-list-item.tsx","../../../resources/client/web-player/tracks/track-list/track-list.tsx","../../../resources/client/web-player/channels/channel-track-list.tsx","../../../resources/client/web-player/channels/channel-content-carousel.tsx","../../../resources/client/web-player/channels/channel-content.tsx","../../../common/resources/client/admin/ads/ad-host.tsx","../../../resources/client/web-player/channels/channel-page.tsx","../../../resources/client/web-player/tracks/requests/find-youtube-videos-for-track.ts","../../../resources/client/web-player/state/player-overlay-store.ts","../../../common/resources/client/player/providers/youtube/youtube-types.ts","../../../resources/client/web-player/state/player-store-options.ts","../../../common/resources/client/player/hooks/use-is-media-playing.ts","../../../resources/client/web-player/overlay/use-mini-player-is-hidden.ts","../../../resources/client/web-player/layout/queue/queue-track-context-dialog.tsx","../../../resources/client/web-player/layout/queue/queue-sidenav.tsx","../../../resources/client/web-player/player-controls/use-cued-track.ts","../../../common/resources/client/player/hooks/use-current-time.ts","../../../common/resources/client/icons/media/media-play.tsx","../../../common/resources/client/icons/media/media-pause.tsx","../../../common/resources/client/player/ui/controls/play-button.tsx","../../../common/resources/client/icons/media/media-previous.tsx","../../../common/resources/client/player/ui/controls/previous-button.tsx","../../../common/resources/client/icons/media/media-next.tsx","../../../common/resources/client/player/ui/controls/next-button.tsx","../../../resources/client/web-player/player-controls/buffering-indicator.tsx","../../../resources/client/web-player/player-controls/mobile-player-controls.tsx","../../../common/resources/client/player/ui/controls/seeking/seekbar.tsx","../../../common/resources/client/player/ui/controls/formatted-current-time.tsx","../../../common/resources/client/player/ui/controls/formatted-player-duration.tsx","../../../resources/client/web-player/player-controls/seekbar/main-seekbar.tsx","../../../common/resources/client/icons/media/media-shuffle.tsx","../../../common/resources/client/icons/media/media-shuffle-on.tsx","../../../common/resources/client/player/ui/controls/shuffle-button.tsx","../../../common/resources/client/icons/media/media-repeat.tsx","../../../common/resources/client/icons/media/media-repeat-on.tsx","../../../common/resources/client/player/ui/controls/repeat-button.tsx","../../../resources/client/web-player/player-controls/playback-controls.tsx","../../../common/resources/client/icons/media/media-microphone.tsx","../../../resources/client/web-player/player-controls/lyrics-button.tsx","../../../resources/client/web-player/player-controls/download-track-button.tsx","../../../common/resources/client/icons/media/media-queue-list.tsx","../../../common/resources/client/icons/media/media-mute.tsx","../../../common/resources/client/icons/media/media-volume-low.tsx","../../../common/resources/client/icons/media/media-volume-high.tsx","../../../common/resources/client/player/ui/controls/volume-controls.tsx","../../../resources/client/web-player/player-controls/desktop-player-controls.tsx","../../../common/resources/client/utils/number/is-number.ts","../../../common/resources/client/utils/http/load-image.ts","../../../common/resources/client/player/providers/youtube/load-youtube-poster.ts","../../../common/resources/client/player/providers/youtube/handle-youtube-embed-message.tsx","../../../common/resources/client/player/utils/youtube-id-from-src.ts","../../../common/resources/client/player/providers/youtube/use-youtube-provider-src.ts","../../../common/resources/client/player/providers/youtube/youtube-provider.tsx","../../../common/resources/client/utils/dom/create-ref-loop.ts","../../../common/resources/client/player/providers/html-media/use-html-media-internal-state.ts","../../../common/resources/client/player/providers/html-media/use-html-media-events.ts","../../../common/resources/client/player/providers/html-media/use-html-media-api.ts","../../../common/resources/client/player/providers/html-video-provider.tsx","../../../common/resources/client/player/providers/html-audio-provider.tsx","../../../common/resources/client/player/ui/player-outlet.tsx","../../../common/resources/client/player/ui/controls/player-poster.tsx","../../../common/resources/client/icons/media/media-fullscreen.tsx","../../../common/resources/client/player/hooks/use-player-click-handler.ts","../../../resources/client/web-player/overlay/player-overlay.tsx","../../../resources/client/web-player/layout/web-player-layout.tsx","../../../resources/client/web-player/layout/media-page-header-layout.tsx","../../../common/resources/client/ui/remote-favicon.tsx","../../../resources/client/web-player/user-profile/profile-links.tsx","../../../common/resources/client/utils/hooks/use-linkified-string.ts","../../../resources/client/web-player/user-profile/profile-description.tsx","../../../resources/client/web-player/artists/artist-page/artist-page-header.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/top-tracks-table.tsx","../../../resources/client/web-player/artists/requests/use-artist-albums.ts","../../../resources/client/web-player/artists/artist-page/discography-panel/no-discography-message.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/artist-albums-list.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/artist-albums-grid.tsx","../../../resources/client/web-player/artists/artist-page/discography-panel/discography-tab.tsx","../../../resources/client/web-player/artists/artist-page/similar-artists-panel.tsx","../../../resources/client/web-player/artists/artist-page/artist-about-panel.tsx","../../../resources/client/web-player/artists/artist-page/artist-tracks-panel.tsx","../../../resources/client/web-player/albums/album-list/album-list-item.tsx","../../../resources/client/web-player/albums/album-list/album-list.tsx","../../../resources/client/web-player/artists/artist-page/artist-albums-panel.tsx","../../../resources/client/web-player/artists/artist-page/use-artist-page-tabs.tsx","../../../common/resources/client/users/queries/use-followed-users.ts","../../../common/resources/client/users/queries/use-follow-user.ts","../../../common/resources/client/users/queries/use-unfollow-user.ts","../../../common/resources/client/users/follow-button.tsx","../../../resources/client/web-player/artists/artist-page/followers-panel/follower-list-item.tsx","../../../resources/client/web-player/artists/artist-page/artist-followers-panel.tsx","../../../resources/client/web-player/artists/artist-page/artist-page-tabs.tsx","../../../resources/client/web-player/artists/artist-page/artist-page.tsx","../../../resources/client/web-player/playlists/requests/use-playlist.ts","../../../common/resources/client/ui/images/avatar-group.tsx","../../../resources/client/web-player/layout/bullet-separated-items.tsx","../../../resources/client/web-player/playlists/playlist-page/playlist-page-header.tsx","../../../common/resources/client/utils/array/move-multiple-items-in-array.ts","../../../resources/client/web-player/playlists/requests/use-reorder-playlist-tracks.ts","../../../resources/client/web-player/playlists/playlist-page/playlist-table-row.tsx","../../../resources/client/web-player/layout/media-page-no-results-message.tsx","../../../resources/client/web-player/playlists/playlist-page/playlist-page.tsx","../../../common/resources/client/comments/requests/use-comments.ts","../../../common/resources/client/votes/requests/use-store-vote.ts","../../../common/resources/client/votes/thumb-buttons.tsx","../../../common/resources/client/reports/requests/use-submit-report.ts","../../../common/resources/client/comments/comment-list/comment-list-item.tsx","../../../common/resources/client/comments/comment-list/account-required-card.tsx","../../../common/resources/client/comments/comment-list/comment-list.tsx","../../../common/resources/client/ui/truncated-description.tsx","../../../resources/client/web-player/tracks/hooks/use-comment-permissions.ts","../../../resources/client/web-player/albums/album-page.tsx","../../../resources/client/web-player/library/requests/use-user-liked-tracks.ts","../../../resources/client/web-player/library/library-tracks-page.tsx","../../../resources/client/web-player/library/library-page-sort-dropdown.tsx","../../../resources/client/web-player/library/requests/use-user-liked-albums.ts","../../../resources/client/web-player/library/library-albums-page.tsx","../../../resources/client/web-player/library/requests/use-user-liked-artists.ts","../../../resources/client/web-player/library/library-artists-page.tsx","../../../resources/client/web-player/library/library-history-page.tsx","../../../resources/client/web-player/tracks/track-page.tsx","../../../resources/client/web-player/user-profile/requests/use-user-profile.tsx","../../../resources/client/web-player/user-profile/panels/profile-reposts-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-tracks-panel.tsx","../../../resources/client/web-player/library/requests/use-user-playlists.ts","../../../resources/client/web-player/user-profile/panels/profile-playlists-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-albums-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-artists-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-followers-panel.tsx","../../../resources/client/web-player/user-profile/panels/profile-followed-users-panel.tsx","../../../resources/client/web-player/user-profile/requests/use-update-user-profile.ts","../../../common/resources/client/ui/forms/combobox/form-combobox.tsx","../../../resources/client/web-player/user-profile/edit-profile-dialog.tsx","../../../resources/client/web-player/user-profile/header/profile-header.tsx","../../../resources/client/web-player/user-profile/user-profile-page.tsx","../../../resources/client/web-player/genres/tag-media-page.tsx","../../../resources/client/web-player/radio/requests/use-radio-recommendations.ts","../../../resources/client/web-player/radio/radio-page.tsx","../../../resources/client/web-player/search/requests/use-infinite-search-results.ts","../../../resources/client/web-player/search/search-results-page.tsx","../../../resources/client/web-player/library/library-page.tsx","../../../resources/client/web-player/library/library-playlists-page.tsx","../../../resources/client/web-player/tracks/track-embed.tsx","../../../resources/client/web-player/albums/album-embed.tsx","../../../resources/client/web-player/channels/homepage-channel-page.tsx","../../../resources/client/web-player/tracks/lyrics/use-lyrics.ts","../../../resources/client/web-player/tracks/lyrics/lyrics-page.tsx","../../../resources/client/web-player/web-player-routes.tsx"],"sourcesContent":["import React, {ReactNode, useEffect, useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\r\n\r\nexport interface InfiniteScrollSentinelProps {\r\n  loaderMarginTop?: string;\r\n  children?: ReactNode;\r\n  loadMoreExtraContent?: ReactNode;\r\n  query: UseInfiniteQueryResult;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  variant?: 'infiniteScroll' | 'loadMore';\r\n  size?: 'sm' | 'md';\r\n}\r\nexport function InfiniteScrollSentinel({\r\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\r\n  children,\r\n  loaderMarginTop = 'mt-24',\r\n  style,\r\n  className,\r\n  variant: _variant = 'infiniteScroll',\r\n  loadMoreExtraContent,\r\n  size = 'md',\r\n}: InfiniteScrollSentinelProps) {\r\n  const sentinelRef = useRef<HTMLDivElement>(null);\r\n  const isLoading = isFetchingNextPage || isInitialLoading;\r\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\r\n  const innerVariant =\r\n    _variant === 'loadMore' && loadMoreClickCount < 3\r\n      ? 'loadMore'\r\n      : 'infiniteScroll';\r\n\r\n  useEffect(() => {\r\n    const sentinelEl = sentinelRef.current;\r\n    if (!sentinelEl || innerVariant === 'loadMore') return;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting && hasNextPage && !isLoading) {\r\n        fetchNextPage();\r\n      }\r\n    });\r\n    observer.observe(sentinelEl);\r\n    return () => {\r\n      observer.unobserve(sentinelEl);\r\n    };\r\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\r\n\r\n  let content: ReactNode;\r\n\r\n  if (children) {\r\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\r\n    content = isFetchingNextPage ? children : null;\r\n  } else if (innerVariant === 'loadMore') {\r\n    content = !isInitialLoading && hasNextPage && (\r\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\r\n        {loadMoreExtraContent}\r\n        <Button\r\n          size={size === 'md' ? 'sm' : 'xs'}\r\n          className={clsx(\r\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112'\r\n          )}\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            fetchNextPage();\r\n            setLoadMoreClickCount(loadMoreClickCount + 1);\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\r\n            <Trans message=\"Load all\" />\r\n          ) : (\r\n            <Trans message=\"Show more\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    );\r\n  } else {\r\n    content = (\r\n      <AnimatePresence>\r\n        {isFetchingNextPage && (\r\n          <m.div\r\n            className={clsx('flex justify-center w-full', loaderMarginTop)}\r\n            {...opacityAnimation}\r\n          >\r\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\r\n          </m.div>\r\n        )}\r\n      </AnimatePresence>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={style}\r\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\r\n      role=\"presentation\"\r\n    >\r\n      <div ref={sentinelRef} aria-hidden />\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n","import {useAddItemsToLibrary} from '@app/web-player/library/requests/use-add-items-to-library';\r\nimport {useRemoveItemsFromLibrary} from '@app/web-player/library/requests/use-remove-items-from-library';\r\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\r\nimport {Likeable} from '@app/web-player/library/likeable';\r\nimport {IconButton, IconButtonProps} from '@common/ui/buttons/icon-button';\r\nimport {FavoriteIcon} from '@common/icons/material/Favorite';\r\nimport {FavoriteBorderIcon} from '@common/icons/material/FavoriteBorder';\r\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\r\n\r\ninterface LikeIconButtonProps\r\n  extends Omit<IconButtonProps, 'children' | 'disabled' | 'onClick'> {\r\n  likeable: Likeable;\r\n}\r\nexport function LikeIconButton({\r\n  likeable,\r\n  size = 'sm',\r\n  ...buttonProps\r\n}: LikeIconButtonProps) {\r\n  const authHandler = useAuthClickCapture();\r\n  const addToLibrary = useAddItemsToLibrary();\r\n  const removeFromLibrary = useRemoveItemsFromLibrary();\r\n  const isLiked = useLibraryStore(s => s.has(likeable));\r\n  const isLoading = addToLibrary.isPending || removeFromLibrary.isPending;\r\n\r\n  if (isLiked) {\r\n    return (\r\n      <IconButton\r\n        {...buttonProps}\r\n        size={size}\r\n        color=\"primary\"\r\n        disabled={isLoading}\r\n        onClickCapture={authHandler}\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          removeFromLibrary.mutate({likeables: [likeable]});\r\n        }}\r\n      >\r\n        <FavoriteIcon />\r\n      </IconButton>\r\n    );\r\n  }\r\n  return (\r\n    <IconButton\r\n      {...buttonProps}\r\n      size={size}\r\n      disabled={isLoading}\r\n      onClickCapture={authHandler}\r\n      onClick={e => {\r\n        e.stopPropagation();\r\n        addToLibrary.mutate({likeables: [likeable]});\r\n      }}\r\n    >\r\n      <FavoriteBorderIcon />\r\n    </IconButton>\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {PlayableGridItem} from '@app/web-player/playable-item/playable-grid-item';\r\nimport {ArtistContextDialog} from '@app/web-player/artists/artist-context-dialog';\r\nimport {ArtistLink, getArtistLink} from '@app/web-player/artists/artist-link';\r\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\r\n\r\ninterface ArtistGridItemProps {\r\n  artist: Artist;\r\n  radius?: string;\r\n}\r\nexport function ArtistGridItem({\r\n  artist,\r\n  radius = 'rounded-full',\r\n}: ArtistGridItemProps) {\r\n  return (\r\n    <PlayableGridItem\r\n      image={<SmallArtistImage artist={artist} />}\r\n      title={<ArtistLink artist={artist} />}\r\n      model={artist}\r\n      link={getArtistLink(artist)}\r\n      likeButton={<LikeIconButton likeable={artist} />}\r\n      contextDialog={<ArtistContextDialog artist={artist} />}\r\n      radius={radius}\r\n    />\r\n  );\r\n}\r\n","import {Album} from '@app/web-player/albums/album';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {PlayableGridItem} from '@app/web-player/playable-item/playable-grid-item';\r\nimport {AlbumLink, getAlbumLink} from '@app/web-player/albums/album-link';\r\nimport {AlbumContextDialog} from '@app/web-player/albums/album-context-dialog';\r\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\r\n\r\ninterface AlbumGridItemProps {\r\n  album: Album;\r\n}\r\nexport function AlbumGridItem({album}: AlbumGridItemProps) {\r\n  return (\r\n    <PlayableGridItem\r\n      image={<AlbumImage album={album} />}\r\n      title={<AlbumLink album={album} />}\r\n      subtitle={<ArtistLinks artists={album.artists} />}\r\n      link={getAlbumLink(album)}\r\n      likeButton={<LikeIconButton likeable={album} />}\r\n      model={album}\r\n      contextDialog={<AlbumContextDialog album={album} />}\r\n    />\r\n  );\r\n}\r\n","import {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport clsx from 'clsx';\r\nimport {Genre} from '@app/web-player/genres/genre';\r\nimport {LabelIcon} from '@common/icons/material/Label';\r\n\r\ninterface GenreImageProps {\r\n  genre: Genre;\r\n  className?: string;\r\n  size?: string;\r\n}\r\nexport function GenreImage({genre, className, size}: GenreImageProps) {\r\n  const {trans} = useTrans();\r\n  const src = genre.image;\r\n  const imgClassName = clsx(\r\n    className,\r\n    size,\r\n    'object-cover bg-fg-base/4',\r\n    !src ? 'flex items-center justify-center' : 'block',\r\n  );\r\n\r\n  return src ? (\r\n    <img\r\n      className={imgClassName}\r\n      draggable={false}\r\n      loading=\"lazy\"\r\n      src={src}\r\n      alt={trans(message('Image for :name', {values: {name: genre.name}}))}\r\n    />\r\n  ) : (\r\n    <span className={clsx(imgClassName, 'overflow-hidden')}>\r\n      <LabelIcon className=\"max-w-[60%] text-divider\" size=\"text-9xl\" />\r\n    </span>\r\n  );\r\n}\r\n","import {Genre} from '@app/web-player/genres/genre';\r\nimport {GenreImage} from '@app/web-player/genres/genre-image';\r\nimport {Link} from 'react-router-dom';\r\nimport {getGenreLink} from '@app/web-player/genres/genre-link';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\ninterface GenreGridItemProps {\r\n  genre: Genre;\r\n}\r\nexport function GenreGridItem({genre}: GenreGridItemProps) {\r\n  return (\r\n    <Link\r\n      to={getGenreLink(genre)}\r\n      className=\"relative isolate block h-max cursor-pointer overflow-hidden rounded-panel after:absolute after:left-0 after:top-0 after:h-full after:w-full after:bg-black/50\"\r\n    >\r\n      <GenreImage genre={genre} className=\"aspect-square w-full shadow-md\" />\r\n      <div className=\"absolute left-1/2 top-1/2 z-20 max-w-[86%] -translate-x-1/2 -translate-y-1/2 overflow-hidden overflow-ellipsis whitespace-nowrap text-xl font-semibold capitalize text-white\">\r\n        <Trans message={genre.display_name || genre.name} />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {PlayableGridItem} from '@app/web-player/playable-item/playable-grid-item';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {getTrackLink, TrackLink} from '@app/web-player/tracks/track-link';\r\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\r\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\r\n\r\ninterface TrackGridItemProps {\r\n  track: Track;\r\n  newQueue?: Track[];\r\n}\r\nexport function TrackGridItem({track, newQueue}: TrackGridItemProps) {\r\n  return (\r\n    <PlayableGridItem\r\n      image={<TrackImage track={track} />}\r\n      title={<TrackLink track={track} />}\r\n      subtitle={<ArtistLinks artists={track.artists} />}\r\n      link={getTrackLink(track)}\r\n      likeButton={<LikeIconButton likeable={track} />}\r\n      model={track}\r\n      newQueue={newQueue}\r\n      contextDialog={<TrackContextDialog tracks={[track]} />}\r\n    />\r\n  );\r\n}\r\n","import {Link} from 'react-router-dom';\r\nimport {getUserProfileLink} from '@app/web-player/users/user-profile-link';\r\nimport {UserImage} from '@app/web-player/users/user-image';\r\nimport {User} from '@common/auth/user';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\ninterface UserGridItemProps {\r\n  user: User;\r\n}\r\nexport function UserGridItem({user}: UserGridItemProps) {\r\n  return (\r\n    <div>\r\n      <Link to={getUserProfileLink(user)}>\r\n        <UserImage\r\n          user={user}\r\n          className=\"shadow-md w-full aspect-square rounded\"\r\n        />\r\n      </Link>\r\n      <div className=\"text-sm mt-12\">\r\n        <div className=\"overflow-hidden overflow-ellipsis\">\r\n          <Link to={getUserProfileLink(user)}>{user.display_name}</Link>\r\n        </div>\r\n        {user.followers_count ? (\r\n          <div className=\"text-muted mt-4 whitespace-nowrap overflow-hidden overflow-ellipsis\">\r\n            <Trans\r\n              message=\":count followers\"\r\n              values={{count: user.followers_count}}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {ARTIST_MODEL} from '@app/web-player/artists/artist';\r\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\r\nimport {ALBUM_MODEL} from '@app/web-player/albums/album';\r\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\r\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\r\nimport {GenreGridItem} from '@app/web-player/genres/genre-grid-item';\r\nimport React from 'react';\r\nimport {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\r\nimport {TrackGridItem} from '@app/web-player/tracks/track-grid-item';\r\nimport {PLAYLIST_MODEL} from '@app/web-player/playlists/playlist';\r\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\r\nimport {USER_MODEL} from '@common/auth/user';\r\nimport {UserGridItem} from '@app/web-player/users/user-grid-item';\r\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\r\n\r\ninterface Props {\r\n  item: ChannelContentModel;\r\n  items?: ChannelContentModel[];\r\n}\r\nexport function ChannelContentGridItem({item, items}: Props) {\r\n  switch (item.model_type) {\r\n    case ARTIST_MODEL:\r\n      return <ArtistGridItem artist={item} />;\r\n    case ALBUM_MODEL:\r\n      return <AlbumGridItem album={item} />;\r\n    case GENRE_MODEL:\r\n      return <GenreGridItem genre={item} />;\r\n    case TRACK_MODEL:\r\n      return <TrackGridItem track={item} newQueue={items as Track[]} />;\r\n    case PLAYLIST_MODEL:\r\n      return <PlaylistGridItem playlist={item} />;\r\n    case USER_MODEL:\r\n      return <UserGridItem user={item} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const AntennaIcon = createSvgIcon(\r\n  <path d=\"M12 7.5c.69 0 1.27.23 1.76.7s.74 1.07.74 1.8c0 1.05-.5 1.81-1.5 2.28V21h-2v-8.72c-1-.47-1.5-1.23-1.5-2.28 0-.73.26-1.33.74-1.8s1.07-.7 1.76-.7m4.69-2.2c1.25 1.25 1.92 2.81 2.01 4.7 0 1.8-.67 3.38-2.01 4.72L15.5 13.5c1-.91 1.5-2.08 1.5-3.5 0-1.33-.5-2.5-1.5-3.5l1.19-1.2M6.09 4.08C4.5 5.67 3.7 7.64 3.7 10s.8 4.3 2.39 5.89l-1.17 1.22C3 15.08 2 12.7 2 10s1-5.06 2.92-7.09l1.17 1.17m12.99-1.17C21 4.94 22 7.3 22 10c0 2.8-1 5.17-2.92 7.11l-1.17-1.22C19.5 14.3 20.3 12.33 20.3 10s-.8-4.33-2.39-5.92l1.17-1.17M7.31 5.3L8.5 6.5C7.5 7.42 7 8.58 7 10c0 1.33.5 2.5 1.5 3.5l-1.19 1.22C5.97 13.38 5.3 11.8 5.3 10c0-1.8.67-3.36 2.01-4.7z\"></path>,\r\n  'Radio'\r\n);\r\n","import React from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {AntennaIcon} from '@app/web-player/channels/antenna-icon';\r\nimport {useShouldShowRadioButton} from '@app/web-player/tracks/context-dialog/use-should-show-radio-button';\r\nimport {getRadioLink} from '@app/web-player/radio/get-radio-link';\r\nimport {Channel} from '@common/channels/channel';\r\n\r\ninterface ChannelHeadingProps {\r\n  channel: Channel;\r\n  margin?: string;\r\n  isNested?: boolean;\r\n}\r\nexport function ChannelHeading({\r\n  channel,\r\n  isNested,\r\n  margin = isNested ? 'mb-16 md:mb-20' : 'mb-20 md:mb-40',\r\n}: ChannelHeadingProps) {\r\n  const shouldShowRadio = useShouldShowRadioButton();\r\n  if (channel.config.hideTitle) {\r\n    return null;\r\n  }\r\n  if (!isNested) {\r\n    if (shouldShowRadio && channel.restriction?.model_type === 'genre') {\r\n      return (\r\n        <div\r\n          className={clsx('flex items-center justify-between gap-24', margin)}\r\n        >\r\n          <h1 className=\"flex-auto text-3xl\">\r\n            <Trans message={channel.name} />\r\n          </h1>\r\n          <Tooltip label={<Trans message=\"Genre radio\" />}>\r\n            <IconButton\r\n              className=\"flex-shrink-0\"\r\n              elementType={Link}\r\n              to={getRadioLink(channel.restriction)}\r\n            >\r\n              <AntennaIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <h1 className={clsx('text-3xl', margin)}>\r\n        <Trans message={channel.name} />\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={clsx('flex items-center gap-4 text-xl', margin)}>\r\n      <NestedChannelLink channel={channel} />\r\n      <KeyboardArrowRightIcon className=\"mt-4\" />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ChannelLinkProps {\r\n  channel: Channel;\r\n}\r\nfunction NestedChannelLink({channel}: ChannelLinkProps) {\r\n  const {restriction: genreName} = useParams();\r\n  return (\r\n    <Link\r\n      className=\"outline-none hover:underline focus-visible:underline\"\r\n      to={\r\n        channel.config.restriction === 'genre' && genreName\r\n          ? `/${channel.slug}/${genreName}`\r\n          : `/${channel.slug}`\r\n      }\r\n    >\r\n      <Trans message={channel.name} />\r\n    </Link>\r\n  );\r\n}\r\n","import {\r\n  hashKey,\r\n  InfiniteData,\r\n  keepPreviousData,\r\n  useInfiniteQuery,\r\n  UseInfiniteQueryResult,\r\n} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {\r\n  hasNextPage,\r\n  PaginationResponse,\r\n} from '@common/http/backend-response/pagination-response';\r\nimport {useMemo, useRef, useState} from 'react';\r\nimport {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\r\nimport {GetDatatableDataParams} from '@common/datatable/requests/paginated-resources';\r\nimport {QueryKey} from '@tanstack/query-core/src/types';\r\n\r\nexport type UseInfiniteDataResult<\r\n  T,\r\n  E extends object = object,\r\n> = UseInfiniteQueryResult<InfiniteData<PaginationResponse<T> & E>> & {\r\n  items: T[];\r\n  totalItems: number | null;\r\n  // initial load is done and no results were returned from backend\r\n  noResults: boolean;\r\n  // true when changing filters or sorting, not on initial load, background fetch or infinite load\r\n  isReloading: boolean;\r\n  sortDescriptor: SortDescriptor;\r\n  setSortDescriptor: (sortDescriptor: SortDescriptor) => void;\r\n  searchQuery: string;\r\n  setSearchQuery: (searchQuery: string) => void;\r\n};\r\n\r\nfunction buildQueryKey(\r\n  {\r\n    queryKey,\r\n    defaultOrderDir,\r\n    defaultOrderBy,\r\n    queryParams,\r\n  }: UseInfiniteDataProps<any>,\r\n  sortDescriptor: SortDescriptor,\r\n  searchQuery: string = '',\r\n) {\r\n  // make sure to always set default order dir and col so query keys are consistent\r\n  if (!sortDescriptor.orderBy) {\r\n    sortDescriptor.orderBy = defaultOrderBy;\r\n  }\r\n  if (!sortDescriptor.orderDir) {\r\n    sortDescriptor.orderDir = defaultOrderDir;\r\n  }\r\n  return [...queryKey, sortDescriptor, searchQuery, queryParams];\r\n}\r\n\r\ninterface Response<T> extends BackendResponse {\r\n  pagination: PaginationResponse<T>;\r\n}\r\n\r\nexport interface UseInfiniteDataProps<T> {\r\n  initialPage?: PaginationResponse<T> | null;\r\n  queryKey: QueryKey;\r\n  queryParams?: Record<string, string | number | null>;\r\n  endpoint: string;\r\n  defaultOrderBy?: SortDescriptor['orderBy'];\r\n  defaultOrderDir?: SortDescriptor['orderDir'];\r\n  // whether user can sort items manually (table header, dropdown, etc)\r\n  willSortOrFilter?: boolean;\r\n  // ordering is not available with cursor pagination\r\n  paginate?: 'simple' | 'lengthAware' | 'cursor';\r\n  transformResponse?: (response: Response<T>) => Response<T>;\r\n}\r\nexport function useInfiniteData<T, E extends object = {}>(\r\n  props: UseInfiniteDataProps<T>,\r\n): UseInfiniteDataResult<T, E> {\r\n  const {\r\n    initialPage,\r\n    endpoint,\r\n    defaultOrderBy,\r\n    defaultOrderDir,\r\n    queryParams,\r\n    paginate,\r\n    transformResponse,\r\n    willSortOrFilter = false,\r\n  } = props;\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [sortDescriptor, setSortDescriptor] = useState<SortDescriptor>({\r\n    orderBy: defaultOrderBy,\r\n    orderDir: defaultOrderDir,\r\n  });\r\n\r\n  const queryKey = buildQueryKey(props, sortDescriptor, searchQuery);\r\n  const initialQueryKey = useRef(hashKey(queryKey)).current;\r\n\r\n  const query = useInfiniteQuery({\r\n    placeholderData: willSortOrFilter ? keepPreviousData : undefined,\r\n    queryKey,\r\n    queryFn: ({pageParam, signal}) => {\r\n      const params: GetDatatableDataParams = {\r\n        ...queryParams,\r\n        perPage: initialPage?.per_page || queryParams?.perPage,\r\n        query: (queryParams?.query as string) ?? searchQuery,\r\n        paginate,\r\n        ...sortDescriptor,\r\n      };\r\n      if (paginate === 'cursor') {\r\n        params.cursor = pageParam;\r\n      } else {\r\n        params.page = pageParam || 1;\r\n      }\r\n      return fetchData<T>(endpoint, params, transformResponse, signal);\r\n    },\r\n    initialPageParam: paginate === 'cursor' ? '' : 1,\r\n    getNextPageParam: lastResponse => {\r\n      if (!hasNextPage(lastResponse.pagination)) {\r\n        return null;\r\n      }\r\n      if ('next_cursor' in lastResponse.pagination) {\r\n        return lastResponse.pagination.next_cursor;\r\n      }\r\n      return lastResponse.pagination.current_page + 1;\r\n    },\r\n    initialData: () => {\r\n      // initial data will be for initial query key only, remove\r\n      // initial data if query key changes, so query is reset\r\n      if (!initialPage || hashKey(queryKey) !== initialQueryKey) {\r\n        return undefined;\r\n      }\r\n\r\n      return {\r\n        pageParams: [undefined, 1],\r\n        pages: [{pagination: initialPage}],\r\n      };\r\n    },\r\n  });\r\n\r\n  const items = useMemo(() => {\r\n    return query.data?.pages.flatMap(p => p.pagination.data) || [];\r\n  }, [query.data?.pages]);\r\n\r\n  const firstPage = query.data?.pages[0].pagination;\r\n  const totalItems =\r\n    firstPage && 'total' in firstPage && firstPage.total\r\n      ? firstPage.total\r\n      : null;\r\n\r\n  return {\r\n    ...query,\r\n    items,\r\n    totalItems,\r\n    noResults: query.data?.pages?.[0].pagination.data.length === 0,\r\n    // can't use \"isRefetching\", it's true for some reason when changing sorting or filters\r\n    isReloading:\r\n      query.isFetching && !query.isFetchingNextPage && query.isPlaceholderData,\r\n    sortDescriptor,\r\n    setSortDescriptor,\r\n    searchQuery,\r\n    setSearchQuery,\r\n  } as UseInfiniteDataResult<T, E>;\r\n}\r\n\r\nasync function fetchData<T>(\r\n  endpoint: string,\r\n  params: GetDatatableDataParams,\r\n  transformResponse?: UseInfiniteDataProps<T>['transformResponse'],\r\n  signal?: AbortSignal,\r\n): Promise<Response<T>> {\r\n  if (params.query) {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n  }\r\n  return apiClient\r\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\r\n    .then(r => {\r\n      if (transformResponse) {\r\n        return transformResponse(r.data);\r\n      }\r\n      return r.data;\r\n    });\r\n}\r\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {Channel, ChannelContentItem} from '@common/channels/channel';\r\nimport {\r\n  channelEndpoint,\r\n  channelQueryKey,\r\n} from '@common/channels/requests/use-channel';\r\nimport {useChannelQueryParams} from '@common/channels/use-channel-query-params';\r\n\r\nexport function usePaginatedChannelContent<\r\n  T extends ChannelContentItem = ChannelContentItem\r\n>(channel: Channel<T>) {\r\n  const queryParams = useChannelQueryParams(channel);\r\n  return useInfiniteData<T>({\r\n    willSortOrFilter: true,\r\n    initialPage: channel.content,\r\n    queryKey: channelQueryKey(channel.id),\r\n    endpoint: channelEndpoint(channel.id),\r\n    paginate: 'simple',\r\n    queryParams: {\r\n      returnContentOnly: 'true',\r\n      ...queryParams,\r\n    },\r\n  });\r\n}\r\n","import {hashKey, keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {Channel, ChannelContentItem} from '@common/channels/channel';\r\nimport {\r\n  channelEndpoint,\r\n  channelQueryKey,\r\n} from '@common/channels/requests/use-channel';\r\nimport {PaginatedBackendResponse} from '@common/http/backend-response/pagination-response';\r\nimport {useRef} from 'react';\r\nimport {useChannelQueryParams} from '@common/channels/use-channel-query-params';\r\n\r\ninterface Response<T extends ChannelContentItem = ChannelContentItem>\r\n  extends PaginatedBackendResponse<T> {}\r\n\r\nexport function useChannelContent<\r\n  T extends ChannelContentItem = ChannelContentItem,\r\n>(channel: Channel<T>) {\r\n  const queryParams = useChannelQueryParams(channel);\r\n  const queryKey = channelQueryKey(channel.id, queryParams);\r\n  const initialQueryKey = useRef(hashKey(queryKey)).current;\r\n\r\n  return useQuery({\r\n    queryKey: channelQueryKey(channel.id, queryParams),\r\n    queryFn: () => fetchChannelContent<T>(channel.id, queryParams),\r\n    placeholderData: keepPreviousData,\r\n    initialData: () => {\r\n      if (hashKey(queryKey) === initialQueryKey) {\r\n        return channel.content?.data;\r\n      }\r\n      return undefined;\r\n    },\r\n  });\r\n}\r\n\r\nfunction fetchChannelContent<T extends ChannelContentItem = ChannelContentItem>(\r\n  slugOrId: number | string,\r\n  params: any,\r\n) {\r\n  return apiClient\r\n    .get<Response<T>>(channelEndpoint(slugOrId), {\r\n      params: {\r\n        ...params,\r\n        paginate: 'simple',\r\n        returnContentOnly: 'true',\r\n      },\r\n    })\r\n    .then(response => response.data.pagination.data);\r\n}\r\n","import {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport React, {Fragment} from 'react';\r\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\r\nimport {ChannelContentGridItem} from '@app/web-player/channels/channel-content-grid-item';\r\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\r\nimport {usePaginatedChannelContent} from '@common/channels/requests/use-paginated-channel-content';\r\nimport {useChannelContent} from '@common/channels/requests/use-channel-content';\r\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\r\n\r\nexport function ChannelContentGrid(props: ChannelContentProps) {\r\n  return (\r\n    <Fragment>\r\n      <ChannelHeading {...props} />\r\n      {props.isNested ? (\r\n        <SimpleGrid {...props} />\r\n      ) : (\r\n        <PaginatedGrid {...props} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction SimpleGrid({channel}: ChannelContentProps) {\r\n  const {data} = useChannelContent(channel);\r\n  return (\r\n    <ContentGrid>\r\n      {data?.map(item => (\r\n        <ChannelContentGridItem\r\n          key={`${item.id}-${item.model_type}`}\r\n          item={item}\r\n          items={data}\r\n        />\r\n      ))}\r\n    </ContentGrid>\r\n  );\r\n}\r\n\r\nfunction PaginatedGrid({channel}: ChannelContentProps) {\r\n  const query = usePaginatedChannelContent<ChannelContentModel>(channel);\r\n  return (\r\n    <div>\r\n      <ContentGrid>\r\n        {query.items.map(item => (\r\n          <ChannelContentGridItem\r\n            key={`${item.id}-${item.model_type}`}\r\n            item={item}\r\n            items={query.items}\r\n          />\r\n        ))}\r\n      </ContentGrid>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n","import {useContext} from 'react';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\n\r\nexport interface TrackTableMeta {\r\n  queueGroupId?: string | number;\r\n  hideTrackImage?: boolean;\r\n}\r\n\r\nconst stableObj = {};\r\n\r\nexport function useTrackTableMeta() {\r\n  const {meta} = useContext(TableContext);\r\n  return (meta || stableObj) as TrackTableMeta;\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\n\r\nexport function useIsTrackCued(\r\n  trackId: number,\r\n  groupId?: string | number\r\n): boolean {\r\n  return usePlayerStore(s => {\r\n    if (!s.cuedMedia?.meta.id || s.cuedMedia.meta.id !== trackId) {\r\n      return false;\r\n    }\r\n\r\n    if (!s.cuedMedia?.groupId && !groupId) {\r\n      return true;\r\n    }\r\n\r\n    if (groupId && s.cuedMedia.groupId === groupId) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  });\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {useIsTrackCued} from '@app/web-player/tracks/hooks/use-is-track-cued';\r\n\r\nexport function useIsTrackPlaying(\r\n  trackId: number,\r\n  groupId?: string | number\r\n): boolean {\r\n  const isCued = useIsTrackCued(trackId, groupId);\r\n  const isPlaying = usePlayerStore(s => s.isPlaying);\r\n  return isCued && isPlaying;\r\n}\r\n","import {Track} from '@app/web-player/tracks/track';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport React, {useContext, useState} from 'react';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {trackToMediaItem} from '@app/web-player/tracks/utils/track-to-media-item';\r\nimport {message} from '@common/i18n/message';\r\nimport {PauseIcon} from '@common/icons/material/Pause';\r\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\r\nimport clsx from 'clsx';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {useTrackTableMeta} from '@app/web-player/tracks/track-table/use-track-table-meta';\r\nimport {EqualizerImage} from '@app/web-player/tracks/equalizer-image/equalizer-image';\r\nimport {useIsTrackPlaying} from '@app/web-player/tracks/hooks/use-is-track-playing';\r\nimport {useIsTrackCued} from '@app/web-player/tracks/hooks/use-is-track-cued';\r\n\r\ninterface TogglePlaybackColumnProps {\r\n  track: Track;\r\n  rowIndex: number;\r\n  isHovered: boolean;\r\n}\r\nexport function TogglePlaybackColumn({\r\n  track,\r\n  rowIndex,\r\n  isHovered,\r\n}: TogglePlaybackColumnProps) {\r\n  const {queueGroupId} = useTrackTableMeta();\r\n  const isPlaying = useIsTrackPlaying(track.id, queueGroupId);\r\n  const isCued = useIsTrackCued(track.id, queueGroupId);\r\n\r\n  return (\r\n    <div className=\"w-24 h-24 text-center\">\r\n      {isHovered || isPlaying ? (\r\n        <TogglePlaybackButton\r\n          track={track}\r\n          trackIndex={rowIndex}\r\n          isPlaying={isPlaying}\r\n        />\r\n      ) : (\r\n        <span className={clsx(isCued ? 'text-primary' : 'text-muted')}>\r\n          {rowIndex + 1}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface TogglePlaybackButtonProps {\r\n  track: Track;\r\n  trackIndex: number;\r\n  isPlaying: boolean;\r\n}\r\nfunction TogglePlaybackButton({\r\n  track,\r\n  trackIndex,\r\n  isPlaying,\r\n}: TogglePlaybackButtonProps) {\r\n  const {trans} = useTrans();\r\n  const player = usePlayerActions();\r\n  const {data} = useContext(TableContext);\r\n  const {queueGroupId} = useTrackTableMeta();\r\n  const [isHover, setHover] = useState(false);\r\n\r\n  if (isPlaying) {\r\n    return (\r\n      <button\r\n        onPointerEnter={() => setHover(true)}\r\n        onPointerLeave={() => setHover(false)}\r\n        aria-label={trans(message('Pause :name', {values: {name: track.name}}))}\r\n        tabIndex={0}\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          player.pause();\r\n        }}\r\n      >\r\n        {isHover ? <PauseIcon /> : <EqualizerImage />}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      aria-label={trans(message('Play :name', {values: {name: track.name}}))}\r\n      tabIndex={0}\r\n      onClick={async e => {\r\n        e.stopPropagation();\r\n        const newQueue = data.map(d =>\r\n          trackToMediaItem(d as Track, queueGroupId)\r\n        );\r\n        player.overrideQueueAndPlay(newQueue, trackIndex);\r\n      }}\r\n    >\r\n      <PlayArrowFilledIcon />\r\n    </button>\r\n  );\r\n}\r\n","import {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport React from 'react';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport clsx from 'clsx';\r\nimport {useTrackTableMeta} from '@app/web-player/tracks/track-table/use-track-table-meta';\r\nimport {getTrackImageSrc} from '@app/web-player/tracks/track-image/track-image';\r\nimport {useIsTrackCued} from '@app/web-player/tracks/hooks/use-is-track-cued';\r\n\r\ninterface TrackNameColumnProps {\r\n  track: Track;\r\n}\r\nexport function TrackNameColumn({track}: TrackNameColumnProps) {\r\n  const {hideTrackImage, queueGroupId} = useTrackTableMeta();\r\n  const isCued = useIsTrackCued(track.id, queueGroupId);\r\n\r\n  return (\r\n    <NameWithAvatar\r\n      image={!hideTrackImage ? getTrackImageSrc(track) : undefined}\r\n      label={track.name}\r\n      avatarSize=\"w-40 h-40 md:w-32 md:h-32\"\r\n      description={\r\n        <span className=\"md:hidden\">\r\n          {track.artists?.map(a => a.name).join(', ')}\r\n        </span>\r\n      }\r\n      labelClassName={clsx(\r\n        isCued && 'text-primary',\r\n        'max-md:text-[15px] max-md:leading-6',\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import {Track} from '@app/web-player/tracks/track';\r\nimport {useContext, useMemo} from 'react';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {\r\n  TrackContextDialog,\r\n  TrackContextDialogProps,\r\n} from '@app/web-player/tracks/context-dialog/track-context-dialog';\r\n\r\ninterface TableTrackContextDialogProps\r\n  extends Omit<TrackContextDialogProps, 'tracks'> {}\r\nexport function TableTrackContextDialog({\r\n  children,\r\n  ...props\r\n}: TableTrackContextDialogProps) {\r\n  const {selectedRows, data} = useContext(TableContext);\r\n  const tracks = useMemo(() => {\r\n    return selectedRows\r\n      .map(trackId => data.find(track => track.id === trackId))\r\n      .filter(t => !!t) as Track[];\r\n  }, [selectedRows, data]);\r\n  return (\r\n    <TrackContextDialog {...props} tracks={tracks}>\r\n      {children}\r\n    </TrackContextDialog>\r\n  );\r\n}\r\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Playlist} from '@app/web-player/playlists/playlist';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  playlist: Playlist;\r\n}\r\n\r\ninterface Payload {\r\n  playlistId: number;\r\n  tracks: Track[];\r\n}\r\n\r\nexport function useRemoveTracksFromPlaylist() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => removeTracks(payload),\r\n    onSuccess: (response, {tracks}) => {\r\n      toast(\r\n        message('Removed [one 1 track|other :count tracks] from playlist', {\r\n          values: {count: tracks.length},\r\n        }),\r\n      );\r\n      queryClient.invalidateQueries({\r\n        queryKey: ['playlists', response.playlist.id],\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: ['tracks', 'playlist', response.playlist.id],\r\n      });\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction removeTracks(payload: Payload): Promise<Response> {\r\n  const backendPayload = {\r\n    ids: payload.tracks.map(track => track.id),\r\n  };\r\n  return apiClient\r\n    .post(`playlists/${payload.playlistId}/tracks/remove`, backendPayload)\r\n    .then(r => r.data);\r\n}\r\n","import {Playlist} from '@app/web-player/playlists/playlist';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\r\nimport {useRemoveTracksFromPlaylist} from '@app/web-player/playlists/requests/use-remove-tracks-from-playlist';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {TableTrackContextDialog} from '@app/web-player/tracks/context-dialog/table-track-context-dialog';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {Track} from '@app/web-player/tracks/track';\r\n\r\ninterface PlaylistTrackContextDialogProps {\r\n  playlist: Playlist;\r\n}\r\nexport function PlaylistTrackContextDialog({\r\n  playlist,\r\n  ...props\r\n}: PlaylistTrackContextDialogProps) {\r\n  return (\r\n    <TableTrackContextDialog {...props}>\r\n      {tracks => (\r\n        <RemoveFromPlaylistMenuItem playlist={playlist} tracks={tracks} />\r\n      )}\r\n    </TableTrackContextDialog>\r\n  );\r\n}\r\n\r\ninterface RemoveFromPlaylistMenuItemProps {\r\n  playlist: Playlist;\r\n  tracks: Track[];\r\n}\r\nexport function RemoveFromPlaylistMenuItem({\r\n  playlist,\r\n  tracks,\r\n}: RemoveFromPlaylistMenuItemProps) {\r\n  const {user} = useAuth();\r\n  const removeTracks = useRemoveTracksFromPlaylist();\r\n  const {close: closeMenu} = useDialogContext();\r\n  const canRemove = playlist.owner_id === user?.id || playlist.collaborative;\r\n\r\n  if (!canRemove) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ContextMenuButton\r\n      onClick={() => {\r\n        if (!removeTracks.isPending) {\r\n          removeTracks.mutate({playlistId: playlist.id, tracks});\r\n          closeMenu();\r\n        }\r\n      }}\r\n    >\r\n      <Trans message=\"Remove from this playlist\" />\r\n    </ContextMenuButton>\r\n  );\r\n}\r\n","import React, {Fragment, useContext} from 'react';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport clsx from 'clsx';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {MoreHorizIcon} from '@common/icons/material/MoreHoriz';\r\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\r\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {RemoveFromPlaylistMenuItem} from '@app/web-player/playlists/playlist-page/playlist-track-context-dialog';\r\n\r\ninterface Props {\r\n  track: Track;\r\n  isHovered: boolean;\r\n}\r\nexport function TrackOptionsColumn({track, isHovered}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const {meta} = useContext(TableContext);\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger type=\"popover\" mobileType=\"tray\">\r\n        <IconButton\r\n          size={isMobile ? 'sm' : 'md'}\r\n          className={clsx(\r\n            isMobile ? 'text-muted' : 'mr-8',\r\n            !isMobile && !isHovered && 'invisible',\r\n          )}\r\n        >\r\n          {isMobile ? <MoreVertIcon /> : <MoreHorizIcon />}\r\n        </IconButton>\r\n        <TrackContextDialog tracks={[track]}>\r\n          {tracks =>\r\n            meta.playlist ? (\r\n              <RemoveFromPlaylistMenuItem\r\n                playlist={meta.playlist}\r\n                tracks={tracks}\r\n              />\r\n            ) : null\r\n          }\r\n        </TrackContextDialog>\r\n      </DialogTrigger>\r\n      {!isMobile && <LikeIconButton size=\"xs\" likeable={track} />}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {Track} from '@app/web-player/tracks/track';\r\nimport {Table, TableProps} from '@common/ui/tables/table';\r\nimport {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React, {useMemo} from 'react';\r\nimport {AlbumLink} from '@app/web-player/albums/album-link';\r\nimport {ScheduleIcon} from '@common/icons/material/Schedule';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {TogglePlaybackColumn} from '@app/web-player/tracks/track-table/toggle-playback-column';\r\nimport {TrackNameColumn} from '@app/web-player/tracks/track-table/track-name-column';\r\nimport {TrackTableMeta} from '@app/web-player/tracks/track-table/use-track-table-meta';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport {NameWithAvatarPlaceholder} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {RowElementProps} from '@common/ui/tables/table-row';\r\nimport {TableTrackContextDialog} from '@app/web-player/tracks/context-dialog/table-track-context-dialog';\r\nimport {TrendingUpIcon} from '@common/icons/material/TrendingUp';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {trackToMediaItem} from '@app/web-player/tracks/utils/track-to-media-item';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {TrackOptionsColumn} from '@app/web-player/tracks/track-table/track-options-column';\r\nimport {TableDataItem} from '@common/ui/tables/types/table-data-item';\r\nimport {useIsMobileDevice} from '@common/utils/hooks/is-mobile-device';\r\nimport {Playlist} from '@app/web-player/playlists/playlist';\r\n\r\nconst columnConfig: ColumnConfig<Track>[] = [\r\n  {\r\n    key: 'index',\r\n    header: () => <span>#</span>,\r\n    align: 'center',\r\n    width: 'w-24 flex-shrink-0',\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return <Skeleton size=\"w-20 h-20\" variant=\"rect\" />;\r\n      }\r\n      return (\r\n        <TogglePlaybackColumn\r\n          track={track}\r\n          rowIndex={row.index}\r\n          isHovered={row.isHovered}\r\n        />\r\n      );\r\n    },\r\n  },\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    width: 'flex-3 min-w-224',\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Title\" />,\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return <NameWithAvatarPlaceholder showDescription={false} />;\r\n      }\r\n      return <TrackNameColumn track={track} />;\r\n    },\r\n  },\r\n  {\r\n    key: 'artist',\r\n    header: () => <Trans message=\"Artist\" />,\r\n    width: 'flex-2',\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return <Skeleton className=\"max-w-4/5 leading-3\" />;\r\n      }\r\n      return <ArtistLinks artists={track.artists} />;\r\n    },\r\n  },\r\n  {\r\n    key: 'album_name',\r\n    allowsSorting: true,\r\n    width: 'flex-2',\r\n    header: () => <Trans message=\"Album\" />,\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return <Skeleton className=\"max-w-4/5 leading-3\" />;\r\n      }\r\n      return track.album ? <AlbumLink album={track.album} /> : null;\r\n    },\r\n  },\r\n  {\r\n    key: 'added_at',\r\n    sortingKey: 'likes.created_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-112',\r\n    header: () => <Trans message=\"Date added\" />,\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return <Skeleton className=\"max-w-4/5 leading-3\" />;\r\n      }\r\n      return <FormattedRelativeTime date={track.added_at} />;\r\n    },\r\n  },\r\n  {\r\n    key: 'options',\r\n    align: 'end',\r\n    width: 'w-36 md:w-84',\r\n    header: () => <Trans message=\"Options\" />,\r\n    hideHeader: true,\r\n    visibleInMode: 'all',\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return (\r\n          <div className=\"flex justify-end\">\r\n            <Skeleton size=\"w-20 h-20\" variant=\"rect\" />\r\n          </div>\r\n        );\r\n      }\r\n      return <TrackOptionsColumn track={track} isHovered={row.isHovered} />;\r\n    },\r\n  },\r\n  {\r\n    key: 'duration',\r\n    allowsSorting: true,\r\n    className: 'text-muted',\r\n    maxWidth: 'max-w-48',\r\n    align: 'end',\r\n    header: () => <ScheduleIcon />,\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return <Skeleton className=\"leading-3\" />;\r\n      }\r\n      return track.duration ? <FormattedDuration ms={track.duration} /> : null;\r\n    },\r\n  },\r\n  {\r\n    key: 'popularity',\r\n    allowsSorting: true,\r\n    className: 'text-muted',\r\n    maxWidth: 'max-w-54',\r\n    header: () => <TrendingUpIcon />,\r\n    body: (track, row) => {\r\n      if (row.isPlaceholder) {\r\n        return <Skeleton className=\"leading-3\" />;\r\n      }\r\n      return (\r\n        <div className=\"relative h-6 w-full bg-chip\">\r\n          <div\r\n            style={{width: `${track.popularity || 50}%`}}\r\n            className=\"absolute left-0 top-0 h-full w-0 bg-black/30 dark:bg-white/30\"\r\n          />\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport interface TrackTableProps {\r\n  tracks: Track[] | TableDataItem[]; // might be passing in placeholder items for skeletons\r\n  hideArtist?: boolean;\r\n  hideAlbum?: boolean;\r\n  hideTrackImage?: boolean;\r\n  hidePopularity?: boolean;\r\n  hideAddedAtColumn?: boolean;\r\n  hideHeaderRow?: boolean;\r\n  queueGroupId?: string | number;\r\n  playlist?: Playlist;\r\n  renderRowAs?: TableProps<Track>['renderRowAs'];\r\n  sortDescriptor?: TableProps<Track>['sortDescriptor'];\r\n  onSortChange?: TableProps<Track>['onSortChange'];\r\n  enableSorting?: TableProps<Track>['enableSorting'];\r\n  tableBody?: TableProps<Track>['tableBody'];\r\n  className?: string;\r\n}\r\nexport function TrackTable({\r\n  tracks,\r\n  hideArtist = false,\r\n  hideAlbum = false,\r\n  hideHeaderRow = false,\r\n  hideTrackImage = false,\r\n  hidePopularity = true,\r\n  hideAddedAtColumn = true,\r\n  queueGroupId,\r\n  renderRowAs,\r\n  playlist,\r\n  ...tableProps\r\n}: TrackTableProps) {\r\n  const player = usePlayerActions();\r\n  const isMobile = useIsMobileDevice();\r\n  hideHeaderRow = hideHeaderRow || isMobile;\r\n\r\n  const filteredColumns = useMemo(() => {\r\n    return columnConfig.filter(col => {\r\n      if (col.key === 'artist' && hideArtist) {\r\n        return false;\r\n      }\r\n      if (col.key === 'album_name' && hideAlbum) {\r\n        return false;\r\n      }\r\n      if (col.key === 'popularity' && hidePopularity) {\r\n        return false;\r\n      }\r\n      if (col.key === 'added_at' && hideAddedAtColumn) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }, [hideArtist, hideAlbum, hidePopularity, hideAddedAtColumn]);\r\n\r\n  const meta: TrackTableMeta = useMemo(() => {\r\n    return {queueGroupId: queueGroupId, hideTrackImage, playlist};\r\n  }, [queueGroupId, hideTrackImage, playlist]);\r\n\r\n  return (\r\n    <Table\r\n      closeOnInteractOutside\r\n      hideHeaderRow={hideHeaderRow}\r\n      selectionStyle=\"highlight\"\r\n      selectRowOnContextMenu\r\n      renderRowAs={renderRowAs || TrackTableRowWithContextMenu}\r\n      columns={filteredColumns}\r\n      data={tracks as Track[]}\r\n      meta={meta}\r\n      hideBorder={isMobile}\r\n      onAction={(track, index) => {\r\n        const newQueue = tracks.map(d =>\r\n          trackToMediaItem(d as Track, queueGroupId),\r\n        );\r\n        player.overrideQueueAndPlay(newQueue, index);\r\n      }}\r\n      {...tableProps}\r\n    />\r\n  );\r\n}\r\n\r\nfunction TrackTableRowWithContextMenu({\r\n  item,\r\n  children,\r\n  ...domProps\r\n}: RowElementProps<Track>) {\r\n  const row = <div {...domProps}>{children}</div>;\r\n  if (item.isPlaceholder) {\r\n    return row;\r\n  }\r\n  return (\r\n    <DialogTrigger\r\n      type=\"popover\"\r\n      mobileType=\"tray\"\r\n      triggerOnContextMenu\r\n      placement=\"bottom-start\"\r\n    >\r\n      {row}\r\n      <TableTrackContextDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {observeElementOffset, useVirtualizer} from '@tanstack/react-virtual';\r\nimport React, {Fragment, useContext, useEffect, useRef} from 'react';\r\nimport {TableRow} from '@common/ui/tables/table-row';\r\nimport {TableBodyProps} from '@common/ui/tables/table';\r\nimport {getScrollParent} from '@react-aria/utils';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\r\n\r\ninterface VirtualTableBodyProps extends TableBodyProps {\r\n  totalItems?: number;\r\n  query: UseInfiniteQueryResult;\r\n}\r\nexport function VirtualTableBody({\r\n  renderRowAs,\r\n  totalItems = 0,\r\n  query,\r\n}: VirtualTableBodyProps) {\r\n  const {data} = useContext(TableContext);\r\n\r\n  // make sure we are not rendering more placeholder rows than\r\n  // there are items left to lazy load and at most 10 placeholders.\r\n  // If total items is unknown, we will render 10 placeholders.\r\n  const placeholderRowCount =\r\n    totalItems <= 0 ? 10 : Math.min(totalItems - data.length, 10);\r\n\r\n  // only use virtualizer if playlist has more than 3 pages\r\n  return totalItems < 91 ? (\r\n    <Body\r\n      placeholderRowCount={placeholderRowCount}\r\n      renderRowAs={renderRowAs}\r\n      query={query}\r\n    />\r\n  ) : (\r\n    <VirtualizedBody\r\n      placeholderRowCount={placeholderRowCount}\r\n      renderRowAs={renderRowAs}\r\n      query={query}\r\n    />\r\n  );\r\n}\r\n\r\ninterface BodyProps extends TableBodyProps {\r\n  placeholderRowCount: number;\r\n  query: UseInfiniteQueryResult;\r\n}\r\nfunction Body({renderRowAs, placeholderRowCount, query}: BodyProps) {\r\n  const {data} = useContext(TableContext);\r\n  return (\r\n    <Fragment>\r\n      {data.map((track, index) => (\r\n        <TableRow\r\n          item={track}\r\n          index={index}\r\n          key={track.id}\r\n          renderAs={renderRowAs}\r\n        />\r\n      ))}\r\n      <Sentinel\r\n        dataCount={data.length}\r\n        placeholderRowCount={placeholderRowCount}\r\n        query={query}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction VirtualizedBody({renderRowAs, placeholderRowCount, query}: BodyProps) {\r\n  const {data} = useContext(TableContext);\r\n  const bodyRef = useRef<HTMLTableSectionElement>(null);\r\n  const scrollableRef = useRef<Element>(null!);\r\n  const scrollOffset = useRef(0);\r\n\r\n  // virtualizer will not work with \"getScrollElement: () => scrollableRef.current\"\r\n  // if scrollableRef.current is set in useEffect and is null on first render\r\n  const getScrollElement = () => {\r\n    if (scrollableRef.current) {\r\n      return scrollableRef.current;\r\n    }\r\n    if (bodyRef.current) {\r\n      scrollableRef.current = getScrollParent(bodyRef.current);\r\n    }\r\n    return scrollableRef.current;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (bodyRef.current) {\r\n      scrollOffset.current =\r\n        bodyRef.current.getBoundingClientRect().top +\r\n        getScrollElement().scrollTop;\r\n    }\r\n  }, [bodyRef]);\r\n\r\n  const virtualizer = useVirtualizer({\r\n    overscan: 10,\r\n    count: data.length,\r\n    getScrollElement,\r\n    estimateSize: () => 48,\r\n    // getScrollElement: () => scrollableRef.current,\r\n    observeElementOffset: (instance, cb) => {\r\n      return observeElementOffset(instance, (offset, isScrolling) => {\r\n        cb(offset, isScrolling); // Pass both offset and isScrolling arguments\r\n      });\r\n    },\r\n  });\r\n\r\n  const virtualRows = virtualizer.getVirtualItems();\r\n  const virtualHeight = `${\r\n    virtualizer.getTotalSize() +\r\n    // if showing placeholder rows, extended height of virtual list to show them\r\n    (query.isFetchingNextPage ? placeholderRowCount * 48 : 0)\r\n  }px`;\r\n\r\n  return (\r\n    <div\r\n      ref={bodyRef}\r\n      role=\"presentation\"\r\n      className=\"relative w-full\"\r\n      style={{\r\n        height: virtualHeight,\r\n      }}\r\n    >\r\n      {virtualRows.map(virtualItem => {\r\n        const item = data[virtualItem.index];\r\n        return (\r\n          <TableRow\r\n            item={item}\r\n            index={virtualItem.index}\r\n            key={item.id}\r\n            renderAs={renderRowAs}\r\n            className=\"absolute left-0 top-0 w-full\"\r\n            style={{\r\n              height: `${virtualItem.size}px`,\r\n              transform: `translateY(${virtualItem.start}px)`,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n      <Sentinel\r\n        dataCount={virtualizer.range?.endIndex ?? 0}\r\n        placeholderRowCount={placeholderRowCount}\r\n        query={query}\r\n        style={{\r\n          top: `${virtualizer.getTotalSize()}px`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SentinelProps extends BodyProps {\r\n  dataCount: number;\r\n  query: UseInfiniteQueryResult;\r\n  style?: React.CSSProperties;\r\n}\r\nfunction Sentinel({\r\n  dataCount,\r\n  placeholderRowCount,\r\n  renderRowAs,\r\n  query,\r\n  style,\r\n}: SentinelProps) {\r\n  // show at least one placeholder row always\r\n  return (\r\n    <InfiniteScrollSentinel\r\n      query={query}\r\n      style={style}\r\n      loaderMarginTop=\"mt-0\"\r\n      className=\"absolute left-0\"\r\n    >\r\n      {[...new Array(Math.max(placeholderRowCount, 1)).keys()].map(\r\n        (key, index) => {\r\n          const id = `placeholder-${key}`;\r\n          return (\r\n            <TableRow\r\n              item={{id, isPlaceholder: true}}\r\n              index={dataCount + index}\r\n              key={id}\r\n              renderAs={renderRowAs}\r\n            />\r\n          );\r\n        },\r\n      )}\r\n    </InfiniteScrollSentinel>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\r\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\r\nimport {usePaginatedChannelContent} from '@common/channels/requests/use-paginated-channel-content';\r\nimport {ChannelContentItem} from '@common/channels/channel';\r\n\r\nexport function ChannelTrackTable(\r\n  props: ChannelContentProps<ChannelContentItem<Track>>,\r\n) {\r\n  return (\r\n    <Fragment>\r\n      <ChannelHeading {...props} />\r\n      {props.isNested ? (\r\n        <SimpleTable {...props} />\r\n      ) : (\r\n        <PaginatedTable {...props} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction SimpleTable({channel}: ChannelContentProps<Track>) {\r\n  return (\r\n    <TrackTable tracks={channel.content?.data || []} enableSorting={false} />\r\n  );\r\n}\r\n\r\nfunction PaginatedTable({channel}: ChannelContentProps<Track>) {\r\n  const query = usePaginatedChannelContent<ChannelContentItem<Track>>(channel);\r\n\r\n  const totalItems =\r\n    channel.content && 'total' in channel.content\r\n      ? channel.content.total\r\n      : undefined;\r\n\r\n  return (\r\n    <TrackTable\r\n      enableSorting={false}\r\n      tracks={query.items}\r\n      tableBody={<VirtualTableBody query={query} totalItems={totalItems} />}\r\n    />\r\n  );\r\n}\r\n","export function drawAnimation(\r\n  waveData: number[][],\r\n  canvas: HTMLCanvasElement,\r\n  color: string,\r\n  barWidth: number,\r\n  barSpacing: number,\r\n) {\r\n  const context = canvas.getContext('2d');\r\n  if (!context) return;\r\n\r\n  context.clearRect(0, 0, canvas.width, canvas.height);\r\n  context.fillStyle = color;\r\n\r\n  waveData.forEach((lineData, index) => {\r\n    const x = lineData[0] + (barWidth + barSpacing) * index;\r\n    const barHeight = lineData[1];\r\n\r\n    // Calculate coordinates for rounded top\r\n    const barTopX = x + barWidth / 2;\r\n    const barTopY = canvas.height - barHeight;\r\n\r\n    // Draw the bar with a rounded top\r\n    context.beginPath();\r\n    context.moveTo(x, canvas.height);\r\n    context.lineTo(x, barTopY);\r\n    context.arc(barTopX, barTopY, barWidth / 2, Math.PI, 0, false);\r\n    context.lineTo(x + barWidth, canvas.height);\r\n    context.closePath();\r\n    context.fill();\r\n  });\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Comment} from '@common/comments/comment';\r\n\r\ninterface WaveDataResponse extends BackendResponse {\r\n  waveData: number[][];\r\n  comments: Comment[];\r\n}\r\n\r\nfunction queryKey(trackId: number | string) {\r\n  return ['tracks', +trackId, 'wave-data'];\r\n}\r\n\r\nexport function invalidateWaveData(trackId: number | string) {\r\n  queryClient.invalidateQueries({queryKey: queryKey(trackId)});\r\n}\r\n\r\nexport function useTrackWaveData(\r\n  trackId: number | string,\r\n  {enabled}: {enabled?: boolean} = {},\r\n) {\r\n  return useQuery({\r\n    queryKey: queryKey(trackId),\r\n    queryFn: () => fetchWaveData(trackId),\r\n    enabled,\r\n  });\r\n}\r\n\r\nfunction fetchWaveData(trackId: number | string) {\r\n  return apiClient\r\n    .get<WaveDataResponse>(`tracks/${trackId}/wave`)\r\n    .then(response => response.data);\r\n}\r\n","export function drawWaveform(\r\n  waveData: number[][],\r\n  canvas: HTMLCanvasElement,\r\n  color: string,\r\n  barWidth: number,\r\n  barSpacing: number,\r\n  audioUrl: string,\r\n  analyzerData: {\r\n    analyzer: AnalyserNode | null;\r\n    bufferLength: number;\r\n    dataArray: Uint8Array;\r\n    audioCtx: AudioContext | null;\r\n  } | null,\r\n) {\r\n  const context = canvas.getContext('2d');\r\n  if (!context) return;\r\n\r\n  let source: AudioBufferSourceNode | null = null;\r\n  let animationFrame: number | null = null;\r\n\r\n  if (analyzerData && analyzerData.audioCtx) {\r\n    source = analyzerData.audioCtx.createBufferSource() || null;\r\n  }\r\n  function draw() {\r\n    if (!context) return;\r\n    if (analyzerData) {\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n      context.fillStyle = color;\r\n      context.globalAlpha = 1;\r\n\r\n      waveData.forEach((lineData, index) => {\r\n        const x = lineData[0] + (barWidth + barSpacing) * index;\r\n        const barHeight = (analyzerData.dataArray[index] / 256) * canvas.height;\r\n        context.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\r\n      });\r\n\r\n      animationFrame = requestAnimationFrame(draw);\r\n    }\r\n  }\r\n\r\n  function updateAnimationTime() {\r\n    if (analyzerData && analyzerData.audioCtx) {\r\n      const currentTime = analyzerData.audioCtx?.currentTime;\r\n      const animationTime =\r\n        (currentTime % source!.buffer!.duration) / source!.buffer!.duration;\r\n      const animationFrameTime = animationTime * 1000; // Convert to milliseconds\r\n      animationFrame = requestAnimationFrame(draw);\r\n      setTimeout(\r\n        () => cancelAnimationFrame(animationFrame!),\r\n        animationFrameTime,\r\n      );\r\n    }\r\n  }\r\n\r\n  // Start the audio when the component is mounted\r\n  // Draw and update animation time\r\n  draw();\r\n  analyzerData?.audioCtx?.addEventListener('timeupdate', updateAnimationTime);\r\n\r\n  return {};\r\n}\r\n","import {Track} from '@app/web-player/tracks/track';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {\r\n  tracksToMediaItems,\r\n  trackToMediaItem,\r\n} from '@app/web-player/tracks/utils/track-to-media-item';\r\nimport {flushSync} from 'react-dom';\r\nimport {useEffect, useState} from 'react';\r\n\r\nexport function useTrackSeekbar(track: Track, queue?: Track[]) {\r\n  const player = usePlayerActions();\r\n  const cuedMedia = usePlayerStore(s => s.cuedMedia);\r\n\r\n  // either use exact duration from provider if this track is cued, or use duration from track props\r\n  const playerDuration = usePlayerStore(s => s.mediaDuration);\r\n  const duration =\r\n    cuedMedia?.id === track.id && playerDuration\r\n      ? playerDuration\r\n      : (track.duration || 0) / 1000;\r\n\r\n  const [currentTime, setCurrentTime] = useState(\r\n    track.id === player.getState().cuedMedia?.id ? player.getCurrentTime() : 0\r\n  );\r\n\r\n  useEffect(() => {\r\n    return player.subscribe({\r\n      progress: ({currentTime}) => {\r\n        setCurrentTime(\r\n          track.id === player.getState().cuedMedia?.id ? currentTime : 0\r\n        );\r\n      },\r\n    });\r\n  }, [player, track]);\r\n\r\n  return {\r\n    duration,\r\n    minValue: 0,\r\n    maxValue: duration,\r\n    value: currentTime,\r\n    onPointerDown: () => {\r\n      player.setIsSeeking(true);\r\n      player.pause();\r\n\r\n      // flush so provider src is changed immediately. Without this seeking\r\n      // will not work when clicking on a different track the first time\r\n      if (player.getState().cuedMedia?.id !== track.id) {\r\n        flushSync(() => {\r\n          if (queue?.length) {\r\n            const pointer = queue?.findIndex(t => t.id === track.id);\r\n            player.overrideQueue(tracksToMediaItems(queue), pointer);\r\n          } else {\r\n            player.cue(trackToMediaItem(track));\r\n          }\r\n        });\r\n      }\r\n    },\r\n    onChange: (value: number) => {\r\n      player.getState().emit('progress', {currentTime: value});\r\n      player.seek(value);\r\n    },\r\n    onChangeEnd: () => {\r\n      player.setIsSeeking(false);\r\n      player.play();\r\n    },\r\n  };\r\n}\r\n","import {\r\n  createContext,\r\n  MutableRefObject,\r\n  RefObject,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\n\r\ninterface CommentBarContextValue {\r\n  newCommentInputRef: RefObject<HTMLInputElement>;\r\n  newCommentPositionRef: MutableRefObject<number>;\r\n  markerIsVisible: boolean;\r\n  setMarkerIsVisible: (value: boolean) => void;\r\n  disableCommenting: boolean;\r\n}\r\n\r\nexport const CommentBarContext = createContext<CommentBarContextValue>(null!);\r\n\r\ninterface CommentBarContextProps {\r\n  children: any;\r\n  disableCommenting?: boolean;\r\n}\r\nexport function CommentBarContextProvider({\r\n  children,\r\n  disableCommenting = false,\r\n}: CommentBarContextProps) {\r\n  const [markerIsVisible, setMarkerIsVisible] = useState(false);\r\n  const newCommentInputRef = useRef<HTMLInputElement>(null);\r\n  const newCommentPositionRef = useRef<number>(0);\r\n  const value: CommentBarContextValue = useMemo(() => {\r\n    return {\r\n      newCommentInputRef,\r\n      newCommentPositionRef,\r\n      markerIsVisible,\r\n      setMarkerIsVisible,\r\n      disableCommenting,\r\n    };\r\n  }, [markerIsVisible, disableCommenting]);\r\n  return (\r\n    <CommentBarContext.Provider value={value}>\r\n      {children}\r\n    </CommentBarContext.Provider>\r\n  );\r\n}\r\n","import {getUserImage} from '@app/web-player/users/user-image';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {useSlider} from '@common/ui/forms/slider/use-slider';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useContext} from 'react';\r\nimport {Avatar} from '@common/ui/images/avatar';\r\nimport clsx from 'clsx';\r\nimport {useInteractOutside} from '@react-aria/interactions';\r\nimport {CommentBarContext} from '@app/web-player/tracks/waveform/comment-bar-context';\r\nimport {Comment} from '@common/comments/comment';\r\nimport {Track} from '@app/web-player/tracks/track';\r\n\r\ninterface CommentBarProps {\r\n  comments: Comment[];\r\n  track: Track;\r\n}\r\nexport function CommentBar({comments, track}: CommentBarProps) {\r\n  const {user, hasPermission} = useAuth();\r\n  const {\r\n    newCommentInputRef,\r\n    newCommentPositionRef,\r\n    markerIsVisible,\r\n    setMarkerIsVisible,\r\n    ...commentBarContext\r\n  } = useContext(CommentBarContext);\r\n\r\n  const disableCommenting =\r\n    commentBarContext.disableCommenting || !hasPermission('comments.create');\r\n\r\n  const {domProps, groupId, trackRef, getThumbPercent} = useSlider({\r\n    onChange: () => {\r\n      setMarkerIsVisible(true);\r\n      newCommentPositionRef.current = getThumbPercent(0) * 100;\r\n    },\r\n    onChangeEnd: () => {\r\n      newCommentInputRef.current?.focus();\r\n    },\r\n  });\r\n\r\n  useInteractOutside({\r\n    ref: trackRef,\r\n    onInteractOutside: e => {\r\n      if (!newCommentInputRef.current?.contains(e.target as HTMLElement)) {\r\n        setMarkerIsVisible(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'absolute top-48 left-0 h-26 w-full isolate',\r\n        !disableCommenting && 'cursor-pointer'\r\n      )}\r\n      ref={trackRef}\r\n      {...(disableCommenting ? {} : domProps)}\r\n      id={groupId}\r\n    >\r\n      {markerIsVisible ? (\r\n        <div\r\n          className=\"absolute top-0 left-0 z-20 overflow-hidden w-26 h-26 shadow-md -translate-x-1/2 cursor-move\"\r\n          style={{left: `${getThumbPercent(0) * 100}%`}}\r\n        >\r\n          <Avatar src={user?.avatar} size=\"w-full h-full\" />\r\n        </div>\r\n      ) : null}\r\n      {comments.map(comment => {\r\n        if (!comment.user) return null;\r\n        return (\r\n          <DialogTrigger key={comment.id} type=\"popover\" triggerOnHover>\r\n            <div\r\n              style={{left: `${Math.min(99, comment.position || 0)}%`}}\r\n              className={clsx(\r\n                'transition-opacity duration-300 ease-in-out absolute top-0 -translate-x-1/2 cursor-pointer',\r\n                markerIsVisible ? 'opacity-40' : 'opacity-100'\r\n              )}\r\n            >\r\n              <div\r\n                className=\"bg-cover w-16 h-16 rounded shadow bg-chip\"\r\n                style={{backgroundImage: `url(${getUserImage(comment.user)})`}}\r\n              />\r\n            </div>\r\n            <CommentDialog comment={comment} />\r\n          </DialogTrigger>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CommentDialogProps {\r\n  comment: Comment;\r\n}\r\nfunction CommentDialog({comment}: CommentDialogProps) {\r\n  return (\r\n    <Dialog size=\"w-auto\">\r\n      <DialogBody padding=\"p-8\">\r\n        <div className=\"flex items-center gap-10\">\r\n          {comment.user && (\r\n            <div className=\"text-primary\">{comment.user.display_name}</div>\r\n          )}\r\n          <div>{comment.content}</div>\r\n        </div>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useState,\r\n  ReactNode,\r\n} from 'react';\r\n\r\ntype GlobalContextType = {\r\n  search: string;\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n  tagsData: any[];\r\n  setData: Dispatch<SetStateAction<any[]>>;\r\n  tagsArray: any[];\r\n  setTagsArray: Dispatch<SetStateAction<any[]>>;\r\n  analyzerData: {\r\n    analyzer: AnalyserNode | null;\r\n    bufferLength: number;\r\n    dataArray: Uint8Array;\r\n    audioCtx: AudioContext | null;\r\n  };\r\n  setAnalyzerData: Dispatch<\r\n    SetStateAction<{\r\n      analyzer: AnalyserNode | null;\r\n      bufferLength: number;\r\n      dataArray: Uint8Array;\r\n      audioCtx: AudioContext | null;\r\n    }>\r\n  >;\r\n};\r\n\r\nconst GlobalContext = createContext<GlobalContextType | undefined>(undefined);\r\n\r\ntype GlobalContextProviderProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const GlobalContextProvider: React.FC<GlobalContextProviderProps> = ({\r\n  children,\r\n}) => {\r\n  const [analyzerData, setAnalyzerData] = useState<{\r\n    analyzer: AnalyserNode | null;\r\n    bufferLength: number;\r\n    dataArray: Uint8Array;\r\n    audioCtx: AudioContext | null;\r\n  }>({\r\n    analyzer: null,\r\n    bufferLength: 0,\r\n    dataArray: new Uint8Array([]),\r\n    audioCtx: null,\r\n  });\r\n  const [search, setSearch] = useState('');\r\n  const [tagsData, setData] = useState<any[]>([]);\r\n  const [tagsArray, setTagsArray] = useState<any[]>([]);\r\n\r\n  const contextValue: GlobalContextType = {\r\n    search,\r\n    tagsArray,\r\n    setTagsArray,\r\n    setSearch,\r\n    tagsData,\r\n    setData,\r\n    analyzerData,\r\n    setAnalyzerData,\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider value={contextValue}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMyContext = (): GlobalContextType => {\r\n  const context = useContext(GlobalContext);\r\n  if (!context) {\r\n    throw new Error(\r\n      'useGlobalContext must be used within a GlobalContextProvider',\r\n    );\r\n  }\r\n  return context;\r\n};\r\n","import {Track} from '@app/web-player/tracks/track';\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport {drawAnimation} from './waveform-animation';\r\nimport {useTrackWaveData} from '@app/web-player/tracks/requests/use-track-wave-data';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\n\r\nimport {\r\n  WAVE_HEIGHT,\r\n  WAVE_WIDTH,\r\n} from '@app/web-player/tracks/waveform/generate-waveform-data';\r\nimport clsx from 'clsx';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {useSlider} from '@common/ui/forms/slider/use-slider';\r\nimport {useThemeSelector} from '@common/ui/themes/theme-selector-context';\r\nimport {themeValueToHex} from '@common/ui/themes/utils/theme-value-to-hex';\r\nimport {drawWaveform} from '@app/web-player/tracks/waveform/draw-waveform';\r\nimport {useTrackSeekbar} from '@app/web-player/player-controls/seekbar/use-track-seekbar';\r\nimport {CommentBar} from '@app/web-player/tracks/waveform/comment-bar';\r\nimport {useMyContext} from '@app/GlobalContext';\r\n\r\nfunction generateFakeWaveData(\r\n  length: number,\r\n  amplitude: number,\r\n  segments: number,\r\n): number[][] {\r\n  const waveData: number[][] = [];\r\n\r\n  for (let i = 0; i < segments; i++) {\r\n    const start = i * (length / segments);\r\n    const end = (i + 1) * (length / segments);\r\n    const startAmplitude = (Math.random() * 0.5 + 0.5) * amplitude; // Random between 0.5 and 1, multiplied by amplitude\r\n    const endAmplitude = (Math.random() * 0.5 + 0.5) * amplitude;\r\n\r\n    waveData.push([start, startAmplitude, end - start, endAmplitude]);\r\n  }\r\n\r\n  return waveData;\r\n}\r\n\r\nconst durationClassName =\r\n  'text-[11px] absolute bottom-32 p-3 rounded text-white font-semibold z-30 pointer-events-none bg-black/80';\r\n\r\ninterface WaveformProps {\r\n  track: Track;\r\n  queue?: Track[];\r\n  className?: string;\r\n}\r\n\r\nexport function Waveform({track, className}: WaveformProps) {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const progressCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [isInView, setIsInView] = useState(false);\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const {data} = useTrackWaveData(track.id, {enabled: isInView});\r\n  const themeSelector = useThemeSelector();\r\n  const {analyzerData, setAnalyzerData} = useMyContext();\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting && entry.target === ref.current) {\r\n            setIsInView(true);\r\n            observer.disconnect();\r\n          }\r\n        });\r\n      },\r\n      {root: document.body},\r\n    );\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fakeWaveData = generateFakeWaveData(500, 50, 550); //\r\n\r\n    if (\r\n      canvasRef.current &&\r\n      progressCanvasRef.current &&\r\n      analyzerData.analyzer\r\n    ) {\r\n      drawWaveform(\r\n        fakeWaveData,\r\n        canvasRef.current,\r\n        '#424242',\r\n        5,\r\n        3,\r\n        track.src as string,\r\n        analyzerData,\r\n      );\r\n      drawWaveform(\r\n        fakeWaveData,\r\n        progressCanvasRef.current,\r\n        themeValueToHex('#fff'),\r\n        5,\r\n        3,\r\n        track.src as string,\r\n        analyzerData,\r\n      );\r\n      setIsVisible(true);\r\n    }\r\n  }, [data?.waveData, themeSelector.selectedTheme, track.src, analyzerData]);\r\n\r\n  const {value, onChange, onChangeEnd, duration, ...sliderProps} =\r\n    useTrackSeekbar(track);\r\n  const {domProps, groupId, thumbIds, trackRef, getThumbPercent} = useSlider({\r\n    ...sliderProps,\r\n    value: [value],\r\n    onChange: ([newValue]: number[]) => onChange(newValue),\r\n    onChangeEnd: () => onChangeEnd(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fakeWaveData = generateFakeWaveData(500, 50, 550); //\r\n\r\n    if (canvasRef.current && !analyzerData.analyzer) {\r\n      drawAnimation(fakeWaveData, canvasRef.current, '#424242', 5, 3);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"relative max-w-full\">\r\n      <div\r\n        id={groupId}\r\n        role=\"group\"\r\n        ref={ref}\r\n        className={clsx(\r\n          'relative isolate h-70 cursor-pointer overflow-hidden transition-opacity duration-200 ease-in',\r\n          isVisible ? 'opacity-100' : 'opacity-0',\r\n          className,\r\n        )}\r\n      >\r\n        <output\r\n          className={clsx(durationClassName, 'left-0')}\r\n          htmlFor={thumbIds[0]}\r\n          aria-live=\"off\"\r\n        >\r\n          {value ? <FormattedDuration seconds={value} /> : '0:00'}\r\n        </output>\r\n        <div key=\"wave\" {...domProps} ref={trackRef}>\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={WAVE_WIDTH}\r\n            height={WAVE_HEIGHT / 2 + 25}\r\n          />\r\n          <div\r\n            className=\"absolute left-0 top-0 z-20 w-5 overflow-hidden\"\r\n            style={{width: `${getThumbPercent(0) * 100}%`}}\r\n          >\r\n            <canvas\r\n              ref={progressCanvasRef}\r\n              width={WAVE_WIDTH}\r\n              height={WAVE_HEIGHT / 2 + 25}\r\n              className=\"wave-canvas\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={clsx(durationClassName, 'right-0')}>\r\n          <FormattedDuration seconds={duration} />\r\n        </div>\r\n      </div>\r\n      {data?.comments && <CommentBar comments={data.comments} track={track} />}\r\n    </section>\r\n  );\r\n}\r\n","import {Slider} from '@common/ui/forms/slider/slider';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {useTrackSeekbar} from '@app/web-player/player-controls/seekbar/use-track-seekbar';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport clsx from 'clsx';\r\n\r\ninterface TrackSeekbarProps {\r\n  track: Track;\r\n  queue?: Track[];\r\n  className?: string;\r\n}\r\nexport function TrackSeekbar({track, queue, className}: TrackSeekbarProps) {\r\n  const {duration, ...sliderProps} = useTrackSeekbar(track, queue);\r\n\r\n  return (\r\n    <div className={clsx('flex items-center gap-12', className)}>\r\n      <div className=\"text-xs text-muted flex-shrink-0 min-w-40 text-right\">\r\n        {sliderProps.value ? (\r\n          <FormattedDuration seconds={sliderProps.value} />\r\n        ) : (\r\n          '0:00'\r\n        )}\r\n      </div>\r\n      <Slider\r\n        trackColor=\"neutral\"\r\n        thumbSize=\"w-14 h-14\"\r\n        showThumbOnHoverOnly={true}\r\n        className=\"flex-auto\"\r\n        width=\"w-auto\"\r\n        {...sliderProps}\r\n      />\r\n      <div className=\"text-xs text-muted flex-shrink-0 min-w-40\">\r\n        <FormattedDuration seconds={duration} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useMutation, useQueryClient} from '@tanstack/react-query';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {Commentable} from '@common/comments/commentable';\r\nimport {Comment} from '@common/comments/comment';\r\n\r\ninterface Response extends BackendResponse {\r\n  //\r\n}\r\n\r\nexport interface CreateCommentPayload {\r\n  commentable: Commentable;\r\n  content: string;\r\n  inReplyTo?: Comment;\r\n}\r\n\r\nexport function useCreateComment() {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: (props: CreateCommentPayload) => createComment(props),\r\n    onSuccess: async (response, props) => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: [\r\n          'comment',\r\n          `${props.commentable.id}-${props.commentable.model_type}`,\r\n        ],\r\n      });\r\n      toast(message('Comment posted'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction createComment({\r\n  commentable,\r\n  content,\r\n  inReplyTo,\r\n  ...other\r\n}: CreateCommentPayload): Promise<Response> {\r\n  const payload = {\r\n    commentable_id: commentable.id,\r\n    commentable_type: commentable.model_type,\r\n    content,\r\n    inReplyTo,\r\n    ...other,\r\n  };\r\n  return apiClient.post('comment', payload).then(r => r.data);\r\n}\r\n","import {Commentable} from '@common/comments/commentable';\r\nimport {Comment} from '@common/comments/comment';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useCreateComment} from '@common/comments/requests/use-create-comment';\r\nimport {RefObject, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Avatar} from '@common/ui/images/avatar';\r\nimport {message} from '@common/i18n/message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useObjectRef} from '@react-aria/utils';\r\nimport {Button} from '@common/ui/buttons/button';\r\n\r\nexport interface NewCommentFormProps {\r\n  commentable: Commentable;\r\n  inReplyTo?: Comment;\r\n  onSuccess?: () => void;\r\n  className?: string;\r\n  autoFocus?: boolean;\r\n  inputRef?: RefObject<HTMLInputElement>;\r\n  // additional data that should be sent to backend when creating comments\r\n  payload?: Record<string, number | string>;\r\n}\r\nexport function NewCommentForm({\r\n  commentable,\r\n  inReplyTo,\r\n  onSuccess,\r\n  className,\r\n  autoFocus,\r\n  payload,\r\n  ...props\r\n}: NewCommentFormProps) {\r\n  const {trans} = useTrans();\r\n  const {user} = useAuth();\r\n  const createComment = useCreateComment();\r\n  const inputRef = useObjectRef<HTMLInputElement>(props.inputRef);\r\n  const [inputIsExpanded, setInputIsExpanded] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const clearInput = () => {\r\n    setInputIsExpanded(false);\r\n    if (inputRef.current) {\r\n      inputRef.current.blur();\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx('py-6 flex gap-24', className)}\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        if (inputValue && !createComment.isPending) {\r\n          createComment.mutate(\r\n            {\r\n              ...payload,\r\n              commentable,\r\n              content: inputValue,\r\n              inReplyTo,\r\n            },\r\n            {\r\n              onSuccess: () => {\r\n                clearInput();\r\n                onSuccess?.();\r\n              },\r\n            },\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <Avatar size=\"xl\" circle src={user?.avatar} label={user?.display_name} />\r\n      <div className=\"flex-auto\">\r\n        <div className=\"text-xs text-muted mb-10\">\r\n          <Trans\r\n            message=\"Comment as :name\"\r\n            values={{\r\n              name: (\r\n                <span className=\"font-medium text\">{user?.display_name}</span>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <TextField\r\n          inputRef={inputRef}\r\n          autoFocus={autoFocus}\r\n          inputElementType=\"textarea\"\r\n          inputClassName=\"resize-none\"\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onFocus={() => setInputIsExpanded(true)}\r\n          onBlur={() => {\r\n            if (!inputValue) {\r\n              setInputIsExpanded(false);\r\n            }\r\n          }}\r\n          minLength={3}\r\n          rows={inputIsExpanded ? 3 : 1}\r\n          placeholder={\r\n            inReplyTo\r\n              ? trans(message('Write a reply'))\r\n              : trans(message('Leave a comment'))\r\n          }\r\n        />\r\n        {inputIsExpanded && (\r\n          <div className=\"flex items-center gap-12 justify-end mt-12\">\r\n            <Button variant=\"outline\" onClick={() => clearInput()}>\r\n              <Trans message=\"Cancel\" />\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={createComment.isPending || inputValue.length < 3}\r\n            >\r\n              <Trans message=\"Comment\" />\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import {\r\n  NewCommentForm,\r\n  NewCommentFormProps,\r\n} from '@common/comments/new-comment-form';\r\nimport React, {useContext} from 'react';\r\nimport {CommentBarContext} from '@app/web-player/tracks/waveform/comment-bar-context';\r\nimport {invalidateWaveData} from '@app/web-player/tracks/requests/use-track-wave-data';\r\nimport {useAuth} from '@common/auth/use-auth';\r\n\r\nexport function CommentBarNewCommentForm({\r\n  commentable,\r\n  className,\r\n}: NewCommentFormProps) {\r\n  const {isLoggedIn} = useAuth();\r\n  const {newCommentInputRef, newCommentPositionRef, setMarkerIsVisible} =\r\n    useContext(CommentBarContext);\r\n\r\n  if (!isLoggedIn) return null;\r\n\r\n  return (\r\n    <NewCommentForm\r\n      inputRef={newCommentInputRef}\r\n      className={className}\r\n      commentable={commentable}\r\n      payload={{position: newCommentPositionRef.current}}\r\n      onSuccess={() => {\r\n        setMarkerIsVisible(false);\r\n        invalidateWaveData(commentable.id);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {useAddItemsToLibrary} from '@app/web-player/library/requests/use-add-items-to-library';\r\nimport {useRemoveItemsFromLibrary} from '@app/web-player/library/requests/use-remove-items-from-library';\r\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\r\nimport {Likeable} from '@app/web-player/library/likeable';\r\nimport {FavoriteIcon} from '@common/icons/material/Favorite';\r\nimport {FavoriteBorderIcon} from '@common/icons/material/FavoriteBorder';\r\nimport {Button, ButtonProps} from '@common/ui/buttons/button';\r\nimport {message} from '@common/i18n/message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\r\n\r\ninterface LikeButtonProps extends Omit<ButtonProps, 'children' | 'onClick'> {\r\n  likeable: Likeable;\r\n}\r\nexport function LikeButton({\r\n  likeable,\r\n  radius = 'rounded-full',\r\n  disabled,\r\n  ...buttonProps\r\n}: LikeButtonProps) {\r\n  const authHandler = useAuthClickCapture();\r\n  const addToLibrary = useAddItemsToLibrary();\r\n  const removeFromLibrary = useRemoveItemsFromLibrary();\r\n  const isLiked = useLibraryStore(s => s.has(likeable));\r\n  const isLoading = addToLibrary.isPending || removeFromLibrary.isPending;\r\n\r\n  const labels = getLabels(likeable);\r\n\r\n  if (isLiked) {\r\n    return (\r\n      <Button\r\n        {...buttonProps}\r\n        variant=\"outline\"\r\n        radius={radius}\r\n        startIcon={<FavoriteIcon className=\"text-primary\" />}\r\n        disabled={disabled || isLoading}\r\n        onClickCapture={authHandler}\r\n        onClick={() => {\r\n          removeFromLibrary.mutate({likeables: [likeable]});\r\n        }}\r\n      >\r\n        <Trans {...labels.removeLike} />\r\n      </Button>\r\n    );\r\n  }\r\n  return (\r\n    <Button\r\n      {...buttonProps}\r\n      variant=\"outline\"\r\n      radius={radius}\r\n      startIcon={<FavoriteBorderIcon />}\r\n      disabled={disabled || isLoading}\r\n      onClickCapture={authHandler}\r\n      onClick={() => {\r\n        addToLibrary.mutate({likeables: [likeable]});\r\n      }}\r\n    >\r\n      <Trans {...labels.like} />\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction getLabels(likeable: Likeable) {\r\n  switch (likeable.model_type) {\r\n    case 'artist':\r\n      return {like: message('Follow'), removeLike: message('Following')};\r\n    default:\r\n      return {like: message('Like'), removeLike: message('Liked')};\r\n  }\r\n}\r\n","import {Track} from '@app/web-player/tracks/track';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {useToggleRepost} from '@app/web-player/reposts/use-toggle-repost';\r\nimport {useRepostsStore} from '@app/web-player/library/state/reposts-store';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {RepeatIcon} from '@common/icons/material/Repeat';\r\nimport clsx from 'clsx';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {ButtonSize} from '@common/ui/buttons/button-size';\r\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\r\n\r\ninterface RepostButtonProps {\r\n  item: Track | Album;\r\n  className?: string;\r\n  size?: ButtonSize;\r\n  radius?: string;\r\n  disabled?: boolean;\r\n}\r\nexport function RepostButton({\r\n  item,\r\n  className,\r\n  size = 'xs',\r\n  radius,\r\n  disabled,\r\n}: RepostButtonProps) {\r\n  const authHandler = useAuthClickCapture();\r\n  const {player} = useSettings();\r\n  const toggleRepost = useToggleRepost();\r\n  const isReposted = useRepostsStore(s => s.has(item));\r\n  if (!player?.enable_repost) return null;\r\n\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant=\"outline\"\r\n      size={size}\r\n      radius={radius}\r\n      startIcon={<RepeatIcon className={clsx(isReposted && 'text-primary')} />}\r\n      disabled={disabled || toggleRepost.isPending}\r\n      onClickCapture={authHandler}\r\n      onClick={() => toggleRepost.mutate({repostable: item})}\r\n    >\r\n      {isReposted ? <Trans message=\"Reposted\" /> : <Trans message=\"Repost\" />}\r\n    </Button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FavoriteIcon} from '@common/icons/material/Favorite';\r\nimport {RepeatIcon} from '@common/icons/material/Repeat';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\n\r\ninterface Props {\r\n  item: Track | Album | Artist;\r\n  className?: string;\r\n  showPlays?: boolean;\r\n}\r\nexport function MediaItemStats({item, className, showPlays = true}: Props) {\r\n  return (\r\n    <div\r\n      className={clsx('flex items-center gap-20 text-sm text-muted', className)}\r\n    >\r\n      {showPlays && <PlayCount item={item} />}\r\n      <LikesCount item={item} />\r\n      {item.model_type !== 'artist' && <RepostsCount item={item} />}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PlayCountProps {\r\n  item: Track | Album | Artist;\r\n}\r\nfunction PlayCount({item}: PlayCountProps) {\r\n  if (!item.plays) return null;\r\n\r\n  const count = (\r\n    <FormattedNumber\r\n      compactDisplay=\"short\"\r\n      notation=\"compact\"\r\n      value={item.plays}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\":count plays\" values={{count}} />}>\r\n      <div>\r\n        <PlayArrowFilledIcon size=\"xs\" className=\"mr-4\" />\r\n        {count}\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\ninterface LikesCountProps {\r\n  item: Track | Album | Artist;\r\n}\r\nfunction LikesCount({item}: LikesCountProps) {\r\n  if (!item.likes_count) return null;\r\n\r\n  const count = <FormattedNumber value={item.likes_count} />;\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\":count likes\" values={{count}} />}>\r\n      <div>\r\n        <FavoriteIcon size=\"xs\" className=\"mr-4\" />\r\n        {count}\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\ninterface RepostsCountProps {\r\n  item: Track | Album;\r\n}\r\nfunction RepostsCount({item}: RepostsCountProps) {\r\n  if (!item.reposts_count) return null;\r\n\r\n  const count = <FormattedNumber value={item.reposts_count} />;\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\":count reposts\" values={{count}} />}>\r\n      <div className=\"hidden @[566px]:block\">\r\n        <RepeatIcon size=\"xs\" className=\"mr-4\" />\r\n        {count}\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport {LikeButton} from '@app/web-player/library/like-button';\r\nimport {RepostButton} from '@app/web-player/reposts/repost-button';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ShareIcon} from '@common/icons/material/Share';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {MoreHorizIcon} from '@common/icons/material/MoreHoriz';\r\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\r\nimport {MediaItemStats} from '@app/web-player/tracks/media-item-stats';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {AlbumContextDialog} from '@app/web-player/albums/album-context-dialog';\r\nimport clsx from 'clsx';\r\nimport {ButtonSize} from '@common/ui/buttons/button-size';\r\nimport {ShareMediaDialog} from '@app/web-player/sharing/share-media-dialog';\r\n\r\ninterface Props {\r\n  item: Track | Album;\r\n  managesItem: boolean;\r\n  buttonClassName?: string;\r\n  buttonGap?: string;\r\n  buttonSize?: ButtonSize;\r\n  buttonRadius?: string;\r\n  children?: ReactNode;\r\n  className?: string;\r\n}\r\nexport function TrackActionsBar({\r\n  item,\r\n  managesItem,\r\n  buttonClassName,\r\n  buttonGap = 'mr-8',\r\n  buttonSize = 'xs',\r\n  buttonRadius = 'rounded',\r\n  children,\r\n  className,\r\n}: Props) {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'flex items-center justify-center gap-24 overflow-hidden @container md:justify-between',\r\n        className,\r\n      )}\r\n    >\r\n      <div>\r\n        {children}\r\n        <LikeButton\r\n          size={buttonSize}\r\n          likeable={item}\r\n          className={clsx(buttonGap, buttonClassName, 'max-md:hidden')}\r\n          radius={buttonRadius}\r\n          disabled={managesItem}\r\n        />\r\n        <RepostButton\r\n          item={item}\r\n          size={buttonSize}\r\n          radius={buttonRadius}\r\n          disabled={managesItem}\r\n          className={clsx(\r\n            buttonGap,\r\n            buttonClassName,\r\n            'hidden @[840px]:inline-flex',\r\n          )}\r\n        />\r\n        <DialogTrigger type=\"modal\">\r\n          <Button\r\n            size={buttonSize}\r\n            variant=\"outline\"\r\n            startIcon={<ShareIcon />}\r\n            className={clsx(\r\n              buttonGap,\r\n              buttonClassName,\r\n              'hidden @[660px]:inline-flex',\r\n            )}\r\n            radius={buttonRadius}\r\n          >\r\n            <Trans message=\"Share\" />\r\n          </Button>\r\n          <ShareMediaDialog item={item} />\r\n        </DialogTrigger>\r\n        <DialogTrigger type=\"popover\" mobileType=\"tray\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size={buttonSize}\r\n            startIcon={<MoreHorizIcon />}\r\n            className={clsx(buttonGap, buttonClassName)}\r\n            radius={buttonRadius}\r\n          >\r\n            <Trans message=\"More\" />\r\n          </Button>\r\n          <MoreDialog item={item} />\r\n        </DialogTrigger>\r\n      </div>\r\n      <MediaItemStats item={item} className=\"max-xl:hidden\" />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MoreDialogProps {\r\n  item: Track | Album;\r\n}\r\nfunction MoreDialog({item}: MoreDialogProps) {\r\n  if (item.model_type === 'track') {\r\n    return <TrackContextDialog tracks={[item]} />;\r\n  }\r\n  return <AlbumContextDialog album={item} />;\r\n}\r\n","import {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {Waveform} from '@app/web-player/tracks/waveform/waveform';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {TrackSeekbar} from '@app/web-player/player-controls/seekbar/track-seekbar';\r\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {\r\n  CommentBarContext,\r\n  CommentBarContextProvider,\r\n} from '@app/web-player/tracks/waveform/comment-bar-context';\r\nimport {CommentBarNewCommentForm} from '@app/web-player/tracks/waveform/comment-bar-new-comment-form';\r\nimport React, {Fragment, memo, useContext} from 'react';\r\nimport {AnimatePresence} from 'framer-motion';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {GenreLink} from '@app/web-player/genres/genre-link';\r\nimport {RepeatIcon} from '@common/icons/material/Repeat';\r\nimport {TrackLink} from '@app/web-player/tracks/track-link';\r\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\r\nimport {User} from '@common/auth/user';\r\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\r\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\r\nimport clsx from 'clsx';\r\n\r\ninterface TrackListItemProps {\r\n  track: Track;\r\n  queue?: Track[];\r\n  reposter?: User;\r\n  className?: string;\r\n  hideArtwork?: boolean;\r\n  hideActions?: boolean;\r\n  linksInNewTab?: boolean;\r\n}\r\nexport const TrackListItem = memo(\r\n  ({\r\n    track,\r\n    queue,\r\n    reposter,\r\n    className,\r\n    hideArtwork = false,\r\n    hideActions = false,\r\n    linksInNewTab = false,\r\n  }: TrackListItemProps) => {\r\n    const {player} = useSettings();\r\n    const {managesTrack} = useTrackPermissions([track]);\r\n\r\n    const showWave =\r\n      player?.seekbar_type === 'waveform' && trackIsLocallyUploaded(track);\r\n\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          'overflow-hidden',\r\n          !hideArtwork && 'md:flex md:gap-24',\r\n          className,\r\n        )}\r\n      >\r\n        {!hideArtwork && (\r\n          <TrackImage\r\n            track={track}\r\n            className=\"flex-shrink-0 rounded max-md:hidden\"\r\n            size=\"w-184 h-184\"\r\n          />\r\n        )}\r\n        <div className=\"min-w-0 flex-auto\">\r\n          <div className=\"flex items-center gap-14\">\r\n            <PlaybackToggleButton\r\n              track={track}\r\n              tracks={queue}\r\n              buttonType=\"icon\"\r\n              color=\"primary\"\r\n              variant=\"flat\"\r\n              radius=\"rounded-full\"\r\n              equalizerColor=\"white\"\r\n            />\r\n            <div>\r\n              <div className=\"flex items-center gap-6 text-sm text-muted\">\r\n                <ArtistLinks\r\n                  artists={track.artists}\r\n                  target={linksInNewTab ? '_blank' : undefined}\r\n                />\r\n                {reposter && (\r\n                  <Fragment>\r\n                    <RepeatIcon size=\"xs\" />\r\n                    <UserProfileLink\r\n                      user={reposter}\r\n                      target={linksInNewTab ? '_blank' : undefined}\r\n                    />\r\n                  </Fragment>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <TrackLink\r\n                  track={track}\r\n                  target={linksInNewTab ? '_blank' : undefined}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-auto text-sm\">\r\n              <FormattedRelativeTime date={track.created_at} />\r\n              {track.genres?.length ? (\r\n                <Chip className=\"mt-6 w-max\" size=\"xs\">\r\n                  <GenreLink\r\n                    genre={track.genres[0]}\r\n                    target={linksInNewTab ? '_blank' : undefined}\r\n                  />\r\n                </Chip>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-20\">\r\n            {showWave ? (\r\n              <CommentBarContextProvider disableCommenting={hideActions}>\r\n                <WaveformWithComments track={track} queue={queue} />\r\n              </CommentBarContextProvider>\r\n            ) : (\r\n              <TrackSeekbar track={track} queue={queue} />\r\n            )}\r\n          </div>\r\n          {!hideActions && (\r\n            <TrackActionsBar\r\n              item={track}\r\n              managesItem={managesTrack}\r\n              className=\"mt-20\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface WaveformWithCommentsProps {\r\n  track: Track;\r\n  queue?: Track[];\r\n}\r\nexport function WaveformWithComments({\r\n  track,\r\n  queue,\r\n}: WaveformWithCommentsProps) {\r\n  const {markerIsVisible} = useContext(CommentBarContext);\r\n  return (\r\n    <Fragment>\r\n      <Waveform track={track} queue={queue} />\r\n      <AnimatePresence mode=\"wait\">\r\n        {markerIsVisible && (\r\n          <CommentBarNewCommentForm\r\n            className=\"mb-8 mt-28\"\r\n            commentable={track}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {TrackListItem} from '@app/web-player/tracks/track-list/track-list-item';\r\nimport React from 'react';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\r\nimport {UseInfiniteDataResult} from '@common/ui/infinite-scroll/use-infinite-data';\r\n\r\ninterface Props {\r\n  tracks?: Track[];\r\n  query?: UseInfiniteDataResult<Track>;\r\n}\r\nexport function TrackList({tracks, query}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  if (!tracks) {\r\n    tracks = query ? query.items : [];\r\n  }\r\n\r\n  if (isMobile) {\r\n    if (!query) {\r\n      return <TrackTable tracks={tracks} />;\r\n    }\r\n    return (\r\n      <TrackTable\r\n        tracks={tracks}\r\n        tableBody={<VirtualTableBody query={query} />}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {tracks.map(track => (\r\n        <TrackListItem\r\n          queue={tracks}\r\n          key={track.id}\r\n          track={track}\r\n          className=\"mb-40\"\r\n        />\r\n      ))}\r\n      {query && <InfiniteScrollSentinel query={query} />}\r\n    </div>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\r\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\r\nimport {usePaginatedChannelContent} from '@common/channels/requests/use-paginated-channel-content';\r\nimport {ChannelContentItem} from '@common/channels/channel';\r\n\r\nexport function ChannelTrackList(\r\n  props: ChannelContentProps<ChannelContentItem<Track>>,\r\n) {\r\n  return (\r\n    <Fragment>\r\n      <ChannelHeading {...props} />\r\n      {props.isNested ? (\r\n        <TrackList tracks={props.channel.content?.data} />\r\n      ) : (\r\n        <PaginatedList {...props} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction PaginatedList({channel}: ChannelContentProps<Track>) {\r\n  const query = usePaginatedChannelContent<ChannelContentItem<Track>>(channel);\r\n  return <TrackList query={query} />;\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\r\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\r\nimport {ChannelContentProps} from '@app/web-player/channels/channel-content';\r\nimport {ChannelContentGridItem} from '@app/web-player/channels/channel-content-grid-item';\r\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\r\nimport debounce from 'just-debounce-it';\r\n\r\nexport function ChannelContentCarousel(props: ChannelContentProps) {\r\n  const {channel} = props;\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const itemWidth = useRef<number>(0);\r\n\r\n  const [enablePrev, setEnablePrev] = useState(false);\r\n  const [enableNext, setEnableNext] = useState(true);\r\n\r\n  const updateNavStatus = useCallback(() => {\r\n    const el = ref.current;\r\n    if (el && itemWidth.current) {\r\n      setEnablePrev(el.scrollLeft > 0);\r\n      setEnableNext(el.scrollWidth - el.scrollLeft !== el.clientWidth);\r\n    }\r\n  }, []);\r\n\r\n  // enable/disable navigation buttons based on element scroll offset\r\n  useEffect(() => {\r\n    const el = ref.current;\r\n    const handleScroll = debounce(() => updateNavStatus(), 100);\r\n    if (el) {\r\n      el.addEventListener('scroll', handleScroll);\r\n    }\r\n    return () => el?.removeEventListener('scroll', handleScroll);\r\n  }, [updateNavStatus]);\r\n\r\n  // get width for first grid item\r\n  useLayoutEffect(() => {\r\n    const el = ref.current;\r\n    if (el) {\r\n      const firstGridItem = el.children.item(0);\r\n      const observer = new ResizeObserver(entries => {\r\n        itemWidth.current = entries[0].contentRect.width;\r\n        updateNavStatus();\r\n      });\r\n      if (firstGridItem) {\r\n        observer.observe(firstGridItem);\r\n      }\r\n      return () => observer.unobserve(el);\r\n    }\r\n  }, [updateNavStatus]);\r\n\r\n  const scrollAmount = () => {\r\n    return itemWidth.current * (3 - 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between gap-24 mb-14\">\r\n        <ChannelHeading {...props} margin=\"mb-4\" />\r\n        <div>\r\n          <IconButton\r\n            disabled={!enablePrev}\r\n            onClick={() => {\r\n              if (ref.current) {\r\n                ref.current.scrollBy({left: -scrollAmount()});\r\n              }\r\n            }}\r\n          >\r\n            <KeyboardArrowLeftIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            disabled={!enableNext}\r\n            onClick={() => {\r\n              if (ref.current) {\r\n                ref.current.scrollBy({left: scrollAmount()});\r\n              }\r\n            }}\r\n          >\r\n            <KeyboardArrowRightIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div\r\n        ref={ref}\r\n        className=\"content-carousel content-grid relative w-full grid grid-flow-col grid-rows-[auto] overflow-x-auto overflow-y-hidden gap-24 snap-always snap-x snap-mandatory hidden-scrollbar scroll-smooth\"\r\n      >\r\n        {channel.content?.data.map(item => (\r\n          <ChannelContentGridItem\r\n            key={`${item.id}-${item.model_type}`}\r\n            item={item}\r\n            items={channel.content?.data}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\r\nimport React, {Fragment} from 'react';\r\nimport {ChannelContentGrid} from '@app/web-player/channels/channel-content-grid';\r\nimport {ChannelTrackTable} from '@app/web-player/channels/channel-track-table';\r\nimport {ChannelTrackList} from '@app/web-player/channels/channel-track-list';\r\nimport {ChannelContentCarousel} from '@app/web-player/channels/channel-content-carousel';\r\nimport {ChannelHeading} from '@app/web-player/channels/channel-heading';\r\nimport {ChannelContentModel} from '@app/admin/channels/channel-content-config';\r\nimport {Channel, CHANNEL_MODEL} from '@common/channels/channel';\r\n\r\nexport interface ChannelContentProps<\r\n  T extends ChannelContentModel = ChannelContentModel,\r\n> {\r\n  channel: Channel<T>;\r\n  isNested?: boolean;\r\n}\r\nexport function ChannelContent(props: ChannelContentProps) {\r\n  const {channel, isNested} = props;\r\n  const contentModel = channel.config.contentModel;\r\n  const layout = isNested ? channel.config.nestedLayout : channel.config.layout;\r\n  if (!channel.content) {\r\n    return null;\r\n  }\r\n\r\n  if (contentModel === TRACK_MODEL && layout === 'list') {\r\n    return <ChannelTrackList {...(props as ChannelContentProps<Track>)} />;\r\n  } else if (contentModel === TRACK_MODEL && layout === 'trackTable') {\r\n    return <ChannelTrackTable {...(props as ChannelContentProps<Track>)} />;\r\n  } else if (contentModel === CHANNEL_MODEL) {\r\n    return <NestedChannels {...(props as ChannelContentProps<Channel>)} />;\r\n  } else if (layout === 'carousel') {\r\n    return <ChannelContentCarousel {...props} />;\r\n  } else {\r\n    return <ChannelContentGrid {...props} />;\r\n  }\r\n}\r\n\r\nfunction NestedChannels({channel}: ChannelContentProps) {\r\n  return (\r\n    <Fragment>\r\n      <ChannelHeading channel={channel} />\r\n      {channel.content?.data.map(nestedChannel => (\r\n        <div key={nestedChannel.id} className=\"mb-50\">\r\n          <ChannelContent\r\n            channel={nestedChannel as Channel<Channel>}\r\n            isNested\r\n          />\r\n        </div>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useAuth} from '../../auth/use-auth';\r\nimport {memo, useEffect, useId, useMemo, useRef} from 'react';\r\nimport lazyLoader from '../../utils/http/lazy-loader';\r\nimport clsx from 'clsx';\r\nimport {useSettings} from '../../core/settings/use-settings';\r\nimport dot from 'dot-object';\r\nimport {Settings} from '@common/core/settings/settings';\r\nimport {getScrollParent} from '@react-aria/utils';\r\n\r\ninterface AdHostProps {\r\n  slot: keyof Omit<NonNullable<Settings['ads']>, 'disable'>;\r\n  className?: string;\r\n}\r\nexport function AdHost({slot, className}: AdHostProps) {\r\n  const settings = useSettings();\r\n  const {isSubscribed} = useAuth();\r\n  const adCode = useMemo(() => {\r\n    return dot.pick(`ads.${slot}`, settings);\r\n  }, [slot, settings]);\r\n\r\n  if (settings.ads?.disable || isSubscribed || !adCode) return null;\r\n\r\n  return <InvariantAd className={className} slot={slot} adCode={adCode} />;\r\n}\r\n\r\ninterface InvariantAdProps {\r\n  slot: string;\r\n  adCode: string;\r\n  className?: string;\r\n}\r\nconst InvariantAd = memo(\r\n  ({ slot, adCode, className }: InvariantAdProps) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const id = useId();\r\n\r\n    useEffect(() => {\r\n      if (ref.current) {\r\n        loadAdScripts(adCode, ref.current).then(() => {\r\n          executeAdJavascript(adCode, id);\r\n        });\r\n      }\r\n      return () => {\r\n        // @ts-ignore\r\n        delete window['google_ad_modifications'];\r\n      };\r\n    }, [adCode, id]);\r\n\r\n    // remove height modifications added by adsense\r\n    useEffect(() => {\r\n      if (ref.current) {\r\n        const scrollParent = getScrollParent(ref.current) as HTMLElement;\r\n        if (scrollParent) {\r\n          const observer = new MutationObserver(function () {\r\n            scrollParent.style.height = '';\r\n            scrollParent.style.minHeight = '';\r\n          });\r\n          observer.observe(scrollParent, {\r\n            attributes: true,\r\n            attributeFilter: ['style'],\r\n          });\r\n          return () => observer.disconnect();\r\n        }\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        id={id}\r\n        className={clsx(\r\n          'ad-host flex max-h-[600px] min-h-90 w-full max-w-full items-center justify-center overflow-hidden',\r\n          `${slot.replace(/\\./g, '-')}-host`,\r\n          className,\r\n        )}\r\n        dangerouslySetInnerHTML={{ __html: getAdHtml(adCode) }}\r\n      ></div>\r\n    );\r\n  },\r\n  () => {\r\n    // never re-render\r\n    return false;\r\n  },\r\n);\r\n\r\nfunction getAdHtml(adCode: string) {\r\n  // strip out all script tags from ad code and leave only html\r\n  return adCode\r\n    ?.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\r\n    .trim();\r\n}\r\n\r\n// Load any external scripts needed by ad.\r\nfunction loadAdScripts(adCode: string, parentEl: HTMLDivElement): Promise<any> {\r\n  const promises = [];\r\n\r\n  // load ad code script\r\n  const pattern = /<script.*?src=['\"](.*?)['\"]/g;\r\n  let match;\r\n\r\n  while ((match = pattern.exec(adCode))) {\r\n    if (match[1]) {\r\n      promises.push(lazyLoader.loadAsset(match[1], { type: 'js', parentEl }));\r\n    }\r\n  }\r\n\r\n  return Promise.all(promises);\r\n}\r\n\r\n// Execute ad code javascript and replace document.write if needed.\r\nfunction executeAdJavascript(adCode: string, id: string) {\r\n  // find any ad code javascript that needs to be executed\r\n  const pattern = /<script\\b[^>]*>([\\s\\S]*?)<\\/script>/g;\r\n  let content;\r\n\r\n  while ((content = pattern.exec(adCode))) {\r\n    if (content[1]) {\r\n      const r = `var d = document.createElement('div'); d.innerHTML = $1; document.getElementById('${id}').appendChild(d.firstChild);`;\r\n      const toEval = `(function() {${r}})();`;\r\n      new Function(toEval)();\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport {ChannelContent} from '@app/web-player/channels/channel-content';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {useChannel} from '@common/channels/requests/use-channel';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\n\r\ninterface ChannelPageProps {\r\n  slugOrId?: string | number;\r\n}\r\nexport function ChannelPage({slugOrId}: ChannelPageProps) {\r\n  const query = useChannel(slugOrId, 'channelPage');\r\n\r\n  if (query.data) {\r\n    return (\r\n      <div>\r\n        <PageMetaTags query={query} />\r\n        <div className=\"pb-24\">\r\n          <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n          <ChannelContent\r\n            channel={query.data.channel}\r\n            // set key to force re-render when channel changes\r\n            key={query.data.channel.id}\r\n          />\r\n          <AdHost slot=\"general_bottom\" className=\"mt-34\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n      loaderIsScreen={false}\r\n    />\r\n  );\r\n}\r\n","import {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {CancelTokenSource} from 'axios';\r\n\r\ninterface Response extends BackendResponse {\r\n  results: {title: string; id: string}[];\r\n}\r\n\r\nconst endpoint = (track: Track) => {\r\n  const artistName =\r\n    track.artists?.[0]?.name || track.album?.artists?.[0]?.name;\r\n  return `search/audio/${track.id}/${doubleEncode(artistName!)}/${doubleEncode(\r\n    track.name\r\n  )}`;\r\n};\r\n\r\nexport let isSearchingForYoutubeVideo = false;\r\n\r\nexport async function findYoutubeVideosForTrack(\r\n  track: Track,\r\n  cancelToken?: CancelTokenSource\r\n): Promise<Response['results']> {\r\n  const query = {\r\n    queryKey: [endpoint(track)],\r\n    queryFn: async () => findMatch(track, cancelToken),\r\n    staleTime: Infinity,\r\n  };\r\n\r\n  const response =\r\n    queryClient.getQueryData<Response>(query.queryKey) ??\r\n    (await queryClient.fetchQuery(query));\r\n\r\n  isSearchingForYoutubeVideo = false;\r\n\r\n  return response?.results || [];\r\n}\r\n\r\nfunction findMatch(\r\n  track: Track,\r\n  cancelToken?: CancelTokenSource\r\n): Promise<Response> {\r\n  isSearchingForYoutubeVideo = true;\r\n  return apiClient\r\n    .get(endpoint(track), {cancelToken: cancelToken?.token})\r\n    .then(response => response.data);\r\n}\r\n\r\nfunction doubleEncode(value: string) {\r\n  return encodeURIComponent(encodeURIComponent(value));\r\n}\r\n","import {create} from 'zustand';\r\nimport {immer} from 'zustand/middleware/immer';\r\n\r\ninterface OverlayState {\r\n  isMaximized: boolean;\r\n  isQueueOpen: boolean;\r\n  open: () => void;\r\n  toggle: () => void;\r\n  toggleQueue: () => void;\r\n}\r\n\r\nexport const usePlayerOverlayStore = create<OverlayState>()(\r\n  immer((set, get) => ({\r\n    isMaximized: false,\r\n    isQueueOpen: false,\r\n    open: () => {\r\n      set(state => {\r\n        state.isMaximized = true;\r\n        state.isQueueOpen = false;\r\n      });\r\n    },\r\n    toggle: () => {\r\n      set(state => {\r\n        state.isMaximized = !state.isMaximized;\r\n        state.isQueueOpen = false;\r\n      });\r\n    },\r\n    toggleQueue: () => {\r\n      set(state => {\r\n        state.isQueueOpen = !state.isQueueOpen;\r\n      });\r\n    },\r\n  }))\r\n);\r\n\r\nexport const playerOverlayState = usePlayerOverlayStore.getState();\r\n","/**\r\n * @see https://developers.google.com/youtube/iframe_api_reference#Playback_controls\r\n */\r\nexport const enum YoutubeCommand {\r\n  Play = 'playVideo',\r\n  Pause = 'pauseVideo',\r\n  Stop = 'stopVideo',\r\n  Seek = 'seekTo',\r\n  Cue = 'cueVideoById',\r\n  CueAndPlay = 'loadVideoById',\r\n  Mute = 'mute',\r\n  Unmute = 'unMute',\r\n  SetVolume = 'setVolume',\r\n  SetPlaybackRate = 'setPlaybackRate',\r\n  SetPlaybackQuality = 'setPlaybackQuality',\r\n}\r\n\r\nexport interface YouTubeCommandArg {\r\n  [YoutubeCommand.Play]: void;\r\n  [YoutubeCommand.Pause]: void;\r\n  [YoutubeCommand.Stop]: void;\r\n  [YoutubeCommand.Seek]: number;\r\n  [YoutubeCommand.Cue]: string;\r\n  [YoutubeCommand.CueAndPlay]: string;\r\n  [YoutubeCommand.Mute]: void;\r\n  [YoutubeCommand.Unmute]: void;\r\n  [YoutubeCommand.SetVolume]: number;\r\n  [YoutubeCommand.SetPlaybackRate]: number;\r\n  [YoutubeCommand.SetPlaybackQuality]: string;\r\n}\r\n\r\n/**\r\n * @see https://developers.google.com/youtube/iframe_api_reference#onStateChange\r\n */\r\nexport const enum YouTubePlayerState {\r\n  Unstarted = -1,\r\n  Ended = 0,\r\n  Playing = 1,\r\n  Paused = 2,\r\n  Buffering = 3,\r\n  Cued = 5,\r\n}\r\n\r\nexport interface YoutubeInternalState {\r\n  duration: number;\r\n  currentTime: number;\r\n  videoId?: string;\r\n  lastTimeUpdate: number;\r\n  playbackRate: number;\r\n  playbackReady: boolean;\r\n  buffered: number;\r\n  state: YouTubePlayerState;\r\n  firedPlaybackEnd: boolean;\r\n}\r\n\r\nexport const enum YouTubePlaybackQuality {\r\n  Unknown = 'unknown',\r\n  Tiny = 'tiny',\r\n  Small = 'small',\r\n  Medium = 'medium',\r\n  Large = 'large',\r\n  Hd720 = 'hd720',\r\n  Hd1080 = 'hd1080',\r\n  Highres = 'highres',\r\n  Max = 'max',\r\n}\r\n\r\nexport interface YouTubeMessage {\r\n  channel: string;\r\n  event: 'initialDelivery' | 'onReady' | 'infoDelivery' | 'apiInfoDelivery';\r\n  info?: YoutubeMessageInfo;\r\n}\r\n\r\nexport interface YoutubeMessageInfo {\r\n  availablePlaybackRates?: number[];\r\n  availableQualityLevels?: YouTubePlaybackQuality[];\r\n  currentTime?: number;\r\n  currentTimeLastUpdated?: number;\r\n  videoLoadedFraction?: number;\r\n  volume?: number;\r\n  videoUrl?: string;\r\n  videoData?: {\r\n    author: string;\r\n    title: string;\r\n    video_id: string;\r\n    errorCode?: string;\r\n  };\r\n  duration?: number;\r\n  muted?: boolean;\r\n  playbackQuality?: YouTubePlaybackQuality;\r\n  playbackRate?: number;\r\n  playerState?: YouTubePlayerState;\r\n}\r\n\r\nexport interface YoutubeProviderError {\r\n  code?: string;\r\n  videoId?: string;\r\n}\r\n\r\nexport interface YoutubeProviderInternalApi {\r\n  loadVideoById: (videoId: string) => void;\r\n}\r\n","import {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\nimport {findYoutubeVideosForTrack} from '@app/web-player/tracks/requests/find-youtube-videos-for-track';\r\nimport {MediaItem, YoutubeMediaItem} from '@common/player/media-item';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {playerOverlayState} from '@app/web-player/state/player-overlay-store';\r\nimport {loadMediaItemTracks} from '@app/web-player/requests/load-media-item-tracks';\r\nimport {tracksToMediaItems} from '@app/web-player/tracks/utils/track-to-media-item';\r\nimport {PlayerStoreOptions} from '@common/player/state/player-store-options';\r\nimport {\r\n  YouTubePlayerState,\r\n  YoutubeProviderError,\r\n  YoutubeProviderInternalApi,\r\n} from '@common/player/providers/youtube/youtube-types';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\n\r\n// used to track play history for logging plays on backend (prevents logging play twice, unless track is fully played)\r\nconst trackPlays = new Set<number>();\r\n\r\n// this is needed in order to stop YouTube embed from trying to\r\n// cue a video that will error out while valid video is already playing\r\nconst failedVideoId = ' ';\r\n\r\n// list of video Ids for which YouTube embed errored out\r\nconst failedVideoIds = new Set<string>();\r\nlet tracksSkippedDueToError = 0;\r\n\r\nasync function resolveSrc(\r\n  media: YoutubeMediaItem<Track>,\r\n): Promise<YoutubeMediaItem> {\r\n  const results = await findYoutubeVideosForTrack(media.meta!);\r\n  // Find first video ID that did not error out yet\r\n  const match = results?.find(r => !failedVideoIds.has(`${r.id}`))?.id;\r\n  return {\r\n    ...media,\r\n    src: match || failedVideoId,\r\n  };\r\n}\r\n\r\nfunction setMediaSessionMetadata(media: MediaItem<Track>) {\r\n  if ('mediaSession' in navigator) {\r\n    const track = media.meta;\r\n    if (!track) return;\r\n    const image = track.image || track.album?.image;\r\n    navigator.mediaSession.metadata = new MediaMetadata({\r\n      title: track.name,\r\n      artist: track.artists?.[0]?.name,\r\n      album: track.album?.name,\r\n      artwork: image\r\n        ? [\r\n            {\r\n              src: image,\r\n              sizes: '300x300',\r\n              type: 'image/jpg',\r\n            },\r\n          ]\r\n        : undefined,\r\n    });\r\n  }\r\n}\r\n\r\nexport const playerStoreOptions: Partial<PlayerStoreOptions> = {\r\n  persistQueueInLocalStorage: true,\r\n  defaultVolume: getBootstrapData().settings.player?.default_volume,\r\n  setMediaSessionMetadata,\r\n  youtube: {\r\n    srcResolver: resolveSrc,\r\n    onStateChange: state => {\r\n      if (state === YouTubePlayerState.Playing) {\r\n        tracksSkippedDueToError = 0;\r\n      }\r\n    },\r\n  },\r\n  onBeforePlay: () => {\r\n    const player = getBootstrapData().settings.player;\r\n    // on mobile, YouTube embed playback needs to be started via user gesture\r\n    // on YouTube embed itself, starting it with custom play button will not work\r\n    if (\r\n      player?.mobile?.auto_open_overlay &&\r\n      // check if mobile\r\n      window.matchMedia('(max-width: 768px)').matches\r\n    ) {\r\n      playerOverlayState.open();\r\n      // wait for overlay animation to complete\r\n      return new Promise<void>(resolve => setTimeout(() => resolve(), 151));\r\n    }\r\n  },\r\n  loadMoreMediaItems: async media => {\r\n    if (media?.groupId) {\r\n      const tracks = await loadMediaItemTracks(\r\n        media.groupId as string,\r\n        media.meta,\r\n      );\r\n      return tracksToMediaItems(tracks);\r\n    }\r\n  },\r\n  listeners: {\r\n    // change document title to currently cued track name\r\n    cued: ({state: {cuedMedia}}) => {\r\n      if (!cuedMedia) return;\r\n      const site_name = getBootstrapData().settings.branding.site_name;\r\n      let title = `${cuedMedia.meta.name}`;\r\n      const artistName = cuedMedia.meta.artists?.[0].name;\r\n\r\n      if (artistName) {\r\n        title = `${title} - ${artistName} - ${site_name}`;\r\n      } else {\r\n        title = `${title} - ${site_name}`;\r\n      }\r\n\r\n      document.title = title;\r\n    },\r\n    play: ({state: {cuedMedia, pause}}) => {\r\n      // prevent playback if user does not have permission to play music\r\n      const hasPermission = userHasPlayPermission();\r\n      if (!hasPermission) {\r\n        toast.danger(\r\n          message('Your current plan does not allow music playback.'),\r\n        );\r\n        pause();\r\n        return;\r\n      }\r\n      // log track play\r\n      if (cuedMedia && !trackPlays.has(cuedMedia.meta.id)) {\r\n        trackPlays.add(cuedMedia.meta.id);\r\n        apiClient.post(`tracks/plays/${cuedMedia.meta.id}/log`, {\r\n          queueId: cuedMedia.groupId,\r\n        });\r\n      }\r\n    },\r\n    playbackEnd: ({state: {cuedMedia}}) => {\r\n      // clear track play\r\n      if (cuedMedia) {\r\n        trackPlays.delete(cuedMedia.meta.id);\r\n      }\r\n    },\r\n    error: async ({\r\n      sourceEvent,\r\n      state: {cuedMedia, providerApi, providerName, emit},\r\n    }) => {\r\n      const e = sourceEvent as YoutubeProviderError;\r\n      if (providerName === 'youtube' && providerApi) {\r\n        //const provider = state.provider as YoutubeProvider;\r\n        logYoutubeError(e);\r\n\r\n        if (e.videoId) {\r\n          failedVideoIds.add(`${e.videoId}`);\r\n        }\r\n\r\n        const media = cuedMedia\r\n          ? await resolveSrc(cuedMedia as YoutubeMediaItem)\r\n          : null;\r\n\r\n        // try to play alternative videos we fetched\r\n        if (media?.src && media?.src !== failedVideoId) {\r\n          await (\r\n            providerApi.internalProviderApi as YoutubeProviderInternalApi\r\n          ).loadVideoById(media.src);\r\n          providerApi.play();\r\n\r\n          // there are no more alternative videos to try, we can error out\r\n        } else {\r\n          tracksSkippedDueToError++;\r\n\r\n          // try to play up to two next queued tracks if we can't play\r\n          // a video for this one. If we can't play 3 tracks in a row\r\n          // we can assume there's an issue with YouTube API and bail\r\n          if (tracksSkippedDueToError <= 2) {\r\n            emit('playbackEnd');\r\n          }\r\n        }\r\n      } else {\r\n        tracksSkippedDueToError = 0;\r\n      }\r\n    },\r\n  },\r\n  onDestroy: () => {\r\n    tracksSkippedDueToError = 0;\r\n  },\r\n};\r\n\r\nfunction logYoutubeError(e: YoutubeProviderError) {\r\n  const code = e?.code;\r\n  if (!e || !e.videoId) return;\r\n  apiClient.post('youtube/log-client-error', {\r\n    code,\r\n    videoUrl: e.videoId,\r\n  });\r\n}\r\n\r\nfunction userHasPlayPermission(): boolean {\r\n  const user = getBootstrapData().user;\r\n  const guest_role = getBootstrapData().guest_role;\r\n  const permissions = user?.permissions || guest_role?.permissions;\r\n  return (\r\n    permissions?.find(p => p.name === 'music.play' || p.name === 'admin') !=\r\n    null\r\n  );\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\n\r\nexport function useIsMediaPlaying(\r\n  mediaId: string | number,\r\n  groupId?: string | number\r\n): boolean {\r\n  return usePlayerStore(s => {\r\n    return (\r\n      s.isPlaying &&\r\n      s.cuedMedia?.id === mediaId &&\r\n      (!groupId || groupId === s.cuedMedia.groupId)\r\n    );\r\n  });\r\n}\r\n","import {useSettings} from '@common/core/settings/use-settings';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\nexport function useMiniPlayerIsHidden() {\r\n  const {player} = useSettings();\r\n  const mediaIsCued = usePlayerStore(s => s.cuedMedia != null);\r\n  const isAudioProvider = usePlayerStore(s => s.providerName === 'htmlAudio');\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return player?.hide_video || !mediaIsCued || isMobile || isAudioProvider;\r\n}\r\n","import {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\r\nimport React from 'react';\r\nimport {MediaItem} from '@common/player/media-item';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {ContextMenuButton} from '@app/web-player/context-dialog/context-dialog-layout';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\ninterface Props {\r\n  queueItems: MediaItem[];\r\n}\r\nexport function QueueTrackContextDialog({queueItems}: Props) {\r\n  return (\r\n    <TrackContextDialog\r\n      tracks={queueItems.map(item => item.meta)}\r\n      showAddToQueueButton={false}\r\n    >\r\n      {() => <RemoveFromQueueContextButton queueItems={queueItems} />}\r\n    </TrackContextDialog>\r\n  );\r\n}\r\n\r\ninterface RemoveFromQueueContextButton {\r\n  queueItems: MediaItem[];\r\n}\r\nfunction RemoveFromQueueContextButton({\r\n  queueItems,\r\n}: RemoveFromQueueContextButton) {\r\n  const {close: closeMenu} = useDialogContext();\r\n  const player = usePlayerActions();\r\n\r\n  return (\r\n    <ContextMenuButton\r\n      onClick={async () => {\r\n        closeMenu();\r\n        player.removeFromQueue(queueItems);\r\n      }}\r\n    >\r\n      <Trans message=\"Remove from queue\" />\r\n    </ContextMenuButton>\r\n  );\r\n}\r\n","import {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {MediaItem} from '@common/player/media-item';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport clsx from 'clsx';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport React, {ReactElement, useState} from 'react';\r\nimport {message} from '@common/i18n/message';\r\nimport {PauseIcon} from '@common/icons/material/Pause';\r\nimport {EqualizerImage} from '@app/web-player/tracks/equalizer-image/equalizer-image';\r\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\r\nimport {useIsMediaPlaying} from '@common/player/hooks/use-is-media-playing';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {useMiniPlayerIsHidden} from '@app/web-player/overlay/use-mini-player-is-hidden';\r\nimport {QueueTrackContextDialog} from '@app/web-player/layout/queue/queue-track-context-dialog';\r\n\r\nexport function QueueSidenav() {\r\n  const queue = usePlayerStore(s => s.shuffledQueue);\r\n  const miniPlayerIsHidden = useMiniPlayerIsHidden();\r\n  return (\r\n    <div className=\"border-l bg h-full\">\r\n      <div\r\n        className={clsx(\r\n          'overflow-y-auto overflow-x-hidden',\r\n          miniPlayerIsHidden ? 'h-full' : 'h-[calc(100%-213px)]',\r\n        )}\r\n      >\r\n        {queue.map((media: MediaItem<Track>, index) => (\r\n          // same media.id might be multiple times in the queue, use index as well to avoid errors\r\n          <QueueItem key={`${media.id}-${index}`} media={media} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface QueueItemProps {\r\n  media: MediaItem<Track>;\r\n}\r\nfunction QueueItem({media}: QueueItemProps) {\r\n  const isCued = usePlayerStore(s => s.cuedMedia?.id === media.id);\r\n  const isPlaying = useIsMediaPlaying(media.id);\r\n  const [isHover, setHover] = useState(false);\r\n\r\n  if (!media.meta) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DialogTrigger type=\"popover\" triggerOnContextMenu placement=\"bottom-start\">\r\n      <div\r\n        onPointerEnter={() => setHover(true)}\r\n        onPointerLeave={() => setHover(false)}\r\n        className={clsx(\r\n          'flex items-center gap-10 p-8 border-b',\r\n          isCued && 'bg-primary/80 text-white',\r\n        )}\r\n      >\r\n        <div className=\"relative overflow-hidden\">\r\n          <TrackImage\r\n            className=\"w-34 h-34 flex-shrink-0 rounded object-cover\"\r\n            track={media.meta}\r\n          />\r\n          {(isHover || isPlaying) && (\r\n            <TogglePlaybackOverlay media={media} isHover={isHover} />\r\n          )}\r\n        </div>\r\n        <div className=\"flex-auto max-w-180 whitespace-nowrap\">\r\n          <div className=\"text-sm overflow-hidden overflow-ellipsis\">\r\n            {media.meta.name}\r\n          </div>\r\n          <ArtistLinks\r\n            className=\"text-xs overflow-hidden overflow-ellipsis\"\r\n            linkClassName={isCued ? 'text-inherit' : 'text-muted'}\r\n            artists={media.meta.artists}\r\n          />\r\n        </div>\r\n      </div>\r\n      <QueueTrackContextDialog queueItems={[media]} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface TogglePlaybackOverlayProps {\r\n  media: MediaItem<Track>;\r\n  isHover: boolean;\r\n}\r\nfunction TogglePlaybackOverlay({media, isHover}: TogglePlaybackOverlayProps) {\r\n  const isPlaying = useIsMediaPlaying(media.id);\r\n  const {trans} = useTrans();\r\n  const player = usePlayerActions();\r\n\r\n  if (!media.meta) {\r\n    return null;\r\n  }\r\n\r\n  let button: ReactElement;\r\n\r\n  if (isPlaying) {\r\n    button = (\r\n      <button\r\n        aria-label={trans(\r\n          message('Pause :name', {values: {name: media.meta.name}}),\r\n        )}\r\n        tabIndex={0}\r\n        onClick={() => player.pause()}\r\n      >\r\n        {isHover ? <PauseIcon /> : <EqualizerImage color=\"white\" />}\r\n      </button>\r\n    );\r\n  } else {\r\n    button = (\r\n      <button\r\n        aria-label={trans(\r\n          message('Play :name', {values: {name: media.meta.name}}),\r\n        )}\r\n        tabIndex={0}\r\n        onClick={() => player.play(media)}\r\n      >\r\n        <PlayArrowFilledIcon />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"absolute top-0 left-0 w-full h-full bg-black/50 rounded flex items-center justify-center text-white\">\r\n      {button}\r\n    </div>\r\n  );\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {Track} from '@app/web-player/tracks/track';\r\n\r\nexport function useCuedTrack(): Track | undefined {\r\n  const media = usePlayerStore(s => s.cuedMedia);\r\n  if (!media) return;\r\n  return media.meta as Track;\r\n}\r\n","import {useEffect, useRef, useState} from 'react';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\n\r\ninterface Props {\r\n  precision: 'ms' | 'seconds';\r\n  disabled?: boolean;\r\n}\r\nexport function useCurrentTime(\r\n  {precision, disabled}: Props = {precision: 'ms', disabled: false},\r\n) {\r\n  const timeRef = useRef(0);\r\n  const {subscribe, getCurrentTime} = usePlayerActions();\r\n  const providerKey = usePlayerStore(s =>\r\n    s.providerName && s.cuedMedia?.id\r\n      ? `${s.providerName}+${s.cuedMedia.id}`\r\n      : null,\r\n  );\r\n\r\n  const [currentTime, setCurrentTime] = useState(() => getCurrentTime());\r\n\r\n  useEffect(() => {\r\n    let unsubscribe: () => void;\r\n    if (!disabled) {\r\n      unsubscribe = subscribe({\r\n        progress: ({currentTime}) => {\r\n          const time =\r\n            precision === 'ms' ? currentTime : Math.floor(currentTime);\r\n          if (timeRef.current !== time) {\r\n            setCurrentTime(time);\r\n            timeRef.current = time;\r\n          }\r\n        },\r\n      });\r\n    }\r\n    return () => unsubscribe?.();\r\n  }, [precision, subscribe, disabled]);\r\n\r\n  // update current time when media or provider changes\r\n  useEffect(() => {\r\n    if (providerKey) {\r\n      setCurrentTime(getCurrentTime());\r\n    }\r\n  }, [providerKey, getCurrentTime]);\r\n\r\n  return currentTime;\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaPlayIcon = createSvgIcon(\r\n  <path d=\"M10.6667 6.6548C10.6667 6.10764 11.2894 5.79346 11.7295 6.11862L24.377 15.4634C24.7377 15.7298 24.7377 16.2692 24.3771 16.5357L11.7295 25.8813C11.2895 26.2065 10.6667 25.8923 10.6667 25.3451L10.6667 6.6548Z\"/>,\r\n  'MediaPlay',\r\n  '0 0 32 32'\r\n);\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaPauseIcon = createSvgIcon(\r\n  [<path d=\"M8.66667 6.66667C8.29848 6.66667 8 6.96514 8 7.33333V24.6667C8 25.0349 8.29848 25.3333 8.66667 25.3333H12.6667C13.0349 25.3333 13.3333 25.0349 13.3333 24.6667V7.33333C13.3333 6.96514 13.0349 6.66667 12.6667 6.66667H8.66667Z\" key=\"0\"/>,<path d=\"M19.3333 6.66667C18.9651 6.66667 18.6667 6.96514 18.6667 7.33333V24.6667C18.6667 25.0349 18.9651 25.3333 19.3333 25.3333H23.3333C23.7015 25.3333 24 25.0349 24 24.6667V7.33333C24 6.96514 23.7015 6.66667 23.3333 6.66667H19.3333Z\" key=\"1\"/>,],\r\n  'MediaPause',\r\n  '0 0 32 32'\r\n);\r\n","import {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ButtonProps} from '@common/ui/buttons/button';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {MediaPlayIcon} from '@common/icons/media/media-play';\r\nimport {MediaPauseIcon} from '@common/icons/media/media-pause';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\ninterface Props {\r\n  color?: ButtonProps['color'];\r\n  size?: ButtonProps['size'];\r\n  iconSize?: ButtonProps['size'];\r\n  className?: string;\r\n  stopPropagation?: boolean;\r\n}\r\nexport function PlayButton({\r\n  size = 'md',\r\n  iconSize = 'xl',\r\n  color,\r\n  stopPropagation,\r\n}: Props) {\r\n  const isPlaying = usePlayerStore(s => s.isPlaying);\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n  const player = usePlayerActions();\r\n\r\n  const label = isPlaying ? (\r\n    <Trans message=\"Pause (k)\" />\r\n  ) : (\r\n    <Trans message=\"Play (k)\" />\r\n  );\r\n\r\n  return (\r\n    <Tooltip label={label} usePortal={false}>\r\n      <IconButton\r\n        color={color}\r\n        size={size}\r\n        iconSize={iconSize}\r\n        disabled={!playerReady}\r\n        onClick={e => {\r\n          if (stopPropagation) {\r\n            e.stopPropagation();\r\n          }\r\n          if (isPlaying) {\r\n            player.pause();\r\n          } else {\r\n            player.play();\r\n          }\r\n        }}\r\n      >\r\n        {isPlaying ? <MediaPauseIcon /> : <MediaPlayIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaPreviousIcon = createSvgIcon(\r\n  [<path d=\"M25.1377 6.78532C25.5778 6.46017 26.2005 6.77434 26.2005 7.32151V24.6785C26.2005 25.2257 25.5777 25.5398 25.1377 25.2147L13.3924 16.5358C13.0317 16.2693 13.0317 15.7299 13.3924 15.4634L25.1377 6.78532Z\" key=\"0\"/>,<path d=\"M8 6.6667C8.36819 6.6667 8.66667 6.96518 8.66667 7.33337V24.6667C8.66667 25.0349 8.36819 25.3334 8 25.3334H6C5.63181 25.3334 5.33333 25.0349 5.33333 24.6667V7.33337C5.33333 6.96518 5.63181 6.6667 6 6.6667H8Z\" key=\"1\"/>,],\r\n  'MediaPrevious',\r\n  '0 0 32 32'\r\n);\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ButtonProps} from '@common/ui/buttons/button';\r\nimport {MediaPreviousIcon} from '@common/icons/media/media-previous';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\n\r\ninterface Props {\r\n  color?: ButtonProps['color'];\r\n  size?: ButtonProps['size'];\r\n  iconSize?: ButtonProps['size'];\r\n  className?: string;\r\n  stopPropagation?: boolean;\r\n}\r\nexport function PreviousButton({\r\n  size = 'md',\r\n  iconSize,\r\n  color,\r\n  className,\r\n  stopPropagation,\r\n}: Props) {\r\n  const player = usePlayerActions();\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\"Previous\" />}>\r\n      <IconButton\r\n        disabled={!playerReady}\r\n        size={size}\r\n        color={color}\r\n        iconSize={iconSize}\r\n        className={className}\r\n        onClick={e => {\r\n          if (stopPropagation) {\r\n            e.stopPropagation();\r\n          }\r\n          player.playPrevious();\r\n        }}\r\n      >\r\n        <MediaPreviousIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaNextIcon = createSvgIcon(\r\n  [<path d=\"M6.39617 6.78532C5.9561 6.46017 5.33334 6.77434 5.33334 7.32151V24.6785C5.33334 25.2257 5.95612 25.5398 6.39619 25.2147L18.1415 16.5358C18.5021 16.2693 18.5021 15.7299 18.1415 15.4634L6.39617 6.78532Z\" key=\"0\"/>,<path d=\"M23.5339 6.6667C23.1657 6.6667 22.8672 6.96518 22.8672 7.33337V24.6667C22.8672 25.0349 23.1657 25.3334 23.5339 25.3334H25.5339C25.902 25.3334 26.2005 25.0349 26.2005 24.6667V7.33337C26.2005 6.96518 25.902 6.6667 25.5339 6.6667H23.5339Z\" key=\"1\"/>,],\r\n  'MediaNext',\r\n  '0 0 32 32'\r\n);\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ButtonProps} from '@common/ui/buttons/button';\r\nimport {MediaNextIcon} from '@common/icons/media/media-next';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n  color?: ButtonProps['color'];\r\n  size?: ButtonProps['size'];\r\n  iconSize?: ButtonProps['size'];\r\n  className?: string;\r\n  stopPropagation?: boolean;\r\n}\r\nexport function NextButton({\r\n  size = 'md',\r\n  iconSize,\r\n  color,\r\n  className,\r\n  stopPropagation,\r\n}: Props) {\r\n  const player = usePlayerActions();\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\"Next\" />} usePortal={false}>\r\n      <IconButton\r\n        disabled={!playerReady}\r\n        size={size}\r\n        color={color}\r\n        iconSize={iconSize}\r\n        className={className}\r\n        onClick={e => {\r\n          if (stopPropagation) {\r\n            e.stopPropagation();\r\n          }\r\n          player.playNext();\r\n        }}\r\n      >\r\n        <MediaNextIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import clsx from 'clsx';\r\nimport {useContext, useEffect, useState} from 'react';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {isSearchingForYoutubeVideo} from '@app/web-player/tracks/requests/find-youtube-videos-for-track';\r\n\r\nexport function BufferingIndicator() {\r\n  const store = useContext(PlayerStoreContext);\r\n\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [animationActive, setAnimationActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return store.subscribe(\r\n      s => s.isBuffering,\r\n      isBuffering => {\r\n        const isLoading = isBuffering || isSearchingForYoutubeVideo;\r\n        if (isLoading) {\r\n          // make loader visible only after animation is running\r\n          setAnimationActive(true);\r\n          setTimeout(() => {\r\n            setIsVisible(true);\r\n          });\r\n        } else {\r\n          setIsVisible(false);\r\n        }\r\n      }\r\n    );\r\n  }, [store]);\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"48\"\r\n      height=\"48\"\r\n      fill=\"none\"\r\n      className={clsx(\r\n        'absolute -top-3 -left-3 z-10 transition-opacity duration-300 pointer-events-none',\r\n        isVisible ? 'opacity-100' : 'opacity-0',\r\n        animationActive && 'animate-spin'\r\n      )}\r\n      onTransitionEnd={() => {\r\n        // stop animation only after opacity transition is done to avoid flickering\r\n        if (!isVisible) {\r\n          setAnimationActive(false);\r\n        }\r\n      }}\r\n    >\r\n      <g clipPath=\"url(#a)\">\r\n        <path\r\n          stroke=\"url(#b)\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeMiterlimit=\"10\"\r\n          d=\"M45.72 31.644c-1.016 3.036-2.777 5.84-5.116 8.301-8.846 9.161-23.386 9.5-32.547.654-9.16-8.845-9.416-23.44-.654-32.546\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <linearGradient\r\n          id=\"b\"\r\n          x1=\"7.863\"\r\n          x2=\"45.527\"\r\n          y1=\"7.178\"\r\n          y2=\"31.53\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"currentColor\" />\r\n          <stop offset=\"1\" stopColor=\"currentColor\" stopOpacity=\"0\" />\r\n        </linearGradient>\r\n        <clipPath>\r\n          <path fill=\"currentColor\" d=\"M0 0h48v48H0z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n","import {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport React, {useMemo} from 'react';\r\nimport {ProgressBar} from '@common/ui/progress/progress-bar';\r\nimport {CustomMenuItem} from '@common/menus/custom-menu';\r\nimport clsx from 'clsx';\r\nimport {useCustomMenu} from '@common/menus/use-custom-menu';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {NavbarAuthMenu} from '@common/ui/navigation/navbar/navbar-auth-menu';\r\nimport {PersonIcon} from '@common/icons/material/Person';\r\nimport {Badge} from '@common/ui/badge/badge';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {playerOverlayState} from '@app/web-player/state/player-overlay-store';\r\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\r\nimport {MicIcon} from '@common/icons/material/Mic';\r\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\r\nimport {useCurrentTime} from '@common/player/hooks/use-current-time';\r\nimport {PlayButton} from '@common/player/ui/controls/play-button';\r\nimport {PreviousButton} from '@common/player/ui/controls/previous-button';\r\nimport {NextButton} from '@common/player/ui/controls/next-button';\r\nimport {BufferingIndicator} from '@app/web-player/player-controls/buffering-indicator';\r\n\r\nexport function MobilePlayerControls() {\r\n  return (\r\n    <div className=\"fixed bottom-0 left-0 right-0 w-[calc(100%-20px)] mx-auto bg-background/95\">\r\n      <PlayerControls />\r\n      <MobileNavbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlayerControls() {\r\n  const mediaIsCued = usePlayerStore(s => s.cuedMedia != null);\r\n  if (!mediaIsCued) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-chip rounded p-6 flex items-center gap-24 justify-between shadow relative\"\r\n      onClick={() => {\r\n        playerOverlayState.toggle();\r\n      }}\r\n    >\r\n      <QueuedTrack />\r\n      <PlaybackButtons />\r\n      <PlayerProgressBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction QueuedTrack() {\r\n  const track = useCuedTrack();\r\n\r\n  if (!track) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-10 min-w-0 flex-auto\">\r\n      <TrackImage className=\"rounded w-36 h-36 object-cover\" track={track} />\r\n      <div className=\"flex-auto whitespace-nowrap overflow-hidden\">\r\n        <div className=\"text-sm font-medium overflow-hidden overflow-ellipsis\">\r\n          {track.name}\r\n        </div>\r\n        <div className=\"text-xs text-muted overflow-hidden overflow-ellipsis\">\r\n          {track.artists?.map(a => a.name).join(', ')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlaybackButtons() {\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <PreviousButton stopPropagation />\r\n      <div className=\"relative\">\r\n        <BufferingIndicator />\r\n        <PlayButton size=\"md\" iconSize=\"lg\" stopPropagation />\r\n      </div>\r\n      <NextButton stopPropagation />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlayerProgressBar() {\r\n  const duration = usePlayerStore(s => s.mediaDuration);\r\n  const currentTime = useCurrentTime();\r\n  return (\r\n    <ProgressBar\r\n      size=\"xs\"\r\n      className=\"absolute left-0 right-0 bottom-0\"\r\n      progressColor=\"bg-white\"\r\n      trackColor=\"bg-white/10\"\r\n      trackHeight=\"h-2\"\r\n      radius=\"rounded-none\"\r\n      minValue={0}\r\n      maxValue={duration}\r\n      value={currentTime}\r\n    />\r\n  );\r\n}\r\n\r\nfunction MobileNavbar() {\r\n  const menu = useCustomMenu('mobile-bottom');\r\n  if (!menu) return null;\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center gap-30 my-12\">\r\n      {menu.items.map(item => (\r\n        <CustomMenuItem\r\n          unstyled\r\n          iconClassName=\"block mx-auto mb-6\"\r\n          iconSize=\"md\"\r\n          className={({isActive}) =>\r\n            clsx(\r\n              'text-xs whitespace-nowrap overflow-hidden',\r\n              isActive && 'font-bold'\r\n            )\r\n          }\r\n          key={item.id}\r\n          item={item}\r\n        />\r\n      ))}\r\n      <AccountButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AccountButton() {\r\n  const {user} = useAuth();\r\n  const hasUnreadNotif = !!user?.unread_notifications_count;\r\n  const navigate = useNavigate();\r\n  const {registration} = useSettings();\r\n\r\n  const primaryArtist = usePrimaryArtistForCurrentUser();\r\n  const {player} = useSettings();\r\n  const menuItems = useMemo(() => {\r\n    if (primaryArtist) {\r\n      return [\r\n        <MenuItem\r\n          value=\"author\"\r\n          key=\"author\"\r\n          startIcon={<MicIcon />}\r\n          onSelected={() => {\r\n            navigate(getArtistLink(primaryArtist));\r\n          }}\r\n        >\r\n          <Trans message=\"Artist profile\" />\r\n        </MenuItem>,\r\n      ];\r\n    }\r\n    if (player?.show_become_artist_btn) {\r\n      return [\r\n        <MenuItem\r\n          value=\"author\"\r\n          key=\"author\"\r\n          startIcon={<MicIcon />}\r\n          onSelected={() => {\r\n            navigate('/backstage/requests');\r\n          }}\r\n        >\r\n          <Trans message=\"Become an author\" />\r\n        </MenuItem>,\r\n      ];\r\n    }\r\n\r\n    return [];\r\n  }, [primaryArtist, navigate, player?.show_become_artist_btn]);\r\n\r\n  const button = (\r\n    <button className=\"text-xs relative\">\r\n      <PersonIcon size=\"md\" />\r\n      {hasUnreadNotif ? (\r\n        <Badge className=\"-top-6\" right=\"right-4\">\r\n          {user?.unread_notifications_count}\r\n        </Badge>\r\n      ) : null}\r\n      <div className=\"text-xs\">\r\n        <Trans message=\"Account\" />\r\n      </div>\r\n    </button>\r\n  );\r\n\r\n  if (!user) {\r\n    return (\r\n      <MenuTrigger>\r\n        {button}\r\n        <Menu>\r\n          <Item value=\"login\" onSelected={() => navigate('/login')}>\r\n            <Trans message=\"Login\" />\r\n          </Item>\r\n          {!registration.disable && (\r\n            <Item value=\"register\" onSelected={() => navigate('/register')}>\r\n              <Trans message=\"Register\" />\r\n            </Item>\r\n          )}\r\n        </Menu>\r\n      </MenuTrigger>\r\n    );\r\n  }\r\n\r\n  return <NavbarAuthMenu items={menuItems}>{button}</NavbarAuthMenu>;\r\n}\r\n","import {Slider} from '@common/ui/forms/slider/slider';\r\nimport {UseSliderProps} from '@common/ui/forms/slider/use-slider';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {useCurrentTime} from '@common/player/hooks/use-current-time';\r\nimport {useRef} from 'react';\r\n\r\ninterface Props {\r\n  trackColor?: UseSliderProps['trackColor'];\r\n  fillColor?: UseSliderProps['fillColor'];\r\n  className?: string;\r\n  onPointerMove?: UseSliderProps['onPointerMove'];\r\n}\r\nexport function Seekbar({\r\n  trackColor,\r\n  fillColor,\r\n  className,\r\n  onPointerMove,\r\n}: Props) {\r\n  const {pause, seek, setIsSeeking, play, getState} = usePlayerActions();\r\n  const duration = usePlayerStore(s => s.mediaDuration);\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n  const pauseWhileSeeking = usePlayerStore(s => s.pauseWhileSeeking);\r\n\r\n  const currentTime = useCurrentTime();\r\n\r\n  const wasPlayingBeforeDragging = useRef(false);\r\n\r\n  return (\r\n    <Slider\r\n      fillColor={fillColor}\r\n      trackColor={trackColor}\r\n      thumbSize=\"w-14 h-14\"\r\n      showThumbOnHoverOnly\r\n      className={className}\r\n      width=\"w-auto\"\r\n      isDisabled={!playerReady}\r\n      value={currentTime}\r\n      minValue={0}\r\n      maxValue={duration}\r\n      onPointerMove={onPointerMove}\r\n      onPointerDown={() => {\r\n        setIsSeeking(true);\r\n        if (pauseWhileSeeking) {\r\n          wasPlayingBeforeDragging.current =\r\n            getState().isPlaying || getState().isBuffering;\r\n          pause();\r\n        }\r\n      }}\r\n      onChange={value => {\r\n        getState().emit('progress', {currentTime: value});\r\n        seek(value);\r\n      }}\r\n      onChangeEnd={() => {\r\n        setIsSeeking(false);\r\n        if (pauseWhileSeeking && wasPlayingBeforeDragging.current) {\r\n          play();\r\n          wasPlayingBeforeDragging.current = false;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {useCurrentTime} from '@common/player/hooks/use-current-time';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\n\r\ninterface Props {\r\n  className?: string;\r\n}\r\nexport function FormattedCurrentTime({className}: Props) {\r\n  const duration = usePlayerStore(s => s.mediaDuration);\r\n  const currentTime = useCurrentTime();\r\n  return (\r\n    <span className={className}>\r\n      <FormattedDuration\r\n        seconds={currentTime}\r\n        addZeroToFirstUnit={duration >= 600}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\n\r\ninterface Props {\r\n  className?: string;\r\n}\r\nexport function FormattedPlayerDuration({className}: Props) {\r\n  const duration = usePlayerStore(s => s.mediaDuration);\r\n  return (\r\n    <span className={className}>\r\n      <FormattedDuration\r\n        seconds={duration}\r\n        addZeroToFirstUnit={duration >= 600}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n","import {Fragment} from 'react';\r\nimport {Seekbar} from '@common/player/ui/controls/seeking/seekbar';\r\nimport {FormattedCurrentTime} from '@common/player/ui/controls/formatted-current-time';\r\nimport {FormattedPlayerDuration} from '@common/player/ui/controls/formatted-player-duration';\r\n\r\nexport function MainSeekbar() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"flex items-center gap-12\">\r\n        <div className=\"text-xs text-muted flex-shrink-0 min-w-40 text-right\">\r\n          <FormattedCurrentTime />\r\n        </div>\r\n        <Seekbar className=\"flex-auto\" trackColor=\"neutral\" />\r\n        <div className=\"text-xs text-muted flex-shrink-0 min-w-40\">\r\n          <FormattedPlayerDuration />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaShuffleIcon = createSvgIcon(\r\n  <path d=\"M23.7295 5.65252C23.2894 5.32737 22.6667 5.64155 22.6667 6.18871V7.86672C22.6667 7.94036 22.607 8.00005 22.5333 8.00005H21.3333C18.6228 8.00005 16.2268 9.34843 14.7798 11.411C14.7251 11.489 14.6083 11.489 14.5536 11.411C13.1065 9.34843 10.7106 8.00005 8.00001 8.00005H6.00001C5.63182 8.00005 5.33334 8.29853 5.33334 8.66672V10.3998C5.33334 10.768 5.63182 11.0665 6.00001 11.0665H8.00001C10.724 11.0665 12.9336 13.2748 12.9336 16.0001C12.9336 18.7253 10.724 20.9336 8.00001 20.9336H6.00001C5.63182 20.9336 5.33334 21.2321 5.33334 21.6003V23.3334C5.33334 23.7016 5.63182 24.0001 6.00001 24.0001H8.00001C10.7106 24.0001 13.1065 22.6517 14.5536 20.5891C14.6083 20.5111 14.7251 20.5111 14.7798 20.5891C16.2268 22.6517 18.6228 24.0001 21.3333 24.0001H22.5333C22.607 24.0001 22.6667 24.0597 22.6667 24.1334V25.8113C22.6667 26.3585 23.2895 26.6727 23.7295 26.3475L28.2568 23.0022C28.6175 22.7357 28.6174 22.1963 28.2568 21.9298L23.7295 18.5848C23.2894 18.2597 22.6667 18.5738 22.6667 19.121V20.8003C22.6667 20.874 22.607 20.9336 22.5333 20.9336H21.3333C18.6094 20.9336 16.3997 18.7253 16.3997 16.0001C16.3997 13.2748 18.6094 11.0665 21.3333 11.0665H22.5333C22.607 11.0665 22.6667 11.1262 22.6667 11.1998V12.879C22.6667 13.4262 23.2895 13.7404 23.7295 13.4152L28.2568 10.0699C28.6175 9.8034 28.6174 9.26401 28.2568 8.99753L23.7295 5.65252Z\"/>,\r\n  'MediaShuffle',\r\n  '0 0 32 32'\r\n);\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaShuffleOnIcon = createSvgIcon(\r\n  [<path d=\"M22.6666 6.18871C22.6666 5.64155 23.2894 5.32737 23.7295 5.65252L28.2567 8.99753C28.6174 9.26401 28.6174 9.8034 28.2568 10.0699L23.7295 13.4152C23.2894 13.7404 22.6666 13.4262 22.6666 12.879V11.1998C22.6666 11.1262 22.607 11.0665 22.5333 11.0665H21.3333C18.6094 11.0665 16.3997 13.2748 16.3997 16.0001C16.3997 18.7253 18.6094 20.9336 21.3333 20.9336H22.5333C22.607 20.9336 22.6666 20.874 22.6666 20.8003V19.121C22.6666 18.5738 23.2894 18.2597 23.7295 18.5848L28.2567 21.9298C28.6174 22.1963 28.6174 22.7357 28.2568 23.0022L23.7295 26.3475C23.2894 26.6727 22.6666 26.3585 22.6666 25.8113V24.1334C22.6666 24.0597 22.607 24.0001 22.5333 24.0001H21.3333C18.6227 24.0001 16.2268 22.6517 14.7798 20.5891C14.725 20.5111 14.6082 20.5111 14.5535 20.5891C13.1065 22.6517 10.7106 24.0001 7.99998 24.0001H5.99998C5.63179 24.0001 5.33331 23.7016 5.33331 23.3334V21.6003C5.33331 21.2321 5.63179 20.9336 5.99998 20.9336H7.99998C10.7239 20.9336 12.9336 18.7253 12.9336 16.0001C12.9336 13.2748 10.7239 11.0665 7.99998 11.0665H5.99998C5.63179 11.0665 5.33331 10.768 5.33331 10.3998V8.66672C5.33331 8.29853 5.63179 8.00005 5.99998 8.00005H7.99998C10.7106 8.00005 13.1065 9.34843 14.5535 11.411C14.6082 11.489 14.725 11.489 14.7798 11.411C16.2268 9.34843 18.6227 8.00005 21.3333 8.00005H22.5333C22.607 8.00005 22.6666 7.94036 22.6666 7.86672V6.18871Z\" key=\"0\"/>,<path d=\"M28.6666 18.0001C29.7712 18.0001 30.6666 17.1046 30.6666 16.0001C30.6666 14.8955 29.7712 14.0001 28.6666 14.0001C27.5621 14.0001 26.6666 14.8955 26.6666 16.0001C26.6666 17.1046 27.5621 18.0001 28.6666 18.0001Z\" key=\"1\"/>,],\r\n  'MediaShuffleOn',\r\n  '0 0 32 32'\r\n);\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ButtonProps} from '@common/ui/buttons/button';\r\nimport {MediaShuffleIcon} from '@common/icons/media/media-shuffle';\r\nimport {MediaShuffleOnIcon} from '@common/icons/media/media-shuffle-on';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\n\r\ninterface Props {\r\n  color?: ButtonProps['color'];\r\n  activeColor?: ButtonProps['color'];\r\n  size?: ButtonProps['size'];\r\n  iconSize?: ButtonProps['size'];\r\n  className?: string;\r\n}\r\nexport function ShuffleButton({\r\n  size = 'md',\r\n  iconSize,\r\n  color,\r\n  activeColor = 'primary',\r\n  className,\r\n}: Props) {\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n  const isShuffling = usePlayerStore(s => s.shuffling);\r\n  const player = usePlayerActions();\r\n\r\n  const label = isShuffling ? (\r\n    <Trans message=\"Disable shuffle\" />\r\n  ) : (\r\n    <Trans message=\"Enable shuffle\" />\r\n  );\r\n\r\n  return (\r\n    <Tooltip label={label}>\r\n      <IconButton\r\n        disabled={!playerReady}\r\n        size={size}\r\n        color={isShuffling ? activeColor : color}\r\n        iconSize={iconSize}\r\n        className={className}\r\n        onClick={() => {\r\n          player.toggleShuffling();\r\n        }}\r\n      >\r\n        {isShuffling ? <MediaShuffleOnIcon /> : <MediaShuffleIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaRepeatIcon = createSvgIcon(\r\n  [<path d=\"M22.1969 4.98846C21.7569 4.66331 21.1341 4.97748 21.1341 5.52465V7.20266C21.1341 7.27629 21.0744 7.33599 21.0008 7.33599H11.1341C8.18859 7.33599 5.80078 9.72381 5.80078 12.6693V14.6693C5.80078 15.0375 6.09925 15.336 6.46744 15.336H8.20078C8.56897 15.336 8.86744 15.0375 8.86744 14.6693V13.0691C8.86744 11.5963 10.0613 10.4024 11.5341 10.4024H21.0008C21.0744 10.4024 21.1341 10.4621 21.1341 10.5357V12.215C21.1341 12.7621 21.7569 13.0763 22.197 12.7511L26.7242 9.40583C27.0849 9.13934 27.0849 8.59995 26.7242 8.33347L22.1969 4.98846Z\" key=\"0\"/>,<path d=\"M10.8652 24.7975C10.8652 24.7238 10.9249 24.6641 10.9986 24.6641H20.8652C23.8108 24.6641 26.1986 22.2763 26.1986 19.3308V17.3308C26.1986 16.9626 25.9001 16.6641 25.5319 16.6641H23.7986C23.4304 16.6641 23.1319 16.9626 23.1319 17.3308V18.931C23.1319 20.4038 21.938 21.5977 20.4652 21.5977H10.9986C10.9249 21.5977 10.8652 21.538 10.8652 21.4644V19.7851C10.8652 19.238 10.2425 18.9238 9.80239 19.249L5.27512 22.5943C4.91447 22.8608 4.91448 23.4002 5.27514 23.6666L9.80241 27.0116C10.2425 27.3368 10.8652 27.0226 10.8652 26.4755V24.7975Z\" key=\"1\"/>,],\r\n  'MediaRepeat',\r\n  '0 0 32 32'\r\n);\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaRepeatOnIcon = createSvgIcon(\r\n  [<path d=\"M22.1969 4.98846C21.7569 4.66331 21.1341 4.97748 21.1341 5.52465V7.20266C21.1341 7.27629 21.0744 7.33599 21.0008 7.33599H11.1341C8.18859 7.33599 5.80078 9.72381 5.80078 12.6693V14.6693C5.80078 15.0375 6.09925 15.336 6.46744 15.336H8.20078C8.56897 15.336 8.86744 15.0375 8.86744 14.6693V13.0691C8.86744 11.5963 10.0613 10.4024 11.5341 10.4024H21.0008C21.0744 10.4024 21.1341 10.4621 21.1341 10.5357V12.215C21.1341 12.7621 21.7569 13.0763 22.197 12.7511L26.7242 9.40583C27.0849 9.13934 27.0849 8.59995 26.7242 8.33347L22.1969 4.98846Z\" key=\"0\"/>,<path d=\"M16 18.0001C17.1046 18.0001 18 17.1046 18 16.0001C18 14.8955 17.1046 14.0001 16 14.0001C14.8954 14.0001 14 14.8955 14 16.0001C14 17.1046 14.8954 18.0001 16 18.0001Z\" key=\"1\"/>,<path d=\"M20.8652 24.6641H10.9986C10.9249 24.6641 10.8652 24.7238 10.8652 24.7975V26.4755C10.8652 27.0226 10.2425 27.3368 9.80241 27.0116L5.27514 23.6666C4.91448 23.4002 4.91447 22.8608 5.27512 22.5943L9.80239 19.249C10.2425 18.9238 10.8652 19.238 10.8652 19.7851V21.4644C10.8652 21.538 10.9249 21.5977 10.9986 21.5977H20.4652C21.938 21.5977 23.1319 20.4038 23.1319 18.931V17.3308C23.1319 16.9626 23.4304 16.6641 23.7986 16.6641H25.5319C25.9001 16.6641 26.1986 16.9626 26.1986 17.3308V19.3308C26.1986 22.2763 23.8108 24.6641 20.8652 24.6641Z\" key=\"2\"/>,],\r\n  'MediaRepeatOn',\r\n  '0 0 32 32'\r\n);\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ButtonProps} from '@common/ui/buttons/button';\r\nimport {MediaRepeatIcon} from '@common/icons/media/media-repeat';\r\nimport {MediaRepeatOnIcon} from '@common/icons/media/media-repeat-on';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {ReactElement} from 'react';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\n\r\ninterface Props {\r\n  color?: ButtonProps['color'];\r\n  activeColor?: ButtonProps['color'];\r\n  size?: ButtonProps['size'];\r\n  iconSize?: ButtonProps['size'];\r\n  className?: string;\r\n}\r\nexport function RepeatButton({\r\n  size = 'md',\r\n  iconSize,\r\n  color,\r\n  activeColor = 'primary',\r\n  className,\r\n}: Props) {\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n  const repeating = usePlayerStore(s => s.repeat);\r\n  const player = usePlayerActions();\r\n\r\n  let label: ReactElement;\r\n  if (repeating === 'all') {\r\n    label = <Trans message=\"Enable repeat one\" />;\r\n  } else if (repeating === 'one') {\r\n    label = <Trans message=\"Disable repeat\" />;\r\n  } else {\r\n    label = <Trans message=\"Enable repeat\" />;\r\n  }\r\n\r\n  return (\r\n    <Tooltip label={label}>\r\n      <IconButton\r\n        disabled={!playerReady}\r\n        size={size}\r\n        color={repeating ? activeColor : color}\r\n        iconSize={iconSize}\r\n        className={className}\r\n        onClick={() => {\r\n          player.toggleRepeatMode();\r\n        }}\r\n      >\r\n        {repeating === 'one' ? <MediaRepeatOnIcon /> : <MediaRepeatIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {MainSeekbar} from '@app/web-player/player-controls/seekbar/main-seekbar';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport clsx from 'clsx';\r\nimport {PlayButton} from '@common/player/ui/controls/play-button';\r\nimport {NextButton} from '@common/player/ui/controls/next-button';\r\nimport {PreviousButton} from '@common/player/ui/controls/previous-button';\r\nimport {ShuffleButton} from '@common/player/ui/controls/shuffle-button';\r\nimport {RepeatButton} from '@common/player/ui/controls/repeat-button';\r\nimport {BufferingIndicator} from '@app/web-player/player-controls/buffering-indicator';\r\n\r\ninterface Props {\r\n  className?: string;\r\n}\r\nexport function PlaybackControls({className}: Props) {\r\n  return (\r\n    <div className={className}>\r\n      <PlaybackButtons />\r\n      <MainSeekbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlaybackButtons() {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  // need to add a gap on mobile between buttons and seekbar, otherwise seekbar will be impossible to tap\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'flex items-center justify-center gap-6',\r\n        isMobile && 'mb-20'\r\n      )}\r\n    >\r\n      <ShuffleButton iconSize={isMobile ? 'md' : 'sm'} />\r\n      <PreviousButton size=\"md\" />\r\n      <div className=\"relative\">\r\n        <BufferingIndicator />\r\n        <PlayButton size=\"md\" iconSize=\"xl\" />\r\n      </div>\r\n      <NextButton size=\"md\" />\r\n      <RepeatButton iconSize={isMobile ? 'md' : 'sm'} />\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaMicrophoneIcon = createSvgIcon(\r\n  [<path d=\"M22.3257 15.8354C22.1263 15.8695 21.9256 15.7966 21.7826 15.6536L16.347 10.218C16.2039 10.0749 16.1311 9.87422 16.1652 9.67483C16.3448 8.62476 16.84 7.61813 17.6506 6.80752C19.7334 4.72472 23.1103 4.72472 25.193 6.80752C27.2758 8.89032 27.2758 12.2672 25.193 14.35C24.3824 15.1606 23.3758 15.6557 22.3257 15.8354Z\" key=\"0\"/>,<path d=\"M15.3386 12.9809C15.0613 12.7036 14.6058 12.7244 14.3549 13.0257L5.78725 23.3142C5.56666 23.5791 5.58439 23.9685 5.82814 24.2122L7.79205 26.1761C8.03586 26.42 8.42536 26.4376 8.69024 26.2169L18.9754 17.6459C19.2766 17.3949 19.2972 16.9395 19.02 16.6623L15.3386 12.9809Z\" key=\"1\"/>,],\r\n  'MediaMicrophone',\r\n  '0 0 32 32'\r\n);\r\n","import {useSettings} from '@common/core/settings/use-settings';\r\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {MediaMicrophoneIcon} from '@common/icons/media/media-microphone';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useLocation, useMatch} from 'react-router-dom';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\n\r\nexport function LyricsButton() {\r\n  const {player} = useSettings();\r\n  const track = useCuedTrack();\r\n  const navigate = useNavigate();\r\n  const isOnLyricsPage = !!useMatch('/lyrics');\r\n  const {key} = useLocation();\r\n  const hasPreviousUrl = key !== 'default';\r\n\r\n  if (!track || player?.hide_lyrics) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\"Lyrics\" />}>\r\n      <IconButton\r\n        onClick={() => {\r\n          if (isOnLyricsPage) {\r\n            if (hasPreviousUrl) {\r\n              navigate(-1);\r\n            }\r\n          } else {\r\n            navigate(`/lyrics`);\r\n          }\r\n        }}\r\n        color={isOnLyricsPage ? 'primary' : undefined}\r\n      >\r\n        <MediaMicrophoneIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {useSettings} from '@common/core/settings/use-settings';\r\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\r\nimport {DownloadIcon} from '@common/icons/material/Download';\r\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function DownloadTrackButton() {\r\n  const {player, base_url} = useSettings();\r\n  const track = useCuedTrack();\r\n  const {hasPermission} = useAuth();\r\n\r\n  if (\r\n    !player?.enable_download ||\r\n    !track ||\r\n    !trackIsLocallyUploaded(track) ||\r\n    !hasPermission('music.download')\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\"Download\" />}>\r\n      <IconButton\r\n        onClick={() => {\r\n          downloadFileFromUrl(`${base_url}/api/v1/tracks/${track.id}/download`);\r\n        }}\r\n      >\r\n        <DownloadIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaQueueListIcon = createSvgIcon(\r\n  [<path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.33335 6C6.96516 6 6.66669 6.29848 6.66669 6.66667V13.3333C6.66669 13.7015 6.96516 14 7.33335 14H24.6667C25.0349 14 25.3334 13.7015 25.3334 13.3333V6.66667C25.3334 6.29848 25.0349 6 24.6667 6H7.33335ZM9.46669 8.66667C9.39305 8.66667 9.33335 8.72636 9.33335 8.8V11.2C9.33335 11.2736 9.39305 11.3333 9.46669 11.3333H22.5334C22.607 11.3333 22.6667 11.2736 22.6667 11.2V8.8C22.6667 8.72636 22.607 8.66667 22.5334 8.66667H9.46669Z\" key=\"0\"/>,<path d=\"M6.66669 18C6.66669 17.6318 6.96516 17.3333 7.33335 17.3333H24.6667C25.0349 17.3333 25.3334 17.6318 25.3334 18V19.3333C25.3334 19.7015 25.0349 20 24.6667 20H7.33335C6.96516 20 6.66669 19.7015 6.66669 19.3333V18Z\" key=\"1\"/>,<path d=\"M6.66669 24C6.66669 23.6318 6.96516 23.3333 7.33335 23.3333H24.6667C25.0349 23.3333 25.3334 23.6318 25.3334 24V25.3333C25.3334 25.7015 25.0349 26 24.6667 26H7.33335C6.96516 26 6.66669 25.7015 6.66669 25.3333V24Z\" key=\"2\"/>,],\r\n  'MediaQueueList',\r\n  '0 0 32 32'\r\n);\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaMuteIcon = createSvgIcon(\r\n  [<path d=\"M17.5091 24.6594C17.5091 25.2066 16.8864 25.5208 16.4463 25.1956L9.44847 20.0252C9.42553 20.0083 9.39776 19.9991 9.36923 19.9991H4.66667C4.29848 19.9991 4 19.7006 4 19.3325V12.6658C4 12.2976 4.29848 11.9991 4.66667 11.9991H9.37115C9.39967 11.9991 9.42745 11.99 9.45039 11.973L16.4463 6.8036C16.8863 6.47842 17.5091 6.79259 17.5091 7.33977L17.5091 24.6594Z\" key=\"0\"/>,<path d=\"M28.8621 13.6422C29.1225 13.3818 29.1225 12.9597 28.8621 12.6994L27.9193 11.7566C27.659 11.4962 27.2368 11.4962 26.9765 11.7566L24.7134 14.0197C24.6613 14.0717 24.5769 14.0717 24.5248 14.0197L22.262 11.7568C22.0016 11.4964 21.5795 11.4964 21.3191 11.7568L20.3763 12.6996C20.116 12.9599 20.116 13.382 20.3763 13.6424L22.6392 15.9053C22.6913 15.9573 22.6913 16.0418 22.6392 16.0938L20.3768 18.3562C20.1165 18.6166 20.1165 19.0387 20.3768 19.299L21.3196 20.2419C21.58 20.5022 22.0021 20.5022 22.2624 20.2418L24.5248 17.9795C24.5769 17.9274 24.6613 17.9274 24.7134 17.9795L26.976 20.2421C27.2363 20.5024 27.6585 20.5024 27.9188 20.2421L28.8616 19.2992C29.122 19.0389 29.122 18.6168 28.8616 18.3564L26.599 16.0938C26.547 16.0418 26.547 15.9573 26.599 15.9053L28.8621 13.6422Z\" key=\"1\"/>,],\r\n  'MediaMute',\r\n  '0 0 32 32'\r\n);\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaVolumeLowIcon = createSvgIcon(\r\n  [<path d=\"M17.5091 24.6594C17.5091 25.2066 16.8864 25.5207 16.4463 25.1956L9.44847 20.0252C9.42553 20.0083 9.39776 19.9991 9.36923 19.9991H4.66667C4.29848 19.9991 4 19.7006 4 19.3324V12.6658C4 12.2976 4.29848 11.9991 4.66667 11.9991H9.37115C9.39967 11.9991 9.42745 11.99 9.45039 11.973L16.4463 6.80358C16.8863 6.4784 17.5091 6.79258 17.5091 7.33975L17.5091 24.6594Z\" key=\"0\"/>,<path d=\"M22.8424 12.6667C22.8424 12.2985 22.544 12 22.1758 12H20.8424C20.4743 12 20.1758 12.2985 20.1758 12.6667V19.3333C20.1758 19.7015 20.4743 20 20.8424 20H22.1758C22.544 20 22.8424 19.7015 22.8424 19.3333V12.6667Z\" key=\"1\"/>,],\r\n  'MediaVolumeLow',\r\n  '0 0 32 32'\r\n);\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaVolumeHighIcon = createSvgIcon(\r\n  [<path d=\"M17.5091 24.6595C17.5091 25.2066 16.8864 25.5208 16.4463 25.1956L9.44847 20.0252C9.42553 20.0083 9.39776 19.9992 9.36923 19.9992H4.66667C4.29848 19.9992 4 19.7007 4 19.3325V12.6658C4 12.2976 4.29848 11.9992 4.66667 11.9992H9.37115C9.39967 11.9992 9.42745 11.99 9.45039 11.9731L16.4463 6.80363C16.8863 6.47845 17.5091 6.79262 17.5091 7.3398L17.5091 24.6595Z\" key=\"0\"/>,<path d=\"M27.5091 9.33336C27.8773 9.33336 28.1758 9.63184 28.1758 10V22C28.1758 22.3682 27.8773 22.6667 27.5091 22.6667H26.1758C25.8076 22.6667 25.5091 22.3682 25.5091 22V10C25.5091 9.63184 25.8076 9.33336 26.1758 9.33336L27.5091 9.33336Z\" key=\"1\"/>,<path d=\"M22.1758 12C22.544 12 22.8424 12.2985 22.8424 12.6667V19.3334C22.8424 19.7016 22.544 20 22.1758 20H20.8424C20.4743 20 20.1758 19.7016 20.1758 19.3334V12.6667C20.1758 12.2985 20.4743 12 20.8424 12H22.1758Z\" key=\"2\"/>,],\r\n  'MediaVolumeHigh',\r\n  '0 0 32 32'\r\n);\r\n","import {Slider} from '@common/ui/forms/slider/slider';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {BaseSliderProps} from '@common/ui/forms/slider/base-slider';\r\nimport {ButtonProps} from '@common/ui/buttons/button';\r\nimport {MediaMuteIcon} from '@common/icons/media/media-mute';\r\nimport {MediaVolumeLowIcon} from '@common/icons/media/media-volume-low';\r\nimport {MediaVolumeHighIcon} from '@common/icons/media/media-volume-high';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  trackColor?: BaseSliderProps['trackColor'];\r\n  fillColor?: BaseSliderProps['fillColor'];\r\n  buttonColor?: ButtonProps['color'];\r\n  className?: string;\r\n}\r\nexport function VolumeControls({\r\n  trackColor,\r\n  fillColor,\r\n  buttonColor,\r\n  className,\r\n}: Props) {\r\n  const volume = usePlayerStore(s => s.volume);\r\n  const player = usePlayerActions();\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n\r\n  return (\r\n    <div className={clsx('flex w-min items-center gap-4', className)}>\r\n      <ToggleMuteButton color={buttonColor} />\r\n      <Slider\r\n        isDisabled={!playerReady}\r\n        showThumbOnHoverOnly\r\n        thumbSize=\"w-14 h-14\"\r\n        trackColor={trackColor}\r\n        fillColor={fillColor}\r\n        minValue={0}\r\n        maxValue={100}\r\n        className=\"flex-auto\"\r\n        width=\"w-96\"\r\n        value={volume}\r\n        onChange={value => {\r\n          player.setVolume(value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ToggleMuteButtonProps {\r\n  color?: ButtonProps['color'];\r\n  size?: ButtonProps['size'];\r\n  iconSize?: ButtonProps['size'];\r\n}\r\nexport function ToggleMuteButton({\r\n  color,\r\n  size = 'sm',\r\n  iconSize = 'md',\r\n}: ToggleMuteButtonProps) {\r\n  const isMuted = usePlayerStore(s => s.muted);\r\n  const volume = usePlayerStore(s => s.volume);\r\n  const player = usePlayerActions();\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n\r\n  if (isMuted) {\r\n    return (\r\n      <Tooltip label={<Trans message=\"Unmute\" />} usePortal={false}>\r\n        <IconButton\r\n          disabled={!playerReady}\r\n          color={color}\r\n          size={size}\r\n          iconSize={iconSize}\r\n          onClick={() => player.setMuted(false)}\r\n        >\r\n          <MediaMuteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n  return (\r\n    <Tooltip label={<Trans message=\"Mute\" />}>\r\n      <IconButton\r\n        disabled={!playerReady}\r\n        color={color}\r\n        size={size}\r\n        iconSize={iconSize}\r\n        onClick={() => player.setMuted(true)}\r\n      >\r\n        {volume < 40 ? <MediaVolumeLowIcon /> : <MediaVolumeHighIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {ReactNode, useContext} from 'react';\r\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {PlaybackControls} from '@app/web-player/player-controls/playback-controls';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\nimport {\r\n  playerOverlayState,\r\n  usePlayerOverlayStore,\r\n} from '@app/web-player/state/player-overlay-store';\r\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\r\nimport {KeyboardArrowUpIcon} from '@common/icons/material/KeyboardArrowUp';\r\nimport {LyricsButton} from '@app/web-player/player-controls/lyrics-button';\r\nimport {DownloadTrackButton} from '@app/web-player/player-controls/download-track-button';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {getTrackLink, TrackLink} from '@app/web-player/tracks/track-link';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\r\nimport {Link} from 'react-router-dom';\r\nimport {ArtistContextDialog} from '@app/web-player/artists/artist-context-dialog';\r\nimport {MediaQueueListIcon} from '@common/icons/media/media-queue-list';\r\nimport {VolumeControls} from '@common/player/ui/controls/volume-controls';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function DesktopPlayerControls() {\r\n  const mediaIsCued = usePlayerStore(s => s.cuedMedia != null);\r\n  if (!mediaIsCued) return null;\r\n\r\n  return (\r\n    <div className=\"dashboard-grid-footer z-30 flex h-96 items-center justify-between border-t bg px-16\">\r\n      <QueuedTrack />\r\n      <PlaybackControls className=\"w-2/5 max-w-[722px]\" />\r\n      <SecondaryControls />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction QueuedTrack() {\r\n  const track = useCuedTrack();\r\n  let content: ReactNode;\r\n\r\n  if (track) {\r\n    content = (\r\n      <div className=\"flex items-center gap-14\">\r\n        <DialogTrigger type=\"popover\" triggerOnContextMenu placement=\"top\">\r\n          <Link to={getTrackLink(track)} className=\"flex-shrink-0\">\r\n            <TrackImage\r\n              className=\"h-56 w-56 rounded object-cover\"\r\n              track={track}\r\n            />\r\n          </Link>\r\n          <TrackContextDialog tracks={[track]} />\r\n        </DialogTrigger>\r\n        <div className=\"min-w-0 overflow-hidden overflow-ellipsis\">\r\n          <DialogTrigger type=\"popover\" triggerOnContextMenu placement=\"top\">\r\n            <TrackLink\r\n              track={track}\r\n              className=\"min-w-0 max-w-full whitespace-nowrap text-sm\"\r\n            />\r\n            <TrackContextDialog tracks={[track]} />\r\n          </DialogTrigger>\r\n          {track.artists?.length ? (\r\n            <DialogTrigger type=\"popover\" triggerOnContextMenu placement=\"top\">\r\n              <div className=\"text-xs text-muted\">\r\n                <ArtistLinks\r\n                  artists={track.artists}\r\n                  className=\"whitespace-nowrap\"\r\n                />\r\n              </div>\r\n              <ArtistContextDialog artist={track.artists[0]} />\r\n            </DialogTrigger>\r\n          ) : null}\r\n        </div>\r\n        <LikeIconButton likeable={track} />\r\n      </div>\r\n    );\r\n  } else {\r\n    content = null;\r\n  }\r\n\r\n  return <div className=\"w-[30%] min-w-180\">{content}</div>;\r\n}\r\n\r\nfunction SecondaryControls() {\r\n  const {rightSidenavStatus, setRightSidenavStatus} = useContext(\r\n    DashboardLayoutContext,\r\n  );\r\n  return (\r\n    <div className=\"flex w-[30%] min-w-180 items-center justify-end\">\r\n      <LyricsButton />\r\n      <DownloadTrackButton />\r\n      <Tooltip label={<Trans message=\"Queue\" />}>\r\n        <IconButton\r\n          className=\"flex-shrink-0\"\r\n          onClick={() => {\r\n            setRightSidenavStatus(\r\n              rightSidenavStatus === 'closed' ? 'open' : 'closed',\r\n            );\r\n          }}\r\n        >\r\n          <MediaQueueListIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <VolumeControls trackColor=\"neutral\" />\r\n      <OverlayButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction OverlayButton() {\r\n  const isActive = usePlayerOverlayStore(s => s.isMaximized);\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n  const {player} = useSettings();\r\n\r\n  if (player?.hide_video_button) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\"Expand\" />}>\r\n      <IconButton\r\n        className=\"ml-26 flex-shrink-0\"\r\n        color=\"chip\"\r\n        variant=\"flat\"\r\n        size=\"xs\"\r\n        iconSize=\"sm\"\r\n        disabled={!playerReady}\r\n        onClick={() => {\r\n          playerOverlayState.toggle();\r\n        }}\r\n      >\r\n        {isActive ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","export function isNumber(value: any): value is number {\r\n  return typeof value === 'number' && !Number.isNaN(value);\r\n}\r\n","/**\r\n * Load image avoiding xhr/fetch CORS issues. Server status can't be obtained this way\r\n * unfortunately, so this uses \"naturalWidth\" to determine if the image has been loaded. By\r\n * default, it checks if it is at least 1px.\r\n */\r\nexport const loadImage = (\r\n  src: string,\r\n  minWidth = 1\r\n): Promise<HTMLImageElement> =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    const handler = () => {\r\n      // @ts-expect-error\r\n      delete image.onload;\r\n      // @ts-expect-error\r\n      delete image.onerror;\r\n      if (image.naturalWidth >= minWidth) {\r\n        resolve(image);\r\n      } else {\r\n        reject('Could not load youtube image');\r\n      }\r\n    };\r\n    Object.assign(image, {onload: handler, onerror: handler, src});\r\n  });\r\n","import {loadImage} from '@common/utils/http/load-image';\r\n\r\nconst posterCache = new Map<string, string>();\r\n\r\nexport async function loadYoutubePoster(\r\n  videoId: string\r\n): Promise<string | undefined> {\r\n  if (!videoId) return;\r\n  if (posterCache.has(videoId)) {\r\n    return posterCache.get(videoId);\r\n  }\r\n\r\n  const posterURL = (quality: string) =>\r\n    `https://i.ytimg.com/vi/${videoId}/${quality}.jpg`;\r\n\r\n  /**\r\n   * We are testing that the image has a min-width of 121px because if the thumbnail does not\r\n   * exist YouTube returns a blank/error image that is 120px wide.\r\n   */\r\n  return loadImage(posterURL('maxresdefault'), 121) // 1080p (no padding)\r\n    .catch(() => loadImage(posterURL('sddefault'), 121)) // 640p (padded 4:3)\r\n    .catch(() => loadImage(posterURL('hqdefault'), 121)) // 480p (padded 4:3)\r\n    .catch(() => {})\r\n    .then(img => {\r\n      if (!img) return;\r\n      const poster = img.src;\r\n      posterCache.set(videoId, poster);\r\n      return poster;\r\n    });\r\n}\r\n","import {\r\n  YoutubeInternalState,\r\n  YouTubeMessage,\r\n  YoutubeMessageInfo,\r\n  YouTubePlayerState,\r\n  YoutubeProviderError,\r\n} from '@common/player/providers/youtube/youtube-types';\r\nimport {MutableRefObject, RefObject} from 'react';\r\nimport {PlayerStoreApi} from '@common/player/state/player-state';\r\nimport {isNumber} from '@common/utils/number/is-number';\r\nimport {loadYoutubePoster} from '@common/player/providers/youtube/load-youtube-poster';\r\n\r\nexport function handleYoutubeEmbedMessage(\r\n  e: MessageEvent,\r\n  internalStateRef: MutableRefObject<YoutubeInternalState>,\r\n  iframeRef: RefObject<HTMLIFrameElement>,\r\n  store: PlayerStoreApi\r\n) {\r\n  const data = (\r\n    typeof e.data === 'string' ? JSON.parse(e.data) : e.data\r\n  ) as YouTubeMessage;\r\n  const info = data.info;\r\n  const internalState = internalStateRef.current;\r\n  const emit = store.getState().emit;\r\n  if (!info) return;\r\n\r\n  if (info.videoData?.video_id) {\r\n    internalState.videoId = info.videoData.video_id;\r\n  }\r\n\r\n  if (info.videoData?.errorCode) {\r\n    const event: YoutubeProviderError = {\r\n      code: info.videoData.errorCode,\r\n      videoId: internalState.videoId,\r\n    };\r\n    emit('error', {sourceEvent: event});\r\n  }\r\n\r\n  if (isNumber(info.duration) && info.duration !== internalState.duration) {\r\n    internalState.duration = info.duration;\r\n    emit('durationChange', {duration: internalState.duration});\r\n  }\r\n\r\n  if (\r\n    isNumber(info.currentTime) &&\r\n    info.currentTime !== internalState.currentTime\r\n  ) {\r\n    internalState.currentTime = info.currentTime;\r\n    // don't fire progress events while seeking via seekbar\r\n    if (!store.getState().isSeeking) {\r\n      emit('progress', {currentTime: internalState.currentTime});\r\n    }\r\n  }\r\n\r\n  if (isNumber(info.currentTimeLastUpdated)) {\r\n    internalState.lastTimeUpdate = info.currentTimeLastUpdated;\r\n  }\r\n\r\n  if (isNumber(info.playbackRate)) {\r\n    if (internalState.playbackRate !== info.playbackRate) {\r\n      emit('playbackRateChange', {rate: info.playbackRate});\r\n    }\r\n    internalState.playbackRate = info.playbackRate;\r\n  }\r\n\r\n  if (isNumber(info.videoLoadedFraction)) {\r\n    const buffered = info.videoLoadedFraction * internalState.duration;\r\n    if (internalState.buffered !== buffered) {\r\n      emit('buffered', {\r\n        seconds: info.videoLoadedFraction * internalState.duration,\r\n      });\r\n    }\r\n    internalState.buffered = buffered;\r\n  }\r\n\r\n  if (Array.isArray(info.availablePlaybackRates)) {\r\n    emit('playbackRates', {rates: info.availablePlaybackRates});\r\n  }\r\n\r\n  if (isNumber(info.playerState)) {\r\n    onYoutubeStateChange(info, internalStateRef, iframeRef, store);\r\n    internalState.state = info.playerState;\r\n  }\r\n}\r\n\r\nfunction onYoutubeStateChange(\r\n  info: YoutubeMessageInfo,\r\n  internalStateRef: MutableRefObject<YoutubeInternalState>,\r\n  iframeRef: RefObject<HTMLIFrameElement>,\r\n  store: PlayerStoreApi\r\n) {\r\n  const emit = store.getState().emit;\r\n  const state = info.playerState!;\r\n\r\n  const onCued = async () => {\r\n    // load poster, if needed\r\n    if (info.videoData?.video_id && !store.getState().cuedMedia?.poster) {\r\n      const url = await loadYoutubePoster(info.videoData.video_id);\r\n      if (url) {\r\n        store.getState().emit('posterLoaded', {url});\r\n      }\r\n    }\r\n\r\n    // mark provider as ready\r\n    if (!internalStateRef.current.playbackReady) {\r\n      emit('providerReady', {el: iframeRef.current!});\r\n      internalStateRef.current.playbackReady = true;\r\n    }\r\n    emit('cued');\r\n  };\r\n\r\n  emit('youtubeStateChange', {state});\r\n  emit('buffering', {isBuffering: state === YouTubePlayerState.Buffering});\r\n\r\n  if (state !== YouTubePlayerState.Ended) {\r\n    internalStateRef.current.firedPlaybackEnd = false;\r\n  }\r\n\r\n  switch (state) {\r\n    case YouTubePlayerState.Unstarted:\r\n      // When using autoplay, but autoplay fails, player will get \"unstarted\" event\r\n      onCued();\r\n      break;\r\n    case YouTubePlayerState.Ended:\r\n      // will sometimes fire twice without this, if player starts buffering as a result of seek to the end\r\n      if (!internalStateRef.current.firedPlaybackEnd) {\r\n        emit('playbackEnd');\r\n        internalStateRef.current.firedPlaybackEnd = true;\r\n      }\r\n      break;\r\n    case YouTubePlayerState.Playing:\r\n      // When using autoplay, \"cued\" event is never fired, handle \"cued\" here instead\r\n      onCued();\r\n      emit('play');\r\n      break;\r\n    case YouTubePlayerState.Paused:\r\n      emit('pause');\r\n      break;\r\n    case YouTubePlayerState.Cued:\r\n      onCued();\r\n      break;\r\n  }\r\n}\r\n","export function youtubeIdFromSrc(src: string) {\r\n  return src.match(/((?:\\w|-){11})/)?.[0];\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {useCallback, useEffect, useState} from 'react';\r\nimport {YoutubeMediaItem} from '@common/player/media-item';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {youtubeIdFromSrc} from '@common/player/utils/youtube-id-from-src';\r\n\r\nconst queryString =\r\n  '&controls=0&disablekb=1&enablejsapi=1&iv_load_policy=3&modestbranding=1&playsinline=1&rel=0&showinfo=0';\r\n\r\nexport function useYoutubeProviderSrc(\r\n  loadVideoById: (videoId: string) => void\r\n) {\r\n  const {getState, emit} = usePlayerActions();\r\n  const options = usePlayerStore(s => s.options);\r\n  const media = usePlayerStore(s => s.cuedMedia) as\r\n    | YoutubeMediaItem\r\n    | undefined;\r\n\r\n  const origin = options.youtube?.useCookies\r\n    ? 'https://www.youtube.com'\r\n    : 'https://www.youtube-nocookie.com';\r\n\r\n  const [initialVideoId, setInitialVideoId] = useState(() => {\r\n    if (media?.src && media.src !== 'resolve') {\r\n      return youtubeIdFromSrc(media.src);\r\n    }\r\n  });\r\n\r\n  const updateVideoIds = useCallback(\r\n    (src: string) => {\r\n      const videoId = youtubeIdFromSrc(src);\r\n      if (!videoId) return;\r\n\r\n      // use setState callback, so we don't need to use \"initialVideoId\" in the dependency array\r\n      setInitialVideoId(prevId => {\r\n        if (!prevId) {\r\n          return videoId;\r\n        } else {\r\n          // changing src of iframe will cause it to fully reload, use \"loadVideoById\" api method instead\r\n          loadVideoById(videoId);\r\n          return prevId;\r\n        }\r\n      });\r\n    },\r\n    [loadVideoById]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (media?.src && media.src !== 'resolve') {\r\n      updateVideoIds(media.src);\r\n    } else if (media) {\r\n      emit('buffering', {isBuffering: true});\r\n      options.youtube?.srcResolver?.(media).then(item => {\r\n        // check if resolved media matches the one currently in the store to prevent race conditions.\r\n        // check against current value in store, because this callback will close over old value\r\n        if (item?.src && getState().cuedMedia?.id === item.id) {\r\n          updateVideoIds(item.src);\r\n        }\r\n      });\r\n    }\r\n    // only update when media id changes to prevent infinite loops\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [options, updateVideoIds, media?.id]);\r\n\r\n  return {\r\n    initialVideoUrl: initialVideoId\r\n      ? `${origin}/embed/${initialVideoId}?${queryString}&autoplay=${\r\n          options.autoPlay ? '1' : '0'\r\n        }&mute=${getState().muted ? '1' : '0'}&start=${media?.initialTime ?? 0}`\r\n      : undefined,\r\n    origin,\r\n  };\r\n}\r\n","import {useGlobalListeners} from '@react-aria/utils';\r\nimport {useCallback, useContext, useEffect, useRef} from 'react';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {\r\n  YoutubeCommand,\r\n  YouTubeCommandArg,\r\n  YoutubeInternalState,\r\n  YoutubeProviderInternalApi,\r\n} from '@common/player/providers/youtube/youtube-types';\r\nimport {handleYoutubeEmbedMessage} from '@common/player/providers/youtube/handle-youtube-embed-message';\r\nimport {useYoutubeProviderSrc} from '@common/player/providers/youtube/use-youtube-provider-src';\r\n\r\nexport function YoutubeProvider() {\r\n  const {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\r\n  const iframeRef = useRef<HTMLIFrameElement>(null);\r\n\r\n  const youtubeApi = useCallback(\r\n    <T extends keyof YouTubeCommandArg>(\r\n      command: T,\r\n      arg?: YouTubeCommandArg[T]\r\n    ) =>\r\n      iframeRef.current?.contentWindow?.postMessage(\r\n        JSON.stringify({\r\n          event: 'command',\r\n          func: command,\r\n          args: arg ? [arg] : undefined,\r\n        }),\r\n        '*'\r\n      ),\r\n    []\r\n  );\r\n\r\n  const loadVideoById = useCallback(\r\n    (videoId: string) => {\r\n      // using \"YoutubeCommand.Cue\" does not play video when changing sources,\r\n      // it requires double click on play button without this\r\n      youtubeApi(YoutubeCommand.CueAndPlay, videoId);\r\n    },\r\n    [youtubeApi]\r\n  );\r\n\r\n  const {initialVideoUrl, origin} = useYoutubeProviderSrc(loadVideoById);\r\n  const store = useContext(PlayerStoreContext);\r\n\r\n  const internalStateRef = useRef<YoutubeInternalState>({\r\n    duration: 0,\r\n    currentTime: 0,\r\n    lastTimeUpdate: 0,\r\n    playbackRate: 1,\r\n    state: -1,\r\n    playbackReady: false,\r\n    buffered: 0,\r\n    firedPlaybackEnd: false,\r\n  });\r\n\r\n  const registerApi = useCallback(() => {\r\n    const internalProviderApi: YoutubeProviderInternalApi = {\r\n      loadVideoById,\r\n    };\r\n    store.setState({\r\n      providerApi: {\r\n        play: () => {\r\n          youtubeApi(YoutubeCommand.Play);\r\n        },\r\n        pause: () => {\r\n          youtubeApi(YoutubeCommand.Pause);\r\n        },\r\n        stop: () => {\r\n          youtubeApi(YoutubeCommand.Stop);\r\n        },\r\n        seek: (time: number) => {\r\n          if (time !== internalStateRef.current.currentTime) {\r\n            youtubeApi(YoutubeCommand.Seek, time);\r\n          }\r\n        },\r\n        setVolume: (volume: number) => {\r\n          youtubeApi(YoutubeCommand.SetVolume, volume);\r\n        },\r\n        setMuted: (muted: boolean) => {\r\n          if (muted) {\r\n            youtubeApi(YoutubeCommand.Mute);\r\n          } else {\r\n            youtubeApi(YoutubeCommand.Unmute);\r\n          }\r\n        },\r\n        setPlaybackRate: (value: number) => {\r\n          youtubeApi(YoutubeCommand.SetPlaybackRate, value);\r\n        },\r\n        setPlaybackQuality: (value: string) => {\r\n          youtubeApi(YoutubeCommand.SetPlaybackQuality, value);\r\n        },\r\n        getCurrentTime: () => {\r\n          return internalStateRef.current.currentTime;\r\n        },\r\n        getSrc: () => {\r\n          return internalStateRef.current.videoId;\r\n        },\r\n        internalProviderApi,\r\n      },\r\n    });\r\n  }, [store, loadVideoById, youtubeApi]);\r\n\r\n  useEffect(() => {\r\n    addGlobalListener(window, 'message', event => {\r\n      const e = event as MessageEvent;\r\n      if (\r\n        e.origin === origin &&\r\n        e.source === iframeRef.current?.contentWindow\r\n      ) {\r\n        handleYoutubeEmbedMessage(e, internalStateRef, iframeRef, store);\r\n      }\r\n    });\r\n\r\n    registerApi();\r\n\r\n    return () => {\r\n      removeAllGlobalListeners();\r\n    };\r\n  }, [addGlobalListener, removeAllGlobalListeners, store, origin, registerApi]);\r\n\r\n  if (!initialVideoUrl) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <iframe\r\n      className=\"w-full h-full\"\r\n      ref={iframeRef}\r\n      src={initialVideoUrl}\r\n      allowFullScreen\r\n      allow=\"autoplay; encrypted-media; picture-in-picture;\"\r\n      onLoad={() => {\r\n        // window does not receive \"message\" events on safari without waiting a small amount of time for some reason\r\n        setTimeout(() => {\r\n          iframeRef.current?.contentWindow?.postMessage(\r\n            JSON.stringify({event: 'listening'}),\r\n            '*'\r\n          );\r\n          registerApi();\r\n        });\r\n      }}\r\n    />\r\n  );\r\n}\r\n","export function createRafLoop(callback: () => void) {\r\n  let id: number | undefined;\r\n\r\n  function start() {\r\n    // Time updates are already in progress.\r\n    if (!isUndefined(id)) return;\r\n    loop();\r\n  }\r\n\r\n  function loop() {\r\n    id = window.requestAnimationFrame(function rafLoop() {\r\n      if (isUndefined(id)) return;\r\n      callback();\r\n      loop();\r\n    });\r\n  }\r\n\r\n  function stop() {\r\n    if (isNumber(id)) window.cancelAnimationFrame(id);\r\n    id = undefined;\r\n  }\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n  };\r\n}\r\n\r\nfunction isUndefined(value: unknown): value is undefined {\r\n  return typeof value === 'undefined';\r\n}\r\n\r\nfunction isNumber(value: any): value is number {\r\n  return typeof value === 'number' && !Number.isNaN(value);\r\n}\r\n","import {\r\n  MutableRefObject,\r\n  RefObject,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n} from 'react';\r\nimport {createRafLoop} from '@common/utils/dom/create-ref-loop';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\n\r\nexport interface HtmlMediaInternalStateReturn {\r\n  ref: RefObject<HTMLMediaElement>;\r\n  updateCurrentTime: () => void;\r\n  updateBuffered: () => void;\r\n  toggleTextTrackModes: (newTrackId: number, isVisible: boolean) => void;\r\n  internalState: MutableRefObject<{\r\n    currentTime: number;\r\n    playbackReady: boolean;\r\n    timeRafLoop: ReturnType<typeof createRafLoop>;\r\n  }>;\r\n}\r\n\r\nexport function useHtmlMediaInternalState(\r\n  ref: RefObject<HTMLMediaElement>\r\n): HtmlMediaInternalStateReturn {\r\n  const store = useContext(PlayerStoreContext);\r\n  const cuedMedia = usePlayerStore(s => s.cuedMedia);\r\n\r\n  const internalState = useRef({\r\n    currentTime: 0,\r\n    buffered: 0,\r\n    isMediaWaiting: false,\r\n    playbackReady: false,\r\n    /**\r\n     * The `timeupdate` event fires surprisingly infrequently during playback, meaning your progress\r\n     * bar (or whatever else is synced to the currentTime) moves in a choppy fashion. This helps\r\n     * resolve that by retrieving time updates in a request animation frame loop.\r\n     */\r\n    timeRafLoop: createRafLoop(() => {\r\n      updateCurrentTime();\r\n      updateBuffered();\r\n    }),\r\n  });\r\n\r\n  const updateBuffered = useCallback(() => {\r\n    const timeRange = ref.current?.buffered;\r\n    const seconds =\r\n      !timeRange || timeRange.length === 0\r\n        ? 0\r\n        : timeRange.end(timeRange.length - 1);\r\n\r\n    if (internalState.current.buffered !== seconds) {\r\n      store.getState().emit('buffered', {seconds});\r\n      internalState.current.buffered = seconds;\r\n    }\r\n  }, [ref, store]);\r\n\r\n  const updateCurrentTime = useCallback(() => {\r\n    const newTime = ref.current?.currentTime || 0;\r\n    if (\r\n      internalState.current.currentTime !== newTime &&\r\n      !store.getState().isSeeking\r\n    ) {\r\n      store.getState().emit('progress', {currentTime: newTime});\r\n      internalState.current.currentTime = newTime;\r\n    }\r\n  }, [internalState, store, ref]);\r\n\r\n  const toggleTextTrackModes = useCallback(\r\n    (newTrackId: number, isVisible: boolean) => {\r\n      if (!ref.current) return;\r\n      const {textTracks} = ref.current;\r\n\r\n      if (newTrackId === -1) {\r\n        Array.from(textTracks).forEach(track => {\r\n          track.mode = 'disabled';\r\n        });\r\n      } else {\r\n        const oldTrack = textTracks[store.getState().currentTextTrack];\r\n        if (oldTrack) oldTrack.mode = 'disabled';\r\n      }\r\n\r\n      const nextTrack = textTracks[newTrackId];\r\n\r\n      if (nextTrack) {\r\n        nextTrack.mode = isVisible ? 'showing' : 'hidden';\r\n      }\r\n\r\n      store.getState().emit('currentTextTrackChange', {\r\n        trackId: !isVisible ? -1 : newTrackId,\r\n      });\r\n      store\r\n        .getState()\r\n        .emit('textTrackVisibilityChange', {isVisible: isVisible});\r\n    },\r\n    [ref, store]\r\n  );\r\n\r\n  // stop current time loop on unmount\r\n  useEffect(() => {\r\n    const timeRafLoop = internalState.current.timeRafLoop;\r\n    return () => {\r\n      timeRafLoop.stop();\r\n    };\r\n  }, []);\r\n\r\n  // reload metadata when new media is cued\r\n  useEffect(() => {\r\n    ref.current?.load();\r\n  }, [cuedMedia?.src, ref]);\r\n\r\n  return {\r\n    ref,\r\n    internalState,\r\n    updateCurrentTime,\r\n    toggleTextTrackModes,\r\n    updateBuffered,\r\n  };\r\n}\r\n","import {\r\n  HTMLAttributes,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n} from 'react';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {HtmlMediaInternalStateReturn} from '@common/player/providers/html-media/use-html-media-internal-state';\r\n\r\nconst defaultPlaybackRates = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\r\n\r\nexport function useHtmlMediaEvents({\r\n  ref,\r\n  updateCurrentTime,\r\n  updateBuffered,\r\n  internalState,\r\n}: HtmlMediaInternalStateReturn): HTMLAttributes<HTMLMediaElement> {\r\n  const store = useContext(PlayerStoreContext);\r\n\r\n  const onTextTracksChange = useCallback(() => {\r\n    if (!ref.current) return;\r\n    const tracks = Array.from(ref.current.textTracks).filter(\r\n      t => t.label && (t.kind === 'subtitles' || t.kind === 'captions')\r\n    );\r\n\r\n    let trackId = -1;\r\n    for (let id = 0; id < tracks.length; id += 1) {\r\n      if (tracks[id].mode === 'hidden') {\r\n        // Do not break in case there is a following track with showing.\r\n        trackId = id;\r\n      } else if (tracks[id].mode === 'showing') {\r\n        trackId = id;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const isVisible = trackId !== -1 && tracks[trackId].mode === 'showing';\r\n    store.getState().emit('currentTextTrackChange', {trackId});\r\n    store.getState().emit('textTrackVisibilityChange', {isVisible});\r\n    store.getState().emit('textTracks', {tracks});\r\n  }, [ref, store]);\r\n\r\n  useEffect(() => {\r\n    const el = ref.current;\r\n    return () => {\r\n      el?.textTracks.removeEventListener('change', onTextTracksChange);\r\n    };\r\n  }, [ref, onTextTracksChange]);\r\n\r\n  return useMemo(() => {\r\n    const emit = store.getState().emit;\r\n    return {\r\n      // set some common props used on audio/video/hls/dash providers\r\n      autoPlay: false,\r\n      onContextMenu: e => e.preventDefault(),\r\n      controlsList: 'nodownload',\r\n      preload: 'metadata',\r\n      'x-webkit-airplay': 'allow',\r\n      onEnded: () => {\r\n        emit('playbackEnd');\r\n        updateCurrentTime();\r\n        internalState.current.timeRafLoop.stop();\r\n      },\r\n      onStalled: e => {\r\n        if (e.currentTarget.readyState < 3) {\r\n          emit('buffering', {isBuffering: true});\r\n        }\r\n      },\r\n      onWaiting: () => {\r\n        emit('buffering', {isBuffering: true});\r\n      },\r\n      onPlaying: () => {\r\n        emit('play');\r\n        emit('buffering', {isBuffering: false});\r\n      },\r\n      onPause: e => {\r\n        emit('pause');\r\n        emit('buffering', {isBuffering: false});\r\n        internalState.current.timeRafLoop.stop();\r\n      },\r\n      onSuspend: () => {\r\n        emit('buffering', {isBuffering: false});\r\n      },\r\n      onSeeking: () => {\r\n        updateCurrentTime();\r\n      },\r\n      onSeeked: () => {\r\n        updateCurrentTime();\r\n      },\r\n      onTimeUpdate: () => {\r\n        updateCurrentTime();\r\n      },\r\n      onError: e => {\r\n        emit('error', {sourceEvent: e});\r\n      },\r\n      onDurationChange: e => {\r\n        updateCurrentTime();\r\n        emit('durationChange', {duration: e.currentTarget.duration});\r\n      },\r\n      onRateChange: e => {\r\n        emit('playbackRateChange', {rate: e.currentTarget.playbackRate});\r\n      },\r\n      onLoadedMetadata: e => {\r\n        if (!internalState.current.playbackReady) {\r\n          emit('providerReady', {el: e.currentTarget});\r\n          internalState.current.playbackReady = true;\r\n          updateBuffered();\r\n          onTextTracksChange();\r\n          e.currentTarget.textTracks.addEventListener('change', () => {\r\n            onTextTracksChange();\r\n          });\r\n        }\r\n        emit('cued');\r\n        emit('playbackRates', {rates: defaultPlaybackRates});\r\n      },\r\n    };\r\n  }, [\r\n    internalState,\r\n    store,\r\n    updateCurrentTime,\r\n    onTextTracksChange,\r\n    updateBuffered,\r\n  ]);\r\n}\r\n","import {HtmlMediaInternalStateReturn} from '@common/player/providers/html-media/use-html-media-internal-state';\r\nimport {useContext, useMemo} from 'react';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {PlayerProviderApi} from '@common/player/state/player-provider-api';\r\n\r\nexport function useHtmlMediaApi({\r\n  ref,\r\n  internalState,\r\n  toggleTextTrackModes,\r\n}: HtmlMediaInternalStateReturn): PlayerProviderApi {\r\n  const store = useContext(PlayerStoreContext);\r\n  return useMemo(\r\n    () => ({\r\n      play: async () => {\r\n        try {\r\n          await ref.current?.play();\r\n        } catch (e) {\r\n          store.getState().emit('error', {sourceEvent: e});\r\n        }\r\n        internalState.current.timeRafLoop.start();\r\n      },\r\n      pause: () => {\r\n        ref.current?.pause();\r\n        internalState.current.timeRafLoop.stop();\r\n      },\r\n      stop: () => {\r\n        if (ref.current) {\r\n          ref.current.pause();\r\n          ref.current.currentTime = 0;\r\n        }\r\n      },\r\n      seek: (time: number) => {\r\n        if (time !== internalState.current.currentTime && ref.current) {\r\n          ref.current.currentTime = time;\r\n        }\r\n      },\r\n      setVolume: (volume: number) => {\r\n        if (ref.current) {\r\n          ref.current.volume = volume / 100;\r\n        }\r\n      },\r\n      setMuted: (muted: boolean) => {\r\n        if (ref.current) {\r\n          ref.current.muted = muted;\r\n        }\r\n      },\r\n      setPlaybackRate: (value: number) => {\r\n        if (ref.current) {\r\n          ref.current.playbackRate = value;\r\n        }\r\n      },\r\n      setTextTrackVisibility: isVisible => {\r\n        toggleTextTrackModes(store.getState().currentTextTrack, isVisible);\r\n      },\r\n      setCurrentTextTrack: newTrackId => {\r\n        toggleTextTrackModes(newTrackId, store.getState().textTrackIsVisible);\r\n      },\r\n      getCurrentTime: () => {\r\n        return internalState.current.currentTime;\r\n      },\r\n      getSrc: () => {\r\n        return ref.current?.src;\r\n      },\r\n    }),\r\n    [ref, store, internalState, toggleTextTrackModes]\r\n  );\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {useContext, useEffect, useRef} from 'react';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {useHtmlMediaInternalState} from '@common/player/providers/html-media/use-html-media-internal-state';\r\nimport {useHtmlMediaEvents} from '@common/player/providers/html-media/use-html-media-events';\r\nimport {useHtmlMediaApi} from '@common/player/providers/html-media/use-html-media-api';\r\n\r\nexport function HtmlVideoProvider() {\r\n  const ref = useRef<HTMLVideoElement>(null);\r\n\r\n  const autoPlay = usePlayerStore(s => s.options.autoPlay);\r\n  const muted = usePlayerStore(s => s.muted);\r\n  const cuedMedia = usePlayerStore(s => s.cuedMedia);\r\n  const store = useContext(PlayerStoreContext);\r\n\r\n  const state = useHtmlMediaInternalState(ref);\r\n  const events = useHtmlMediaEvents(state);\r\n  const providerApi = useHtmlMediaApi(state);\r\n\r\n  useEffect(() => {\r\n    store.setState({\r\n      providerApi,\r\n    });\r\n  }, [store, providerApi]);\r\n\r\n  let src = cuedMedia?.src;\r\n  if (src && cuedMedia?.initialTime) {\r\n    src = `${src}#t=${cuedMedia.initialTime}`;\r\n  }\r\n\r\n  return (\r\n    <video\r\n      className=\"w-full h-full\"\r\n      ref={ref}\r\n      src={src}\r\n      playsInline\r\n      poster={cuedMedia?.poster}\r\n      autoPlay={autoPlay}\r\n      muted={muted}\r\n      {...events}\r\n    >\r\n      {cuedMedia?.captions?.map((caption, index) => (\r\n        <track\r\n          key={caption.id}\r\n          label={caption.label}\r\n          kind=\"subtitles\"\r\n          srcLang={caption.language || 'en'}\r\n          src={caption.src}\r\n          default={index === 0}\r\n        />\r\n      ))}\r\n    </video>\r\n  );\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {useContext, useEffect, useRef} from 'react';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {useHtmlMediaInternalState} from '@common/player/providers/html-media/use-html-media-internal-state';\r\nimport {useHtmlMediaEvents} from '@common/player/providers/html-media/use-html-media-events';\r\nimport {useHtmlMediaApi} from '@common/player/providers/html-media/use-html-media-api';\r\nimport {useMyContext} from '@app/GlobalContext';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    webkitAudioContext: typeof AudioContext;\r\n  }\r\n}\r\n\r\nexport function HtmlAudioProvider() {\r\n  const ref = useRef<HTMLAudioElement>(null);\r\n  const dataREf = useRef<any>(null);\r\n  let previousSrc: string | null = null;\r\n\r\n  const {analyzerData, setAnalyzerData} = useMyContext();\r\n\r\n  const autoPlay = usePlayerStore(s => s.options.autoPlay);\r\n  const muted = usePlayerStore(s => s.muted);\r\n  const cuedMedia = usePlayerStore(s => s.cuedMedia);\r\n  const store = useContext(PlayerStoreContext);\r\n\r\n  const state = useHtmlMediaInternalState(ref);\r\n  const events = useHtmlMediaEvents(state);\r\n  const providerApi = useHtmlMediaApi(state);\r\n\r\n  const audioAnalyzer = async () => {\r\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n    const analyzer = audioCtx.createAnalyser();\r\n\r\n    analyzer.fftSize = 2048;\r\n    const bufferLength = analyzer.frequencyBinCount;\r\n    const dataArray = new Uint8Array(bufferLength);\r\n    if (ref.current && ref.current.src) {\r\n      const source = audioCtx.createMediaElementSource(ref.current);\r\n      source.connect(analyzer);\r\n      source.connect(audioCtx.destination);\r\n    }\r\n    if (ref.current && !ref.current.paused) {\r\n      setAnalyzerData({analyzer, bufferLength, dataArray, audioCtx});\r\n    }\r\n\r\n    const logAudioData = () => {\r\n      if (ref.current && !ref.current.paused) {\r\n        analyzer.getByteFrequencyData(dataArray);\r\n      }\r\n\r\n      // Use the analyzer from the state directly\r\n      requestAnimationFrame(logAudioData);\r\n    };\r\n\r\n    // Start logging the data\r\n    logAudioData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    store.setState({\r\n      providerApi,\r\n    });\r\n  }, [store, providerApi]);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      // Check if the current song source is different from the previous one\r\n      if (cuedMedia?.src !== previousSrc) {\r\n        // Update the previous song URL with the current one\r\n        previousSrc = cuedMedia?.src as any;\r\n        // Assign the onplay event to trigger audioAnalyzer\r\n        ref.current.onplay = audioAnalyzer;\r\n      }\r\n    }\r\n  }, [cuedMedia?.src]); // Adjust dependencies based on your needs\r\n\r\n  let src = cuedMedia?.src;\r\n  if (src && cuedMedia?.initialTime) {\r\n    src = `${src}#t=${cuedMedia.initialTime}`;\r\n  }\r\n\r\n  return (\r\n    <audio\r\n      className=\"h-full w-full\"\r\n      ref={ref}\r\n      src={src}\r\n      autoPlay={autoPlay}\r\n      muted={muted}\r\n      {...events}\r\n    />\r\n  );\r\n}\r\n","import React, {memo, Suspense, useContext, useEffect} from 'react';\r\nimport {PlayerStoreContext} from '@common/player/player-context';\r\nimport {YoutubeProvider} from '@common/player/providers/youtube/youtube-provider';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {HtmlVideoProvider} from '@common/player/providers/html-video-provider';\r\nimport {HtmlAudioProvider} from '@common/player/providers/html-audio-provider';\r\n\r\nconst HlsProvider = React.lazy(\r\n  () => import('@common/player/providers/hls-provider')\r\n);\r\nconst DashProvider = React.lazy(\r\n  () => import('@common/player/providers/dash-provider')\r\n);\r\n\r\ninterface Props {\r\n  className?: string;\r\n}\r\nexport const PlayerOutlet = memo(({className}: Props) => {\r\n  const {getState} = useContext(PlayerStoreContext);\r\n\r\n  useEffect(() => {\r\n    getState().init();\r\n    return getState().destroy;\r\n  }, [getState]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Provider />\r\n    </div>\r\n  );\r\n});\r\n\r\nfunction Provider() {\r\n  const provider = usePlayerStore(s => s.providerName);\r\n  switch (provider) {\r\n    case 'youtube':\r\n      return <YoutubeProvider />;\r\n    case 'htmlVideo':\r\n      return <HtmlVideoProvider />;\r\n    case 'htmlAudio':\r\n      return <HtmlAudioProvider />;\r\n    case 'hls':\r\n      return (\r\n        <Suspense>\r\n          <HlsProvider />\r\n        </Suspense>\r\n      );\r\n    case 'dash':\r\n      return (\r\n        <Suspense>\r\n          <DashProvider />\r\n        </Suspense>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport clsx from 'clsx';\r\nimport {HTMLAttributes, ReactElement} from 'react';\r\n\r\ninterface Props extends HTMLAttributes<HTMLDivElement> {\r\n  hideDuringPlayback?: boolean;\r\n  fallback?: ReactElement;\r\n}\r\nexport function PlayerPoster({\r\n  className,\r\n  hideDuringPlayback = true,\r\n  fallback,\r\n  ...domProps\r\n}: Props) {\r\n  const posterUrl = usePlayerStore(s => s.posterUrl);\r\n  const shouldHidePoster = usePlayerStore(\r\n    s =>\r\n      hideDuringPlayback && s.playbackStarted && s.providerName !== 'htmlAudio',\r\n  );\r\n  if (!posterUrl && !fallback) return null;\r\n  return (\r\n    <div\r\n      {...domProps}\r\n      className={clsx(\r\n        'pointer-events-none flex max-h-full w-full items-center justify-center bg-black transition-opacity',\r\n        shouldHidePoster ? 'opacity-0' : 'opacity-100',\r\n        className,\r\n      )}\r\n    >\r\n      {posterUrl ? (\r\n        <img\r\n          loading=\"lazy\"\r\n          src={posterUrl}\r\n          alt=\"\"\r\n          className=\"max-h-full w-full flex-shrink-0 object-cover\"\r\n        />\r\n      ) : (\r\n        fallback\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const MediaFullscreenIcon = createSvgIcon(\r\n  [<path d=\"M25.3299 7.26517C25.2958 6.929 25.0119 6.66666 24.6667 6.66666H19.3334C18.9652 6.66666 18.6667 6.96514 18.6667 7.33333V9.33333C18.6667 9.70152 18.9652 10 19.3334 10L21.8667 10C21.9403 10 22 10.0597 22 10.1333V12.6667C22 13.0349 22.2985 13.3333 22.6667 13.3333H24.6667C25.0349 13.3333 25.3334 13.0349 25.3334 12.6667V7.33333C25.3334 7.31032 25.3322 7.28758 25.3299 7.26517Z\" key=\"0\"/>,<path d=\"M22 21.8667C22 21.9403 21.9403 22 21.8667 22L19.3334 22C18.9652 22 18.6667 22.2985 18.6667 22.6667V24.6667C18.6667 25.0349 18.9652 25.3333 19.3334 25.3333L24.6667 25.3333C25.0349 25.3333 25.3334 25.0349 25.3334 24.6667V19.3333C25.3334 18.9651 25.0349 18.6667 24.6667 18.6667H22.6667C22.2985 18.6667 22 18.9651 22 19.3333V21.8667Z\" key=\"1\"/>,<path d=\"M12.6667 22H10.1334C10.0597 22 10 21.9403 10 21.8667V19.3333C10 18.9651 9.70154 18.6667 9.33335 18.6667H7.33335C6.96516 18.6667 6.66669 18.9651 6.66669 19.3333V24.6667C6.66669 25.0349 6.96516 25.3333 7.33335 25.3333H12.6667C13.0349 25.3333 13.3334 25.0349 13.3334 24.6667V22.6667C13.3334 22.2985 13.0349 22 12.6667 22Z\" key=\"2\"/>,<path d=\"M10 12.6667V10.1333C10 10.0597 10.0597 10 10.1334 10L12.6667 10C13.0349 10 13.3334 9.70152 13.3334 9.33333V7.33333C13.3334 6.96514 13.0349 6.66666 12.6667 6.66666H7.33335C6.96516 6.66666 6.66669 6.96514 6.66669 7.33333V12.6667C6.66669 13.0349 6.96516 13.3333 7.33335 13.3333H9.33335C9.70154 13.3333 10 13.0349 10 12.6667Z\" key=\"3\"/>,],\r\n  'MediaFullscreen',\r\n  '0 0 32 32'\r\n);\r\n","import {useCallback, useRef} from 'react';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\n\r\nexport function usePlayerClickHandler() {\r\n  const clickRef = useRef(0);\r\n  const player = usePlayerActions();\r\n\r\n  const togglePlay = useCallback(() => {\r\n    if (player.getState().isPlaying) {\r\n      player.pause();\r\n    } else {\r\n      player.play();\r\n    }\r\n  }, [player]);\r\n\r\n  return useCallback(() => {\r\n    if (!player.getState().providerReady) return;\r\n    clickRef.current += 1;\r\n    togglePlay();\r\n    if (clickRef.current === 1) {\r\n      setTimeout(() => {\r\n        if (clickRef.current > 1) {\r\n          player.toggleFullscreen();\r\n        }\r\n        clickRef.current = 0;\r\n      }, 300);\r\n    }\r\n  }, [player, togglePlay]);\r\n}\r\n","import React, {\r\n  Fragment,\r\n  MutableRefObject,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport clsx from 'clsx';\r\nimport {\r\n  playerOverlayState,\r\n  usePlayerOverlayStore,\r\n} from '@app/web-player/state/player-overlay-store';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\r\nimport {PlaybackControls} from '@app/web-player/player-controls/playback-controls';\r\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {LikeIconButton} from '@app/web-player/library/like-icon-button';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {TrackContextDialog} from '@app/web-player/tracks/context-dialog/track-context-dialog';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport fscreen from 'fscreen';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {LyricsButton} from '@app/web-player/player-controls/lyrics-button';\r\nimport {useMediaQuery} from '@common/utils/hooks/use-media-query';\r\nimport {DownloadTrackButton} from '@app/web-player/player-controls/download-track-button';\r\nimport {TrackLink} from '@app/web-player/tracks/track-link';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {usePrevious} from '@common/utils/hooks/use-previous';\r\nimport {PlayerOutlet} from '@common/player/ui/player-outlet';\r\nimport {PlayerPoster} from '@common/player/ui/controls/player-poster';\r\nimport {MediaFullscreenIcon} from '@common/icons/media/media-fullscreen';\r\nimport {MediaQueueListIcon} from '@common/icons/media/media-queue-list';\r\nimport {useMiniPlayerIsHidden} from '@app/web-player/overlay/use-mini-player-is-hidden';\r\nimport {usePlayerClickHandler} from '@common/player/hooks/use-player-click-handler';\r\nimport {QueueTrackContextDialog} from '@app/web-player/layout/queue/queue-track-context-dialog';\r\nimport {RowElementProps} from '@common/ui/tables/table-row';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {MediaItem} from '@common/player/media-item';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\n\r\nexport function PlayerOverlay() {\r\n  const isMobile = useMediaQuery('(max-width: 1024px)');\r\n  const isMaximized = usePlayerOverlayStore(s => s.isMaximized);\r\n  const isQueueOpen = usePlayerOverlayStore(s => s.isQueueOpen);\r\n  const isFullscreen = usePlayerStore(s => s.isFullscreen);\r\n  const miniPlayerIsHidden = useMiniPlayerIsHidden();\r\n  const overlayRef = useRef<HTMLDivElement>(null);\r\n  const {pathname} = useLocation();\r\n  const playerClickHandler = usePlayerClickHandler();\r\n  const haveVideo = usePlayerStore(\r\n    s => s.providerApi != null && s.providerName !== 'htmlAudio',\r\n  );\r\n  const previousPathname = usePrevious(pathname);\r\n  const cuedTrack = useCuedTrack();\r\n\r\n  // close overlay when route changes\r\n  useEffect(() => {\r\n    if (isMaximized && previousPathname && pathname !== previousPathname) {\r\n      playerOverlayState.toggle();\r\n    }\r\n  }, [pathname, previousPathname, isMaximized]);\r\n\r\n  useEffect(() => {\r\n    if (!isMaximized) return;\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        playerOverlayState.toggle();\r\n      }\r\n    };\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, [isMaximized]);\r\n\r\n  return (\r\n    <div\r\n      ref={overlayRef}\r\n      className={clsx(\r\n        'fixed right-0 bg outline-none transition-all',\r\n        miniPlayerIsHidden && !isMaximized && 'hidden',\r\n        isMaximized\r\n          ? 'player-overlay-bg bottom-0 flex h-full w-full flex-col pb-50'\r\n          : 'bottom-96 right-0 h-[213px] w-256',\r\n      )}\r\n    >\r\n      {isMaximized && (\r\n        <div className=\"mb-10 flex flex-shrink-0 items-center p-10\">\r\n          <IconButton\r\n            iconSize=\"lg\"\r\n            className=\"mr-auto\"\r\n            onClick={() => playerOverlayState.toggle()}\r\n          >\r\n            <KeyboardArrowDownIcon />\r\n          </IconButton>\r\n          {isMobile && <LyricsButton />}\r\n          {isMobile && <DownloadTrackButton />}\r\n          <IconButton\r\n            onClick={() => playerOverlayState.toggleQueue()}\r\n            color={isQueueOpen ? 'primary' : undefined}\r\n          >\r\n            <MediaQueueListIcon />\r\n          </IconButton>\r\n          <FullscreenButton overlayRef={overlayRef} />\r\n        </div>\r\n      )}\r\n      <div\r\n        onClick={() => {\r\n          // native video will be put into fullscreen, it will already handle click and double click events\r\n          if (!isFullscreen) {\r\n            playerClickHandler();\r\n          }\r\n        }}\r\n        className={clsx(\r\n          'relative min-h-0 max-w-full flex-auto',\r\n          isMaximized ? 'mx-auto mt-auto px-14' : 'h-full w-full',\r\n          isMaximized && haveVideo ? 'aspect-video' : 'aspect-square max-h-400',\r\n        )}\r\n      >\r\n        <PlayerPoster\r\n          className=\"absolute inset-0\"\r\n          fallback={\r\n            cuedTrack ? (\r\n              <TrackImage\r\n                className=\"h-full w-full\"\r\n                background=\"bg-[#f5f5f5] dark:bg-[#2c2c35]\"\r\n                track={cuedTrack}\r\n              />\r\n            ) : undefined\r\n          }\r\n        />\r\n        <div\r\n          className={haveVideo ? 'h-full w-full flex-auto bg-black' : undefined}\r\n        >\r\n          <PlayerOutlet className=\"h-full w-full\" />\r\n        </div>\r\n      </div>\r\n      {isMaximized && (\r\n        <Fragment>\r\n          <QueuedTrack />\r\n          <PlaybackControls className=\"container mx-auto mb-auto flex-shrink-0 px-14\" />\r\n        </Fragment>\r\n      )}\r\n      {isMaximized && isQueueOpen && <PlayerQueue />}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FullscreenButtonProps {\r\n  overlayRef: MutableRefObject<HTMLDivElement | null>;\r\n}\r\nfunction FullscreenButton({overlayRef}: FullscreenButtonProps) {\r\n  const playerReady = usePlayerStore(s => s.providerReady);\r\n  return (\r\n    <IconButton\r\n      className={clsx(\r\n        'ml-12 flex-shrink-0 max-md:hidden',\r\n        !fscreen.fullscreenEnabled && 'hidden',\r\n      )}\r\n      disabled={!playerReady}\r\n      onClick={() => {\r\n        if (!overlayRef.current) return;\r\n        if (fscreen.fullscreenElement) {\r\n          fscreen.exitFullscreen();\r\n        } else {\r\n          fscreen.requestFullscreen(overlayRef.current);\r\n        }\r\n      }}\r\n    >\r\n      <MediaFullscreenIcon />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nfunction QueuedTrack() {\r\n  const track = useCuedTrack();\r\n\r\n  if (!track) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto my-40 flex flex-shrink-0 items-center justify-center gap-34 px-14 md:my-60\">\r\n      <LikeIconButton likeable={track} />\r\n      <div className=\"min-w-0 text-center\">\r\n        <div className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-base\">\r\n          <TrackLink track={track} />\r\n        </div>\r\n        <div className=\"text-sm text-muted\">\r\n          <ArtistLinks artists={track.artists} />\r\n        </div>\r\n      </div>\r\n      <DialogTrigger type=\"popover\" mobileType=\"tray\">\r\n        <IconButton>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <TrackContextDialog tracks={[track]} />\r\n      </DialogTrigger>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlayerQueue() {\r\n  const queue = usePlayerStore(s => s.shuffledQueue);\r\n  const tracks = queue.map(item => item.meta);\r\n  return (\r\n    <div className=\"fixed bottom-0 left-0 right-0 top-70 overflow-y-auto bg-inherit px-14 md:px-50\">\r\n      <TrackTable\r\n        tracks={tracks}\r\n        queueGroupId={queue[0]?.groupId}\r\n        renderRowAs={PlayerQueueRow}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlayerQueueRow({item, children, ...domProps}: RowElementProps<Track>) {\r\n  const queue = usePlayerStore(s => s.shuffledQueue);\r\n  const {selectedRows} = useContext(TableContext);\r\n  const queueItems = useMemo(() => {\r\n    return selectedRows\r\n      .map(trackId => queue.find(item => item.meta.id === trackId))\r\n      .filter(t => !!t) as MediaItem[];\r\n  }, [queue, selectedRows]);\r\n\r\n  const row = <div {...domProps}>{children}</div>;\r\n  if (item.isPlaceholder) {\r\n    return row;\r\n  }\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"popover\"\r\n      mobileType=\"tray\"\r\n      triggerOnContextMenu\r\n      placement=\"bottom-start\"\r\n    >\r\n      {row}\r\n      <QueueTrackContextDialog queueItems={queueItems} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {Outlet} from 'react-router-dom';\r\nimport {PlayerContext} from '@common/player/player-context';\r\nimport {playerStoreOptions} from '@app/web-player/state/player-store-options';\r\nimport React, {Fragment} from 'react';\r\nimport {QueueSidenav} from '@app/web-player/layout/queue/queue-sidenav';\r\nimport clsx from 'clsx';\r\nimport {useMediaQuery} from '@common/utils/hooks/use-media-query';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {MobilePlayerControls} from '@app/web-player/player-controls/mobile-player-controls';\r\nimport {DesktopPlayerControls} from '@app/web-player/player-controls/desktop-player-controls';\r\nimport {PlayerOverlay} from '@app/web-player/overlay/player-overlay';\r\n\r\nimport {PlayerNavbarLayout} from '@app/web-player/layout/player-navbar-layout';\r\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\r\nimport {SidedavFrontend} from '@app/web-player/layout/sidenav-frontend';\r\nimport {Sidenav} from '@app/web-player/layout/sidenav';\r\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\nexport function WebPlayerLayout() {\r\n  const {player} = useSettings();\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  const content = isMobile ? (\r\n    <Fragment>\r\n      <Main className=\"h-screen\" />\r\n      <MobilePlayerControls />\r\n    </Fragment>\r\n  ) : (\r\n    <DashboardLayout\r\n      name=\"web-player\"\r\n      initialRightSidenavStatus={player?.hide_queue ? 'closed' : 'open'}\r\n    >\r\n      <PlayerNavbarLayout\r\n          size=\"sm\"\r\n          menuPosition=\"web-player\"\r\n          className=\"flex-shrink-0\"\r\n        />\r\n      <SidedavFrontend position=\"left\" display=\"block\">\r\n        <Sidenav />\r\n      </SidedavFrontend>\r\n      <DashboardContent>\r\n        <Main />\r\n      </DashboardContent>\r\n      <RightSidenav />\r\n      <DesktopPlayerControls />\r\n    </DashboardLayout>\r\n  );\r\n\r\n  return (\r\n    <PlayerContext id=\"web-player\" options={playerStoreOptions}>\r\n      {content}\r\n      <PlayerOverlay />\r\n    </PlayerContext>\r\n  );\r\n}\r\n\r\ninterface MainProps {\r\n  className?: string;\r\n}\r\n\r\nfunction Main({className}: MainProps) {\r\n  return (\r\n    <main\r\n      className={clsx(\r\n        'stable-scrollbar relative overflow-x-hidden',\r\n        className,\r\n        // mobile player controls are fixed to bottom of screen,\r\n        // make sure we can scroll to the bottom of the page\r\n        'pb-124 md:pb-0',\r\n      )}\r\n    >\r\n      <div className=\"web-player-container mx-auto min-h-full p-16 @container md:p-30\">\r\n        <Outlet />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction RightSidenav() {\r\n  const isOverlay = useMediaQuery('(max-width: 1280px)');\r\n  const hideQueue = usePlayerStore(s => !s.shuffledQueue.length);\r\n  return (\r\n    <SidedavFrontend\r\n      position=\"right\"\r\n      size=\"w-256\"\r\n      mode={isOverlay ? 'overlay' : undefined}\r\n      overlayPosition=\"absolute\"\r\n      display=\"block\"\r\n      forceClosed={hideQueue}\r\n    >\r\n      <QueueSidenav />\r\n    </SidedavFrontend>\r\n  );\r\n}\r\n","import React, {cloneElement, ReactElement, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface MediaPageHeaderLayoutProps {\r\n  className?: string;\r\n  image: ReactElement<{size: string; className?: string}>;\r\n  title: ReactNode;\r\n  subtitle?: ReactNode;\r\n  description?: ReactNode;\r\n  actionButtons?: ReactNode;\r\n  centerItems?: boolean;\r\n  footer?: ReactNode;\r\n}\r\nexport function MediaPageHeaderLayout({\r\n  className,\r\n  image,\r\n  title,\r\n  subtitle,\r\n  description,\r\n  actionButtons,\r\n  footer,\r\n  centerItems = false,\r\n}: MediaPageHeaderLayoutProps) {\r\n  return (\r\n    <header\r\n      className={clsx(\r\n        'flex flex-col md:flex-row gap-24 md:gap-34',\r\n        centerItems && 'items-center',\r\n        className\r\n      )}\r\n    >\r\n      {cloneElement(image, {\r\n        size: image.props.size || 'w-256 h-256',\r\n        className: clsx(image.props.className, 'mx-auto flex-shrink-0'),\r\n      })}\r\n      <div className=\"flex-auto min-w-0\">\r\n        <h1 className=\"text-2xl md:text-4xl font-semibold mb-14 text-center md:text-start\">\r\n          {title}\r\n        </h1>\r\n        {subtitle && <div className=\"w-max mx-auto md:mx-0\">{subtitle}</div>}\r\n        {description ? (\r\n          <div className=\"text-muted mt-18 md:mt-26 text-sm w-max mx-auto md:mx-0\">\r\n            {description}\r\n          </div>\r\n        ) : null}\r\n        <div className=\"mt-30\">{actionButtons}</div>\r\n        {footer ? <div className=\"mt-30\">{footer}</div> : null}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\ninterface ActionButtonClassNameProps {\r\n  isFirst?: boolean;\r\n}\r\nexport function actionButtonClassName({\r\n  isFirst,\r\n}: ActionButtonClassNameProps = {}) {\r\n  return clsx('min-h-40', isFirst ? 'min-w-128 mr-20' : 'mr-10 min-w-100');\r\n}\r\n","import {isAbsoluteUrl} from '../utils/urls/is-absolute-url';\r\nimport memoize from 'nano-memoize';\r\nimport clsx from 'clsx';\r\n\r\ninterface RemoteFaviconProps {\r\n  url: string;\r\n  className?: string;\r\n  size?: string;\r\n  alt?: string;\r\n}\r\nexport function RemoteFavicon({\r\n  url,\r\n  className,\r\n  size = 'w-16 h-16',\r\n  alt,\r\n}: RemoteFaviconProps) {\r\n  if (!url) {\r\n    return null;\r\n  }\r\n\r\n  const src = getFaviconSrc(url);\r\n\r\n  return (\r\n    <img\r\n      className={clsx(size, className)}\r\n      src={getFaviconSrc(url)}\r\n      alt={alt || `${src} favicon`}\r\n    />\r\n  );\r\n}\r\n\r\nconst getFaviconSrc = memoize((url: string): string => {\r\n  if (url.includes('youtube')) {\r\n    return 'https://www.youtube.com/s/desktop/ca54e1bd/img/favicon.ico';\r\n  }\r\n\r\n  // relative url to current site\r\n  if (!isAbsoluteUrl(url)) {\r\n    url = `${window.location.protocol}//${window.location.host}`;\r\n  }\r\n  const domain = new URL(url).origin;\r\n  return 'https://www.google.com/s2/favicons?domain=' + domain;\r\n});\r\n","import {UserLink} from '@app/web-player/user-profile/user-link';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {RemoteFavicon} from '@common/ui/remote-favicon';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\n\r\ninterface ProfileLinksProps {\r\n  links?: UserLink[];\r\n}\r\nexport function ProfileLinks({links}: ProfileLinksProps) {\r\n  if (!links?.length) return null;\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      {links.map(link => (\r\n        <Tooltip label={link.title} key={link.url}>\r\n          <IconButton\r\n            size=\"xs\"\r\n            elementType=\"a\"\r\n            href={link.url}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <RemoteFavicon url={link.url} alt={link.title} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import {useMemo} from 'react';\r\nimport linkifyStr from 'linkify-string';\r\n\r\nexport function useLinkifiedString(text: string | null | undefined) {\r\n  return useMemo(() => {\r\n    if (!text) {\r\n      return text;\r\n    }\r\n    return linkifyStr(text, {\r\n      nl2br: true,\r\n      attributes: {rel: 'nofollow'},\r\n    });\r\n  }, [text]);\r\n}\r\n","import {UserProfile} from '@app/web-player/user-profile/user-profile';\r\nimport {UserLink} from '@app/web-player/user-profile/user-link';\r\nimport {ProfileLinks} from '@app/web-player/user-profile/profile-links';\r\nimport {useLinkifiedString} from '@common/utils/hooks/use-linkified-string';\r\n\r\ninterface Props {\r\n  profile?: UserProfile;\r\n  links?: UserLink[];\r\n  shortDescription?: boolean;\r\n}\r\nexport function ProfileDescription({profile, links, shortDescription}: Props) {\r\n  const description = useLinkifiedString(profile?.description) || '';\r\n  if (!profile) return null;\r\n  return (\r\n    <div className=\"min-w-0 text-sm\">\r\n      {profile.description && (\r\n        <div\r\n          className=\"text-secondary max-w-720 rounded bg-alt/80 p-10 dark:bg\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: shortDescription ? description?.slice(0, 300) : description,\r\n          }}\r\n        />\r\n      )}\r\n      {profile.city || profile.country || links?.length ? (\r\n        <div className=\"mt-20 flex items-center justify-between gap-24\">\r\n          {(profile.city || profile.country) && (\r\n            <div className=\"text-secondary rounded bg-alt/80 p-10 dark:bg md:w-max\">\r\n              {profile.city}\r\n              {profile.city && ','} {profile.country}\r\n            </div>\r\n          )}\r\n          <ProfileLinks links={links} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import {Genre} from '@app/web-player/genres/genre';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\r\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {LikeButton} from '@app/web-player/library/like-button';\r\nimport {\r\n  actionButtonClassName,\r\n  MediaPageHeaderLayout,\r\n} from '@app/web-player/layout/media-page-header-layout';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {GenreLink} from '@app/web-player/genres/genre-link';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {ArtistContextDialog} from '@app/web-player/artists/artist-context-dialog';\r\nimport {ProfileDescription} from '@app/web-player/user-profile/profile-description';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {MediaItemStats} from '@app/web-player/tracks/media-item-stats';\r\nimport clsx from 'clsx';\r\n\r\ninterface ArtistPageHeaderProps {\r\n  artist: Artist;\r\n}\r\nexport function ArtistPageHeader({artist}: ArtistPageHeaderProps) {\r\n  const {artistPage} = useSettings();\r\n  return (\r\n    <MediaPageHeaderLayout\r\n      centerItems\r\n      image={\r\n        <SmallArtistImage\r\n          showVerifiedBadge\r\n          artist={artist}\r\n          className=\"rounded-full object-cover shadow-lg\"\r\n        />\r\n      }\r\n      title={artist.name}\r\n      subtitle={<GenreList genres={artist.genres} />}\r\n      actionButtons={\r\n        <div className=\"flex items-center justify-center gap-24 md:justify-between\">\r\n          <ActionButtons artist={artist} />\r\n          <MediaItemStats className=\"max-md:hidden\" item={artist} />\r\n        </div>\r\n      }\r\n      footer={\r\n        artistPage.showDescription && (\r\n          <ProfileDescription\r\n            profile={artist.profile}\r\n            links={artist.links}\r\n            shortDescription\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\ninterface GenreListProps {\r\n  genres?: Genre[];\r\n}\r\nfunction GenreList({genres}: GenreListProps) {\r\n  return (\r\n    <ul className=\"flex max-w-620 items-center justify-start gap-14 overflow-hidden overflow-ellipsis whitespace-nowrap text-sm text-muted max-md:hidden\">\r\n      {genres?.slice(0, 5).map(genre => (\r\n        <li key={genre.id}>\r\n          <GenreLink genre={genre} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface ActionButtonsProps {\r\n  artist: Artist;\r\n}\r\nfunction ActionButtons({artist}: ActionButtonsProps) {\r\n  return (\r\n    <div>\r\n      <PlaybackToggleButton\r\n        queueId={queueGroupId(artist)}\r\n        buttonType=\"text\"\r\n        className={actionButtonClassName({isFirst: true})}\r\n      />\r\n      <LikeButton\r\n        likeable={artist}\r\n        className={clsx(actionButtonClassName(), 'max-md:hidden')}\r\n      />\r\n      <DialogTrigger type=\"popover\" mobileType=\"tray\">\r\n        <Button\r\n          variant=\"outline\"\r\n          radius=\"rounded-full\"\r\n          endIcon={<ArrowDropDownIcon />}\r\n          className={actionButtonClassName()}\r\n        >\r\n          <Trans message=\"More\" />\r\n        </Button>\r\n        <ArtistContextDialog artist={artist} />\r\n      </DialogTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import {useMemo, useState} from 'react';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Track} from '@app/web-player/tracks/track';\r\n\r\ninterface TopTracksTableProps {\r\n  tracks?: Track[];\r\n}\r\nexport function TopTracksTable({tracks: initialTracks}: TopTracksTableProps) {\r\n  const [showingAll, setShowingAll] = useState(false);\r\n\r\n  const topTracks = useMemo(() => {\r\n    return {\r\n      all: initialTracks || [],\r\n      sliced: initialTracks?.slice(0, 5) || [],\r\n    };\r\n  }, [initialTracks]);\r\n\r\n  return (\r\n    <div className=\"flex-auto\">\r\n      <h2 className=\"text-muted text-base my-16\">\r\n        <Trans message=\"Popular songs\" />\r\n      </h2>\r\n      <TrackTable\r\n        tracks={showingAll ? topTracks.all : topTracks.sliced}\r\n        hideArtist\r\n        hideAlbum\r\n        hideHeaderRow\r\n      />\r\n      <Button\r\n        radius=\"rounded-full\"\r\n        className=\"mt-20\"\r\n        variant=\"outline\"\r\n        onClick={() => {\r\n          setShowingAll(!showingAll);\r\n        }}\r\n      >\r\n        {showingAll ? (\r\n          <Trans message=\"Show less\" />\r\n        ) : (\r\n          <Trans message=\"Show more\" />\r\n        )}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import {useParams} from 'react-router-dom';\r\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {assignAlbumToTracks} from '@app/web-player/albums/assign-album-to-tracks';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\n\r\nexport type AlbumViewMode = 'list' | 'grid';\r\n\r\nexport const albumListViewPerPage = 5;\r\nexport const albumGridViewPerPage = 25;\r\n\r\nexport function useArtistAlbums(\r\n  initialPage: PaginationResponse<Album> | null,\r\n  viewMode: AlbumViewMode\r\n) {\r\n  const {artistId} = useParams();\r\n\r\n  return useInfiniteData<Album>({\r\n    endpoint: `artists/${artistId}/albums`,\r\n    queryKey: ['artists', +artistId!, 'albums', viewMode],\r\n    paginate: 'simple',\r\n    initialPage,\r\n    transformResponse: response => {\r\n      response.pagination.data = response.pagination.data.map(album =>\r\n        assignAlbumToTracks(album)\r\n      );\r\n      return response;\r\n    },\r\n  });\r\n}\r\n","import {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {AlbumIcon} from '@common/icons/material/Album';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function NoDiscographyMessage() {\r\n  return (\r\n    <IllustratedMessage\r\n      className=\"my-80\"\r\n      imageHeight=\"h-auto\"\r\n      image={<AlbumIcon size=\"xl\" className=\"text-muted\" />}\r\n      title={<Trans message=\"We do not have discography for this artist yet\" />}\r\n    />\r\n  );\r\n}\r\n","import {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {useArtistAlbums} from '@app/web-player/artists/requests/use-artist-albums';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {AlbumLink} from '@app/web-player/albums/album-link';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {NoDiscographyMessage} from '@app/web-player/artists/artist-page/discography-panel/no-discography-message';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {AlbumContextDialog} from '@app/web-player/albums/album-context-dialog';\r\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\r\n\r\ninterface ArtistAlbumsListProps {\r\n  artist: Artist;\r\n  initialAlbums: PaginationResponse<Album> | null;\r\n}\r\nexport function ArtistAlbumsList({initialAlbums}: ArtistAlbumsListProps) {\r\n  const query = useArtistAlbums(initialAlbums, 'list');\r\n  const {isLoading, items} = query;\r\n\r\n  if (!isLoading && !items.length) {\r\n    return <NoDiscographyMessage />;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {items.map(album => (\r\n        <div key={album.id} className=\"mb-40\">\r\n          <div className=\"mb-20 items-center gap-14 md:flex\">\r\n            <AlbumImage\r\n              album={album}\r\n              size=\"w-110 h-110\"\r\n              className=\"flex-shrink-0 rounded object-cover\"\r\n            />\r\n            <div className=\"flex-auto\">\r\n              <h4 className=\"min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap text-lg font-semibold max-md:mt-12\">\r\n                <AlbumLink album={album} />\r\n              </h4>\r\n              {album.release_date && (\r\n                <div className=\"mb-18 mt-2 text-sm text-muted\">\r\n                  <FormattedDate date={album.release_date} />\r\n                </div>\r\n              )}\r\n              <DialogTrigger type=\"popover\" mobileType=\"tray\" offset={10}>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"xs\"\r\n                  radius=\"rounded-full\"\r\n                  endIcon={<ArrowDropDownIcon />}\r\n                >\r\n                  <Trans message=\"More\" />\r\n                </Button>\r\n                <AlbumContextDialog album={album} />\r\n              </DialogTrigger>\r\n            </div>\r\n          </div>\r\n          <AlbumTrackTable album={album} />\r\n        </div>\r\n      ))}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </section>\r\n  );\r\n}\r\n\r\ninterface AlbumTrackTableProps {\r\n  album: Album;\r\n}\r\nfunction AlbumTrackTable({album}: AlbumTrackTableProps) {\r\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(\r\n    album.tracks,\r\n  );\r\n  return (\r\n    <TrackTable\r\n      tracks={data}\r\n      hideArtist\r\n      hideAlbum\r\n      hideTrackImage\r\n      sortDescriptor={sortDescriptor}\r\n      onSortChange={onSortChange}\r\n      queueGroupId={queueGroupId(album, '*', sortDescriptor)}\r\n    />\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\r\nimport {useArtistAlbums} from '@app/web-player/artists/requests/use-artist-albums';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {NoDiscographyMessage} from '@app/web-player/artists/artist-page/discography-panel/no-discography-message';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\n\r\ninterface ArtistAlbumsGridProps {\r\n  artist: Artist;\r\n  initialAlbums: PaginationResponse<Album> | null;\r\n}\r\nexport function ArtistAlbumsGrid({initialAlbums}: ArtistAlbumsGridProps) {\r\n  const query = useArtistAlbums(initialAlbums, 'grid');\r\n\r\n  if (!query.isLoading && !query.items.length) {\r\n    return <NoDiscographyMessage />;\r\n  }\r\n\r\n  return (\r\n    <ContentGrid>\r\n      {query.items.map(album => (\r\n        <AlbumGridItem key={album.id} album={album} />\r\n      ))}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </ContentGrid>\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {Link} from 'react-router-dom';\r\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\r\nimport {TopTracksTable} from '@app/web-player/artists/artist-page/discography-panel/top-tracks-table';\r\nimport {ArtistAlbumsList} from '@app/web-player/artists/artist-page/discography-panel/artist-albums-list';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ViewAgendaIcon} from '@common/icons/material/ViewAgenda';\r\nimport {GridViewIcon} from '@common/icons/material/GridView';\r\nimport {ArtistAlbumsGrid} from '@app/web-player/artists/artist-page/discography-panel/artist-albums-grid';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {\r\n  albumGridViewPerPage,\r\n  albumListViewPerPage,\r\n} from '@app/web-player/artists/requests/use-artist-albums';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport React from 'react';\r\nimport {\r\n  albumLayoutKey,\r\n  UseArtistResponse,\r\n} from '@app/web-player/artists/requests/use-artist';\r\nimport {useCookie} from '@common/utils/hooks/use-cookie';\r\n\r\ninterface DiscographyTabProps {\r\n  data: UseArtistResponse;\r\n}\r\nexport function DiscographyTab({\r\n  data: {artist, albums, selectedAlbumLayout},\r\n}: DiscographyTabProps) {\r\n  const {player} = useSettings();\r\n  const [viewMode, setViewMode] = useCookie(\r\n    albumLayoutKey,\r\n    selectedAlbumLayout || player?.default_artist_view || 'list',\r\n  );\r\n  return (\r\n    <div>\r\n      <Header artist={artist} />\r\n      <AdHost slot=\"artist_bottom\" className=\"mt-34\" />\r\n      <div className=\"mt-44\">\r\n        <div className=\"mb-30 flex items-center border-b pb-4 text-muted\">\r\n          <h2 className=\"mr-auto text-base\">\r\n            <Trans message=\"Albums\" />\r\n          </h2>\r\n          <Tooltip label={<Trans message=\"List view\" />}>\r\n            <IconButton\r\n              className=\"ml-24 flex-shrink-0\"\r\n              color={viewMode === 'list' ? 'primary' : undefined}\r\n              onClick={() => setViewMode('list')}\r\n            >\r\n              <ViewAgendaIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip label={<Trans message=\"Grid view\" />}>\r\n            <IconButton\r\n              className=\"flex-shrink-0\"\r\n              color={viewMode === 'grid' ? 'primary' : undefined}\r\n              onClick={() => setViewMode('grid')}\r\n            >\r\n              <GridViewIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n        {viewMode === 'list' ? (\r\n          <ArtistAlbumsList\r\n            artist={artist}\r\n            initialAlbums={\r\n              albums?.per_page === albumListViewPerPage ? albums : null\r\n            }\r\n          />\r\n        ) : (\r\n          <ArtistAlbumsGrid\r\n            artist={artist}\r\n            initialAlbums={\r\n              albums?.per_page === albumGridViewPerPage ? albums : null\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  artist: Artist;\r\n}\r\nfunction Header({artist}: HeaderProps) {\r\n  if (!artist.top_tracks?.length) return null;\r\n  const similarArtists = artist.similar?.slice(0, 4) || [];\r\n\r\n  return (\r\n    <div className=\"flex items-start gap-30\">\r\n      <TopTracksTable tracks={artist.top_tracks} />\r\n      {similarArtists.length ? (\r\n        <div className=\"w-1/3 max-w-320 max-md:hidden\">\r\n          <h2 className=\"my-16 text-base text-muted\">\r\n            <Trans message=\"Similar artists\" />\r\n          </h2>\r\n          <div>\r\n            {similarArtists.map(similar => (\r\n              <Link\r\n                key={similar.id}\r\n                to={getArtistLink(similar)}\r\n                className=\"mb-4 flex cursor-pointer items-center gap-14 rounded p-4 hover:bg-hover\"\r\n              >\r\n                <SmallArtistImage\r\n                  artist={similar}\r\n                  className=\"h-44 w-44 rounded-full object-cover\"\r\n                />\r\n                <div className=\"text-sm\">{similar.name}</div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\n\r\ninterface SimilarArtistsTabProps {\r\n  artist: Artist;\r\n}\r\nexport function SimilarArtistsPanel({artist}: SimilarArtistsTabProps) {\r\n  return (\r\n    <ContentGrid>\r\n      {artist.similar?.map(similar => (\r\n        <ArtistGridItem key={similar.id} artist={similar} />\r\n      ))}\r\n    </ContentGrid>\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {ImageZoomDialog} from '@common/ui/overlays/dialog/image-zoom-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {useLinkifiedString} from '@common/utils/hooks/use-linkified-string';\r\nimport {useMemo} from 'react';\r\n\r\ninterface ArtistAboutTabProps {\r\n  artist: Artist;\r\n}\r\nexport function ArtistAboutPanel({artist}: ArtistAboutTabProps) {\r\n  const description = useLinkifiedString(artist.profile?.description);\r\n\r\n  const images = useMemo(() => {\r\n    return artist.profile_images?.map(img => img.url) || [];\r\n  }, [artist.profile_images]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"grid grid-cols-3 lg:grid-cols-4 gap-24\">\r\n        {images.map((src, index) => (\r\n          <DialogTrigger key={src} type=\"modal\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"outline-none focus-visible:ring cursor-zoom-in rounded overflow-hidden hover:scale-105 transition\"\r\n            >\r\n              <img\r\n                className=\"aspect-video object-cover rounded shadow cursor-zoom-in\"\r\n                src={src}\r\n                alt=\"\"\r\n              />\r\n            </button>\r\n            <ImageZoomDialog images={images} defaultActiveIndex={index} />\r\n          </DialogTrigger>\r\n        ))}\r\n      </div>\r\n      <div\r\n        className=\"py-24 text-sm whitespace-pre-wrap\"\r\n        dangerouslySetInnerHTML={{__html: description || ''}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\r\n\r\ninterface Props {\r\n  artist: Artist;\r\n  initialTracks?: PaginationResponse<Track>;\r\n}\r\nexport function ArtistTracksPanel({artist, initialTracks}: Props) {\r\n  const query = useInfiniteData<Track>({\r\n    queryKey: ['tracks', artist.id],\r\n    endpoint: `artists/${artist.id}/tracks`,\r\n    initialPage: initialTracks,\r\n  });\r\n\r\n  if (query.isLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" screen={false} />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No tracks yet\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Follow :artist for updates on their latest releases.\"\r\n            values={{artist: artist.name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return <TrackList query={query} />;\r\n}\r\n","import {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {TrackSeekbar} from '@app/web-player/player-controls/seekbar/track-seekbar';\r\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {CommentBarContextProvider} from '@app/web-player/tracks/waveform/comment-bar-context';\r\nimport React, {Fragment, memo} from 'react';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {GenreLink} from '@app/web-player/genres/genre-link';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {RepeatIcon} from '@common/icons/material/Repeat';\r\nimport clsx from 'clsx';\r\nimport {User} from '@common/auth/user';\r\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\r\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {AlbumLink} from '@app/web-player/albums/album-link';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {usePlayerActions} from '@common/player/hooks/use-player-actions';\r\nimport {tracksToMediaItems} from '@app/web-player/tracks/utils/track-to-media-item';\r\nimport {WaveformWithComments} from '@app/web-player/tracks/track-list/track-list-item';\r\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\r\n\r\ninterface Props {\r\n  album: Album;\r\n  reposter?: User;\r\n  className?: string;\r\n  hideArtwork?: boolean;\r\n  hideActions?: boolean;\r\n  linksInNewTab?: boolean;\r\n  maxHeight?: string;\r\n}\r\nexport const AlbumListItem = memo(\r\n  ({\r\n    album,\r\n    reposter,\r\n    className,\r\n    hideArtwork,\r\n    hideActions,\r\n    linksInNewTab,\r\n    maxHeight,\r\n  }: Props) => {\r\n    const queueId = queueGroupId(album);\r\n    const {player} = useSettings();\r\n    const {managesAlbum} = useAlbumPermissions(album);\r\n    const tracks = album?.tracks || [];\r\n\r\n    const media = usePlayerStore(s => s.cuedMedia);\r\n    const activeTrack = tracks.find(t => t.id === media?.meta.id) || tracks[0];\r\n\r\n    const showWave =\r\n      player?.seekbar_type === 'waveform' &&\r\n      trackIsLocallyUploaded(activeTrack);\r\n\r\n    return (\r\n      <div\r\n        key={album.id}\r\n        className={clsx(\r\n          'overflow-hidden',\r\n          !hideArtwork && 'md:flex md:gap-24',\r\n          className,\r\n          maxHeight,\r\n        )}\r\n      >\r\n        {!hideArtwork && (\r\n          <AlbumImage\r\n            album={album}\r\n            className=\"flex-shrink-0 rounded max-md:hidden\"\r\n            size=\"w-184 h-184\"\r\n          />\r\n        )}\r\n        <div\r\n          className={clsx(\r\n            'min-w-0 flex-auto',\r\n            maxHeight && 'flex h-full flex-col',\r\n          )}\r\n        >\r\n          <div className=\"flex-shrink-0\">\r\n            <div className=\"flex items-center gap-14\">\r\n              <PlaybackToggleButton\r\n                queueId={queueId}\r\n                track={activeTrack}\r\n                tracks={album.tracks}\r\n                buttonType=\"icon\"\r\n                color=\"primary\"\r\n                variant=\"flat\"\r\n                radius=\"rounded-full\"\r\n                equalizerColor=\"white\"\r\n              />\r\n              <div>\r\n                <div className=\"flex items-center gap-6 text-sm text-muted\">\r\n                  <ArtistLinks\r\n                    artists={album.artists}\r\n                    target={linksInNewTab ? '_blank' : undefined}\r\n                  />\r\n                  {reposter && (\r\n                    <Fragment>\r\n                      <RepeatIcon size=\"xs\" />\r\n                      <UserProfileLink\r\n                        user={reposter}\r\n                        target={linksInNewTab ? '_blank' : undefined}\r\n                      />\r\n                    </Fragment>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <AlbumLink\r\n                    album={album}\r\n                    target={linksInNewTab ? '_blank' : undefined}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"ml-auto text-sm\">\r\n                <FormattedRelativeTime date={album.created_at} />\r\n                {album.genres?.length ? (\r\n                  <Chip className=\"mt-6 w-max\" size=\"xs\">\r\n                    <GenreLink\r\n                      genre={album.genres[0]}\r\n                      target={linksInNewTab ? '_blank' : undefined}\r\n                    />\r\n                  </Chip>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"my-20\">\r\n              {showWave ? (\r\n                <CommentBarContextProvider disableCommenting={hideActions}>\r\n                  <WaveformWithComments\r\n                    track={activeTrack}\r\n                    queue={album.tracks}\r\n                  />\r\n                </CommentBarContextProvider>\r\n              ) : (\r\n                <TrackSeekbar track={activeTrack} queue={album.tracks} />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-auto overflow-y-auto\">\r\n            {tracks.map((track, index) => {\r\n              const isLast = index - 1 === album.tracks?.length;\r\n              const isActive = activeTrack?.id === track.id;\r\n              return (\r\n                <TrackItem\r\n                  key={track.id}\r\n                  track={track}\r\n                  album={album}\r\n                  index={index}\r\n                  isLast={isLast}\r\n                  isActive={isActive}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {!hideActions && (\r\n            <TrackActionsBar\r\n              className=\"mt-20\"\r\n              item={album}\r\n              managesItem={managesAlbum}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface TrackItemProps {\r\n  track: Track;\r\n  album: Album;\r\n  index: number;\r\n  isLast: boolean;\r\n  isActive: boolean;\r\n}\r\nfunction TrackItem({track, index, isLast, isActive, album}: TrackItemProps) {\r\n  const playerActions = usePlayerActions();\r\n  return (\r\n    <div\r\n      key={track.id}\r\n      className={clsx(\r\n        'flex cursor-pointer items-center gap-8 p-8 text-[13px] hover:bg-hover',\r\n        !isLast && 'border-b',\r\n        isActive && 'text-primary',\r\n      )}\r\n      onClick={() => {\r\n        if (album.tracks?.length) {\r\n          playerActions.overrideQueueAndPlay(\r\n            tracksToMediaItems(album.tracks),\r\n            index,\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <TrackImage track={track} size=\"w-20 h-20\" className=\"rounded\" />\r\n      <div>{index + 1}</div>\r\n      <div className=\"mx-10 flex-auto\">{track.name}</div>\r\n      {track.plays && track.plays > 0 ? (\r\n        <Fragment>\r\n          <PlayArrowFilledIcon size=\"xs\" className=\"ml-auto text-muted\" />\r\n          <div className=\"text-muted\">\r\n            <FormattedNumber value={track.plays} />\r\n          </div>\r\n        </Fragment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport React from 'react';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {UseInfiniteDataResult} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\r\nimport {AlbumListItem} from '@app/web-player/albums/album-list/album-list-item';\r\n\r\ninterface Props {\r\n  albums?: Album[];\r\n  query?: UseInfiniteDataResult<Album>;\r\n}\r\nexport function AlbumList({albums, query}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  if (!albums && query) {\r\n    albums = query.items;\r\n  } else {\r\n    albums = [];\r\n  }\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <div>\r\n        <ContentGrid>\r\n          {albums.map(album => (\r\n            <AlbumGridItem album={album} key={album.id} />\r\n          ))}\r\n        </ContentGrid>\r\n        {query && <InfiniteScrollSentinel query={query} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {albums.map(album => (\r\n        <AlbumListItem key={album.id} album={album} className=\"mb-40\" />\r\n      ))}\r\n      {query && <InfiniteScrollSentinel query={query} />}\r\n    </div>\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {AlbumIcon} from '@common/icons/material/Album';\r\nimport {AlbumList} from '@app/web-player/albums/album-list/album-list';\r\n\r\ninterface Props {\r\n  artist: Artist;\r\n}\r\nexport function ArtistAlbumsPanel({artist}: Props) {\r\n  const query = useInfiniteData<Album>({\r\n    queryKey: ['albums', artist.id],\r\n    endpoint: `artists/${artist.id}/albums`,\r\n  });\r\n\r\n  if (query.isInitialLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<AlbumIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No albums yet\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Follow :artist for updates on their latest releases.\"\r\n            values={{artist: artist.name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return <AlbumList query={query} />;\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {useSearchParams} from 'react-router-dom';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {useMemo} from 'react';\r\nimport {artistPageTabs} from '@app/web-player/artists/artist-page-tabs';\r\n\r\nexport function useArtistPageTabs(artist: Artist) {\r\n  const [searchParams] = useSearchParams();\r\n  const {artistPage} = useSettings();\r\n\r\n  return useMemo(() => {\r\n    const haveSimilar = artist.similar?.length;\r\n    const haveBio =\r\n      artist.profile_images?.length || artist.profile?.description;\r\n    const activeTabs = artistPage?.tabs?.filter(tab => {\r\n      if (!tab.active) {\r\n        return false;\r\n      }\r\n      if (tab.id === artistPageTabs.similar && !haveSimilar) {\r\n        return false;\r\n      }\r\n      if (tab.id === artistPageTabs.about && !haveBio) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    const selectedTabId =\r\n      artistPageTabs[searchParams.get('tab') as keyof typeof artistPageTabs];\r\n    const i = activeTabs?.findIndex(t => t.id === selectedTabId);\r\n    const selectedIndex = i > -1 ? i : 0;\r\n    return {\r\n      selectedIndex,\r\n      activeTabs,\r\n    };\r\n  }, [artist, artistPage.tabs, searchParams]);\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {User} from '@common/auth/user';\r\n\r\ninterface Response extends BackendResponse {\r\n  ids: number[];\r\n}\r\n\r\nexport function useFollowedUsers() {\r\n  const {user} = useAuth();\r\n  return useQuery({\r\n    queryKey: ['users', 'followed', 'ids'],\r\n    queryFn: () => fetchIds(),\r\n    enabled: !!user,\r\n  });\r\n}\r\n\r\nexport function useIsUserFollowing(user: User) {\r\n  const {data, isLoading} = useFollowedUsers();\r\n  return {\r\n    isLoading,\r\n    isFollowing: !!data?.ids.includes(user.id),\r\n  };\r\n}\r\n\r\nfunction fetchIds() {\r\n  return apiClient\r\n    .get<Response>(`users/me/followed-users/ids`)\r\n    .then(response => response.data);\r\n}\r\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {User} from '@common/auth/user';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  user: User;\r\n}\r\n\r\nexport function useFollowUser() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => followUser(payload),\r\n    onSuccess: async (response, {user}) => {\r\n      await queryClient.invalidateQueries({queryKey: ['users']});\r\n      toast(message('Following :name', {values: {name: user.display_name}}));\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction followUser({user}: Payload): Promise<Response> {\r\n  return apiClient.post(`users/${user.id}/follow`).then(r => r.data);\r\n}\r\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {User} from '@common/auth/user';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  user: User;\r\n}\r\n\r\nexport function useUnfollowUser() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => unfollowUser(payload),\r\n    onSuccess: async (response, {user}) => {\r\n      await queryClient.invalidateQueries({queryKey: ['users']});\r\n      toast(\r\n        message('Stopped following :name', {values: {name: user.display_name}}),\r\n      );\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction unfollowUser({user}: Payload): Promise<Response> {\r\n  return apiClient.post(`users/${user.id}/unfollow`).then(r => r.data);\r\n}\r\n","import {Button, ButtonProps} from '@common/ui/buttons/button';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {User} from '@common/auth/user';\r\nimport {useIsUserFollowing} from '@common/users/queries/use-followed-users';\r\nimport {useFollowUser} from '@common/users/queries/use-follow-user';\r\nimport {useUnfollowUser} from '@common/users/queries/use-unfollow-user';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props extends Omit<ButtonProps, 'onClick' | 'disabled'> {\r\n  user: User;\r\n  minWidth?: string | null;\r\n}\r\nexport function FollowButton({\r\n  user,\r\n  className,\r\n  minWidth = 'min-w-82',\r\n  ...buttonProps\r\n}: Props) {\r\n  const {user: currentUser} = useAuth();\r\n  const {isFollowing, isLoading} = useIsUserFollowing(user);\r\n  const followUser = useFollowUser();\r\n  const unfollowUser = useUnfollowUser();\r\n\r\n  const mergedClassName = clsx(className, minWidth);\r\n\r\n  if (isFollowing) {\r\n    return (\r\n      <Button\r\n        {...buttonProps}\r\n        className={mergedClassName}\r\n        onClick={() => unfollowUser.mutate({user})}\r\n        disabled={\r\n          !currentUser ||\r\n          currentUser?.id === user.id ||\r\n          unfollowUser.isPending ||\r\n          isLoading\r\n        }\r\n      >\r\n        <Trans message=\"Unfollow\" />\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      {...buttonProps}\r\n      className={mergedClassName}\r\n      onClick={() => followUser.mutate({user})}\r\n      disabled={\r\n        !currentUser ||\r\n        currentUser?.id === user.id ||\r\n        followUser.isPending ||\r\n        isLoading\r\n      }\r\n    >\r\n      <Trans message=\"Follow\" />\r\n    </Button>\r\n  );\r\n}\r\n","import {User} from '@common/auth/user';\r\nimport {UserImage} from '@app/web-player/users/user-image';\r\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {FollowButton} from '@common/users/follow-button';\r\n\r\ninterface Props {\r\n  follower: User;\r\n}\r\nexport function FollowerListItem({follower}: Props) {\r\n  return (\r\n    <div\r\n      key={follower.id}\r\n      className=\"mb-16 flex items-center gap-16 border-b pb-16\"\r\n    >\r\n      <UserImage user={follower} className=\"h-64 w-64 rounded\" />\r\n      <div className=\"text-sm\">\r\n        <UserProfileLink user={follower} />\r\n        {follower.followers_count && follower.followers_count > 0 ? (\r\n          <div className=\"text-xs text-muted\">\r\n            <Trans\r\n              message=\"[one 1 followers|other :count followers]\"\r\n              values={{count: follower.followers_count}}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <FollowButton\r\n        user={follower}\r\n        variant=\"outline\"\r\n        radius=\"rounded-full\"\r\n        className=\"ml-auto flex-shrink-0\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {Artist} from '@app/web-player/artists/artist';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {User} from '@common/auth/user';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport React from 'react';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {BookmarkBorderIcon} from '@common/icons/material/BookmarkBorder';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {FollowerListItem} from '@app/web-player/artists/artist-page/followers-panel/follower-list-item';\r\n\r\ninterface Props {\r\n  artist: Artist;\r\n}\r\nexport function ArtistFollowersPanel({artist}: Props) {\r\n  const query = useInfiniteData<User>({\r\n    queryKey: ['artists', artist.id, 'followers'],\r\n    endpoint: `artists/${artist.id}/followers`,\r\n  });\r\n\r\n  if (query.isInitialLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<BookmarkBorderIcon size=\"lg\" className=\"text-muted\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Seems like no one is following :name yet.\"\r\n            values={{name: artist.name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {query.items.map(follower => (\r\n        <FollowerListItem key={follower.id} follower={follower} />\r\n      ))}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n","import {Link} from 'react-router-dom';\r\nimport {artistPageTabs} from '@app/web-player/artists/artist-page-tabs';\r\nimport {Tabs} from '@common/ui/tabs/tabs';\r\nimport {TabList} from '@common/ui/tabs/tab-list';\r\nimport {Tab} from '@common/ui/tabs/tab';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\r\nimport {DiscographyTab} from '@app/web-player/artists/artist-page/discography-panel/discography-tab';\r\nimport {SimilarArtistsPanel} from '@app/web-player/artists/artist-page/similar-artists-panel';\r\nimport {ArtistAboutPanel} from '@app/web-player/artists/artist-page/artist-about-panel';\r\nimport {ArtistTracksPanel} from '@app/web-player/artists/artist-page/artist-tracks-panel';\r\nimport {ArtistAlbumsPanel} from '@app/web-player/artists/artist-page/artist-albums-panel';\r\nimport React from 'react';\r\nimport {UseArtistResponse} from '@app/web-player/artists/requests/use-artist';\r\nimport {useArtistPageTabs} from '@app/web-player/artists/artist-page/use-artist-page-tabs';\r\nimport {ArtistFollowersPanel} from '@app/web-player/artists/artist-page/artist-followers-panel';\r\n\r\ninterface Props {\r\n  data: UseArtistResponse;\r\n}\r\nexport function ArtistPageTabs({data}: Props) {\r\n  const {selectedIndex, activeTabs} = useArtistPageTabs(data.artist);\r\n  return (\r\n    <Tabs className=\"mt-24 md:mt-48\" selectedTab={selectedIndex} isLazy>\r\n      <TabList>\r\n        {activeTabs.map(tab => {\r\n          switch (tab.id) {\r\n            case artistPageTabs.discography:\r\n              return (\r\n                <Tab elementType={Link} key={artistPageTabs.discography}>\r\n                  <Trans message=\"Discography\" />\r\n                </Tab>\r\n              );\r\n            case artistPageTabs.similar:\r\n              return (\r\n                <Tab\r\n                  elementType={Link}\r\n                  to={{search: '?tab=similar'}}\r\n                  key={artistPageTabs.similar}\r\n                >\r\n                  <Trans message=\"Similar artists\" />\r\n                </Tab>\r\n              );\r\n            case artistPageTabs.about:\r\n              return (\r\n                <Tab\r\n                  elementType={Link}\r\n                  to={{search: '?tab=about'}}\r\n                  key={artistPageTabs.about}\r\n                >\r\n                  <Trans message=\"About\" />\r\n                </Tab>\r\n              );\r\n            case artistPageTabs.tracks:\r\n              return (\r\n                <Tab\r\n                  elementType={Link}\r\n                  to={{search: '?tab=tracks'}}\r\n                  key={artistPageTabs.tracks}\r\n                >\r\n                  <Trans message=\"Tracks\" />\r\n                </Tab>\r\n              );\r\n            case artistPageTabs.albums:\r\n              return (\r\n                <Tab\r\n                  elementType={Link}\r\n                  to={{search: '?tab=albums'}}\r\n                  key={artistPageTabs.albums}\r\n                >\r\n                  <Trans message=\"Albums\" />\r\n                </Tab>\r\n              );\r\n            case artistPageTabs.followers:\r\n              return (\r\n                <Tab\r\n                  elementType={Link}\r\n                  to={{search: '?tab=followers'}}\r\n                  key={artistPageTabs.followers}\r\n                >\r\n                  <Trans message=\"Followers\" />\r\n                </Tab>\r\n              );\r\n          }\r\n        })}\r\n      </TabList>\r\n      <TabPanels className=\"mt-12 md:mt-24\">\r\n        {activeTabs.map(tab => {\r\n          switch (tab.id) {\r\n            case artistPageTabs.discography:\r\n              return (\r\n                <TabPanel key={artistPageTabs.discography}>\r\n                  <DiscographyTab data={data} />\r\n                </TabPanel>\r\n              );\r\n            case artistPageTabs.similar:\r\n              return (\r\n                <TabPanel key={artistPageTabs.similar}>\r\n                  <SimilarArtistsPanel artist={data.artist} />\r\n                </TabPanel>\r\n              );\r\n            case artistPageTabs.about:\r\n              return (\r\n                <TabPanel key={artistPageTabs.about}>\r\n                  <ArtistAboutPanel artist={data.artist} />\r\n                </TabPanel>\r\n              );\r\n            case artistPageTabs.tracks:\r\n              return (\r\n                <TabPanel key={artistPageTabs.tracks}>\r\n                  <ArtistTracksPanel\r\n                    artist={data.artist}\r\n                    initialTracks={data.tracks}\r\n                  />\r\n                </TabPanel>\r\n              );\r\n            case artistPageTabs.albums:\r\n              return (\r\n                <TabPanel key={artistPageTabs.albums}>\r\n                  <ArtistAlbumsPanel artist={data.artist} />\r\n                </TabPanel>\r\n              );\r\n            case artistPageTabs.followers:\r\n              return (\r\n                <TabPanel key={artistPageTabs.followers}>\r\n                  <ArtistFollowersPanel artist={data.artist} />\r\n                </TabPanel>\r\n              );\r\n          }\r\n        })}\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n}\r\n","import {useArtist} from '@app/web-player/artists/requests/use-artist';\r\nimport {ArtistPageHeader} from '@app/web-player/artists/artist-page/artist-page-header';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport React from 'react';\r\nimport {ArtistPageTabs} from '@app/web-player/artists/artist-page/artist-page-tabs';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nexport function ArtistPage() {\r\n  const query = useArtist({\r\n    loader: 'artistPage',\r\n  });\r\n\r\n  if (query.data) {\r\n    return (\r\n      <div>\r\n        <PageMetaTags query={query} />\r\n        <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n        <ArtistPageHeader artist={query.data.artist} />\r\n        <AdHost slot=\"artist_top\" className=\"mt-14\" />\r\n        <ArtistPageTabs data={query.data} />\r\n        <AdHost slot=\"general_bottom\" className=\"mt-34\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n      loaderIsScreen={false}\r\n    />\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useParams} from 'react-router-dom';\r\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {Playlist} from '@app/web-player/playlists/playlist';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nexport interface GetPlaylistResponse extends BackendResponse {\r\n  playlist: Playlist;\r\n  tracks: PaginationResponse<Track>;\r\n  totalDuration: number;\r\n  loader: Params['loader'];\r\n}\r\n\r\ninterface Params {\r\n  loader: 'playlistPage' | 'playlist';\r\n}\r\n\r\nexport function usePlaylist(params: Params) {\r\n  const {playlistId} = useParams();\r\n  return useQuery({\r\n    queryKey: ['playlists', +playlistId!],\r\n    queryFn: () => fetchPlaylist(playlistId!),\r\n    initialData: () => {\r\n      const data = getBootstrapData().loaders?.[params.loader];\r\n      if (data?.playlist?.id == playlistId && data?.loader === params.loader) {\r\n        return data;\r\n      }\r\n      return undefined;\r\n    },\r\n  });\r\n}\r\n\r\nfunction fetchPlaylist(\r\n  playlistId: number | string,\r\n): Promise<GetPlaylistResponse> {\r\n  return apiClient\r\n    .get(`playlists/${playlistId}`)\r\n    .then(response => response.data);\r\n}\r\n","import React, {Children, Fragment, ReactElement, ReactNode} from 'react';\r\nimport {AvatarProps} from '@common/ui/images/avatar';\r\nimport clsx from 'clsx';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface AvatarGroupProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\nexport function AvatarGroup(props: AvatarGroupProps) {\r\n  const children = Children.toArray(\r\n    props.children\r\n  ) as ReactElement<AvatarProps>[];\r\n\r\n  if (!children.length) return null;\r\n\r\n  const firstLink = children[0].props.link;\r\n  const label = children[0].props.label;\r\n\r\n  return (\r\n    <div className={clsx('pl-10 flex isolate items-center', props.className)}>\r\n      <Fragment>\r\n        {children.map((avatar, index) => (\r\n          <div\r\n            key={index}\r\n            style={{zIndex: 5 - index}}\r\n            className={clsx(\r\n              'relative border-2 border-bg-alt bg-alt rounded-full -ml-10 overflow-hidden flex-shrink-0'\r\n            )}\r\n          >\r\n            {avatar}\r\n          </div>\r\n        ))}\r\n      </Fragment>\r\n      <div className=\"text-sm whitespace-nowrap ml-10\">\r\n        {firstLink && label ? (\r\n          <Link to={firstLink} className=\"hover:underline\">\r\n            {label}\r\n          </Link>\r\n        ) : null}\r\n        {children.length > 1 && (\r\n          <span>\r\n            {' '}\r\n            <Trans\r\n              message=\"+ :count more\"\r\n              values={{count: children.length - 1}}\r\n            />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Children, Fragment, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface BulletSeparatedItemsProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport function BulletSeparatedItems({\r\n  children,\r\n  className,\r\n}: BulletSeparatedItemsProps) {\r\n  const items = Children.toArray(children);\r\n  return (\r\n    <div className={clsx('flex items-center gap-4', className)}>\r\n      {items.map((child, index) => (\r\n        <Fragment key={index}>\r\n          <div>{child}</div>\r\n          {index < items.length - 1 ? <div>&bull;</div> : null}\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import {Playlist} from '@app/web-player/playlists/playlist';\r\nimport {\r\n  getPlaylistImageSrc,\r\n  PlaylistImage,\r\n} from '@app/web-player/playlists/playlist-image';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport React, {Fragment} from 'react';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ImageSelector} from '@common/ui/images/image-selector';\r\nimport {ImageIcon} from '@common/icons/material/Image';\r\nimport {useUpdatePlaylist} from '@app/web-player/playlists/requests/use-update-playlist';\r\nimport {usePlaylistPermissions} from '@app/web-player/playlists/hooks/use-playlist-permissions';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {PlaylistContextDialog} from '@app/web-player/playlists/playlist-context-dialog';\r\nimport {FollowPlaylistButton} from '@app/web-player/playlists/playlist-page/follow-playlist-button';\r\nimport {AvatarGroup} from '@common/ui/images/avatar-group';\r\nimport {Avatar} from '@common/ui/images/avatar';\r\nimport {getUserProfileLink} from '@app/web-player/users/user-profile-link';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {\r\n  actionButtonClassName,\r\n  MediaPageHeaderLayout,\r\n} from '@app/web-player/layout/media-page-header-layout';\r\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\r\n\r\ninterface PlaylistPageHeaderProps {\r\n  playlist: Playlist;\r\n  totalDuration: number;\r\n  queueId: string;\r\n}\r\nexport function PlaylistPageHeader({\r\n  playlist,\r\n  totalDuration,\r\n  queueId,\r\n}: PlaylistPageHeaderProps) {\r\n  return (\r\n    <Fragment>\r\n      <MediaPageHeaderLayout\r\n        image={<EditableImage playlist={playlist} />}\r\n        title={playlist.name}\r\n        subtitle={\r\n          <AvatarGroup>\r\n            {playlist.editors?.map(editor => (\r\n              <Avatar\r\n                key={editor.id}\r\n                circle\r\n                src={editor.avatar}\r\n                label={editor.display_name}\r\n                link={getUserProfileLink(editor)}\r\n              />\r\n            ))}\r\n          </AvatarGroup>\r\n        }\r\n        description={\r\n          <Fragment>\r\n            {playlist.description}\r\n            {playlist.tracks_count ? (\r\n              <BulletSeparatedItems className=\"mt-14 text-sm text-muted\">\r\n                <Trans\r\n                  message=\"[one 1 track|other :count tracks]\"\r\n                  values={{count: playlist.tracks_count}}\r\n                />\r\n                <FormattedDuration ms={totalDuration} verbose />\r\n                {playlist.collaborative && <Trans message=\"Collaborative\" />}\r\n              </BulletSeparatedItems>\r\n            ) : null}\r\n          </Fragment>\r\n        }\r\n        actionButtons={\r\n          <ActionButtons\r\n            playlist={playlist}\r\n            hasTracks={totalDuration > 0}\r\n            queueId={queueId}\r\n          />\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ImageContainerProps {\r\n  playlist: Playlist;\r\n  size?: string;\r\n  className?: string;\r\n}\r\nfunction EditableImage({playlist, size, className}: ImageContainerProps) {\r\n  const updatePlaylist = useUpdatePlaylist();\r\n  const {canEdit} = usePlaylistPermissions(playlist);\r\n\r\n  if (!canEdit) {\r\n    return (\r\n      <PlaylistImage\r\n        className={`${size} ${className} rounded object-cover`}\r\n        playlist={playlist}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FileUploadProvider>\r\n      <ImageSelector\r\n        showEditButtonOnHover\r\n        diskPrefix=\"playlist_media\"\r\n        variant=\"square\"\r\n        previewSize={size}\r\n        className={className}\r\n        value={getPlaylistImageSrc(playlist)}\r\n        onChange={newValue => {\r\n          updatePlaylist.mutate({image: newValue});\r\n        }}\r\n        placeholderIcon={<ImageIcon />}\r\n        stretchPreview\r\n      />\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n\r\ninterface ActionButtonsProps {\r\n  playlist: Playlist;\r\n  hasTracks: boolean;\r\n  queueId: string;\r\n}\r\nfunction ActionButtons({playlist, hasTracks, queueId}: ActionButtonsProps) {\r\n  return (\r\n    <div className=\"text-center md:text-start\">\r\n      <PlaybackToggleButton\r\n        disabled={!hasTracks}\r\n        buttonType=\"text\"\r\n        queueId={queueId}\r\n        className={actionButtonClassName({isFirst: true})}\r\n      />\r\n      <FollowPlaylistButton\r\n        buttonType=\"text\"\r\n        playlist={playlist}\r\n        className={actionButtonClassName()}\r\n      />\r\n      <DialogTrigger type=\"popover\" mobileType=\"tray\">\r\n        <Button\r\n          variant=\"outline\"\r\n          radius=\"rounded-full\"\r\n          endIcon={<ArrowDropDownIcon />}\r\n          className={actionButtonClassName()}\r\n        >\r\n          <Trans message=\"More\" />\r\n        </Button>\r\n        <PlaylistContextDialog playlist={playlist} />\r\n      </DialogTrigger>\r\n    </div>\r\n  );\r\n}\r\n","export function moveMultipleItemsInArray<T>(\r\n  array: T[],\r\n  indexOrIndexes: number | number[],\r\n  newIndex: number\r\n) {\r\n  const indexes = Array.isArray(indexOrIndexes)\r\n    ? indexOrIndexes\r\n    : [indexOrIndexes];\r\n  const insertBefore = array[newIndex + (newIndex < indexes[0] ? 0 : 1)];\r\n  const itemsToBeMoved = indexes.map(i => array[i]);\r\n\r\n  // in original sequence order, check for presence in the removal\r\n  // list, *and* remove them from the original array\r\n  const moved = [];\r\n  for (let i = 0; i < array.length; ) {\r\n    const value = array[i];\r\n    if (itemsToBeMoved.indexOf(value) >= 0) {\r\n      moved.push(value);\r\n      array.splice(i, 1);\r\n    } else {\r\n      ++i;\r\n    }\r\n  }\r\n\r\n  // find the new index of the insertion point\r\n  let insertionIndex = array.indexOf(insertBefore);\r\n  if (insertionIndex < 0) {\r\n    insertionIndex = array.length;\r\n  }\r\n\r\n  // and add the elements back in\r\n  array.splice(insertionIndex, 0, ...moved);\r\n\r\n  return array;\r\n}\r\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {useParams} from 'react-router-dom';\r\nimport {moveMultipleItemsInArray} from '@common/utils/array/move-multiple-items-in-array';\r\n\r\ninterface Response extends BackendResponse {\r\n  //\r\n}\r\n\r\ninterface Payload {\r\n  tracks: Track[];\r\n  oldIndexes: number | number[];\r\n  newIndex: number;\r\n}\r\n\r\nexport function useReorderPlaylistTracks() {\r\n  const {playlistId} = useParams();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => reorderTracks(playlistId!, payload),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: ['tracks', 'playlist', +playlistId!],\r\n      });\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction reorderTracks(\r\n  playlistId: number | string,\r\n  {tracks, oldIndexes, newIndex}: Payload,\r\n): Promise<Response> {\r\n  const ids = tracks.map(t => t.id);\r\n  moveMultipleItemsInArray(ids, oldIndexes, newIndex);\r\n  return apiClient\r\n    .post(`playlists/${playlistId}/tracks/order`, {ids})\r\n    .then(r => r.data);\r\n}\r\n","import {RowElementProps} from '@common/ui/tables/table-row';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {useIsTouchDevice} from '@common/utils/hooks/is-touch-device';\r\nimport React, {Fragment, useContext, useRef} from 'react';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {DragPreviewRenderer} from '@common/ui/interactions/dnd/use-draggable';\r\nimport {useReorderPlaylistTracks} from '@app/web-player/playlists/requests/use-reorder-playlist-tracks';\r\nimport {usePlaylist} from '@app/web-player/playlists/requests/use-playlist';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {PlaylistTrackContextDialog} from '@app/web-player/playlists/playlist-page/playlist-track-context-dialog';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DragPreview} from '@common/ui/interactions/dnd/drag-preview';\r\nimport {useSortable} from '@common/ui/interactions/dnd/sortable/use-sortable';\r\n\r\nexport function PlaylistTableRow({\r\n  item,\r\n  children,\r\n  className,\r\n  ...domProps\r\n}: RowElementProps<Track>) {\r\n  const isTouchDevice = useIsTouchDevice();\r\n  const {\r\n    data: tracks,\r\n    selectRow,\r\n    selectedRows,\r\n    sortDescriptor,\r\n  } = useContext(TableContext);\r\n  const domRef = useRef<HTMLTableRowElement>(null);\r\n  const previewRef = useRef<DragPreviewRenderer>(null);\r\n  const reorderTracks = useReorderPlaylistTracks();\r\n  const {data} = usePlaylist({loader: 'playlistPage'});\r\n\r\n  const {sortableProps} = useSortable({\r\n    ref: domRef,\r\n    disabled:\r\n      (isTouchDevice ?? false) ||\r\n      reorderTracks.isPending ||\r\n      // disable drag and drop if table is sorted via header\r\n      sortDescriptor?.orderBy !== 'position',\r\n    item: item,\r\n    items: tracks,\r\n    type: 'playlistTrack',\r\n    preview: previewRef,\r\n    strategy: 'line',\r\n    onDragEnd: () => {\r\n      selectRow(null);\r\n    },\r\n    onSortStart: () => {\r\n      // if dragging a row that is already selected, do nothing,\r\n      // otherwise deselect all other rows and select this one\r\n      if (!selectedRows.includes(item.id)) {\r\n        selectRow(item);\r\n      }\r\n    },\r\n    onSortEnd: (oldIndex, newIndex) => {\r\n      reorderTracks.mutate({\r\n        tracks: tracks as Track[],\r\n        oldIndexes:\r\n          selectedRows.length > 1\r\n            ? selectedRows.map(id => tracks.findIndex(t => t.id === id))\r\n            : oldIndex,\r\n        newIndex,\r\n      });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger\r\n        type=\"popover\"\r\n        triggerOnContextMenu\r\n        placement=\"bottom-start\"\r\n      >\r\n        <div\r\n          className={className}\r\n          ref={domRef}\r\n          {...mergeProps(sortableProps, domProps)}\r\n        >\r\n          {children}\r\n        </div>\r\n        <PlaylistTrackContextDialog playlist={data!.playlist} />\r\n      </DialogTrigger>\r\n      {!item.isPlaceholder && <RowDragPreview track={item} ref={previewRef} />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface RowDragPreviewProps {\r\n  track: Track;\r\n}\r\nconst RowDragPreview = React.forwardRef<\r\n  DragPreviewRenderer,\r\n  RowDragPreviewProps\r\n>(({track}, ref) => {\r\n  const {selectedRows} = useContext(TableContext);\r\n\r\n  const content =\r\n    selectedRows.length > 1 ? (\r\n      <Trans message=\":count tracks\" values={{count: selectedRows.length}} />\r\n    ) : (\r\n      `${track.name} - ${track.artists?.[0]?.name}`\r\n    );\r\n\r\n  return (\r\n    <DragPreview ref={ref}>\r\n      {() => (\r\n        <div\r\n          className=\"rounded bg-chip p-8 text-base shadow\"\r\n          role=\"presentation\"\r\n        >\r\n          {content}\r\n        </div>\r\n      )}\r\n    </DragPreview>\r\n  );\r\n});\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport React, {ReactElement} from 'react';\r\n\r\ninterface MediaPageNoResultsMessage {\r\n  description: ReactElement;\r\n  searchQuery?: string;\r\n  className?: string;\r\n}\r\nexport function MediaPageNoResultsMessage({\r\n  description,\r\n  searchQuery,\r\n  className,\r\n}: MediaPageNoResultsMessage) {\r\n  if (searchQuery) {\r\n    return (\r\n      <IllustratedMessage\r\n        className={className}\r\n        title={<Trans message=\"No results found\" />}\r\n        description={\r\n          <Trans message=\"Try another search query or different filters\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <IllustratedMessage\r\n      className={className}\r\n      title={<Trans message=\"Nothing to display\" />}\r\n      description={description}\r\n    />\r\n  );\r\n}\r\n","import {usePlaylist} from '@app/web-player/playlists/requests/use-playlist';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport React from 'react';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\r\nimport {PlaylistPageHeader} from '@app/web-player/playlists/playlist-page/playlist-page-header';\r\nimport {Playlist} from '@app/web-player/playlists/playlist';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {PlaylistTableRow} from '@app/web-player/playlists/playlist-page/playlist-table-row';\r\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nexport function PlaylistPage() {\r\n  const query = usePlaylist({loader: 'playlistPage'});\r\n\r\n  if (query.data) {\r\n    return (\r\n      <div>\r\n        <PageMetaTags query={query} />\r\n        <PageContent\r\n          initialTracks={query.data.tracks}\r\n          playlist={query.data.playlist}\r\n          totalDuration={query.data.totalDuration}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n      loaderIsScreen={false}\r\n    />\r\n  );\r\n}\r\n\r\ninterface PageContentProps {\r\n  initialTracks: PaginationResponse<Track>;\r\n  playlist: Playlist;\r\n  totalDuration: number;\r\n}\r\nfunction PageContent({\r\n  initialTracks,\r\n  playlist,\r\n  totalDuration,\r\n}: PageContentProps) {\r\n  const {trans} = useTrans();\r\n  const query = useInfiniteData({\r\n    initialPage: initialTracks,\r\n    queryKey: ['tracks', 'playlist', playlist.id],\r\n    endpoint: `playlists/${playlist.id}/tracks`,\r\n    defaultOrderBy: 'position',\r\n    defaultOrderDir: 'asc',\r\n    paginate: 'simple',\r\n    willSortOrFilter: true,\r\n  });\r\n  const {\r\n    isLoading,\r\n    sortDescriptor,\r\n    setSortDescriptor,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    items,\r\n  } = query;\r\n  const totalItems = playlist.tracks_count || 0;\r\n  const queueId = queueGroupId(playlist, '*', sortDescriptor);\r\n\r\n  return (\r\n    <div>\r\n      <AdHost slot=\"general_top\" className=\"mb-44\" />\r\n      <PlaylistPageHeader\r\n        playlist={playlist}\r\n        totalDuration={totalDuration}\r\n        queueId={queueId}\r\n      />\r\n      <TextField\r\n        value={searchQuery}\r\n        onChange={e => setSearchQuery(e.target.value)}\r\n        className=\"mb-44 mt-28 max-w-512 md:mb-24\"\r\n        size=\"sm\"\r\n        startAdornment={<SearchIcon />}\r\n        placeholder={trans(message('Search within playlist'))}\r\n      />\r\n      <TrackTable\r\n        queueGroupId={queueId}\r\n        tracks={items}\r\n        sortDescriptor={sortDescriptor}\r\n        onSortChange={setSortDescriptor}\r\n        renderRowAs={PlaylistTableRow}\r\n        playlist={playlist}\r\n        tableBody={<VirtualTableBody query={query} totalItems={totalItems} />}\r\n      />\r\n      {!items.length && !isLoading && (\r\n        <MediaPageNoResultsMessage\r\n          className=\"mt-34\"\r\n          searchQuery={searchQuery}\r\n          description={\r\n            <Trans message=\"This playlist does not have any tracks yet\" />\r\n          }\r\n        />\r\n      )}\r\n      <AdHost slot=\"general_bottom\" className=\"mt-44\" />\r\n    </div>\r\n  );\r\n}\r\n","import {Commentable} from '@common/comments/commentable';\r\nimport {Comment} from '@common/comments/comment';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\n\r\ninterface QueryParams {\r\n  perPage?: number;\r\n}\r\n\r\nexport function commentsQueryKey(\r\n  commentable: Commentable,\r\n  params: QueryParams = {}\r\n) {\r\n  return ['comment', `${commentable.id}-${commentable.model_type}`, params];\r\n}\r\n\r\nexport function useComments(\r\n  commentable: Commentable,\r\n  params: QueryParams = {}\r\n) {\r\n  return useInfiniteData<Comment>({\r\n    queryKey: commentsQueryKey(commentable, params),\r\n    endpoint: 'commentable/comments',\r\n    //paginate: 'cursor',\r\n    queryParams: {\r\n      commentable_type: commentable.model_type,\r\n      commentable_id: commentable.id,\r\n      ...params,\r\n    },\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {VotableModel} from '@common/votes/votable-model';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  model: VotableModel;\r\n}\r\n\r\ninterface Payload {\r\n  voteType: 'upvote' | 'downvote';\r\n}\r\n\r\nexport function useStoreVote(model: VotableModel) {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => changeVote(model, payload),\r\n    onSuccess: response => {\r\n      //\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction changeVote(model: VotableModel, payload: Payload) {\r\n  return apiClient\r\n    .post<Response>('vote', {\r\n      vote_type: payload.voteType,\r\n      model_id: model.id,\r\n      model_type: model.model_type,\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","import {ThumbUpIcon} from '@common/icons/material/ThumbUp';\r\nimport {ThumbDownIcon} from '@common/icons/material/ThumbDown';\r\nimport {VotableModel} from '@common/votes/votable-model';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useStoreVote} from '@common/votes/requests/use-store-vote';\r\nimport {useState} from 'react';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  model: VotableModel;\r\n  className?: string;\r\n  showUpvotesOnly?: boolean;\r\n}\r\nexport function ThumbButtons({model, className, showUpvotesOnly}: Props) {\r\n  const changeVote = useStoreVote(model);\r\n\r\n  const [upvotes, setUpvotes] = useState(model.upvotes || 0);\r\n  const [downvotes, setDownvotes] = useState(model.downvotes || 0);\r\n  const [currentVote, setCurrentVote] = useState(model.current_vote);\r\n\r\n  const syncLocalState = (model: VotableModel) => {\r\n    setUpvotes(model.upvotes);\r\n    setDownvotes(model.downvotes);\r\n    setCurrentVote(model.current_vote);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(className, 'whitespace-nowrap')}>\r\n      <Button\r\n        className=\"gap-6\"\r\n        sizeClassName=\"px-8 py-4\"\r\n        color={currentVote === 'upvote' ? 'primary' : undefined}\r\n        disabled={changeVote.isPending}\r\n        aria-label=\"Upvote\"\r\n        onClick={() => {\r\n          changeVote.mutate(\r\n            {voteType: 'upvote'},\r\n            {\r\n              onSuccess: response => syncLocalState(response.model),\r\n            },\r\n          );\r\n        }}\r\n      >\r\n        <ThumbUpIcon />\r\n        <div>\r\n          <FormattedNumber value={upvotes} />\r\n        </div>\r\n      </Button>\r\n      {!showUpvotesOnly && (\r\n        <Button\r\n          className=\"gap-6\"\r\n          sizeClassName=\"px-8 py-4\"\r\n          color={currentVote === 'downvote' ? 'primary' : undefined}\r\n          disabled={changeVote.isPending}\r\n          aria-label=\"Downvote\"\r\n          onClick={() => {\r\n            changeVote.mutate(\r\n              {voteType: 'downvote'},\r\n              {\r\n                onSuccess: response => syncLocalState(response.model),\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          <ThumbDownIcon />\r\n          <div>\r\n            <FormattedNumber value={downvotes} />\r\n          </div>\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {Reportable} from '@common/reports/Reportable';\r\n\r\ninterface Response extends BackendResponse {\r\n  model: Reportable;\r\n}\r\n\r\ninterface Payload {\r\n  reason?: string;\r\n}\r\n\r\nexport function useSubmitReport(model: Reportable) {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => submitReport(model, payload),\r\n    onSuccess: () => {\r\n      toast(message('Thanks for reporting. We will review this content.'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction submitReport(model: Reportable, payload: Payload) {\r\n  return apiClient\r\n    .post<Response>('report', {\r\n      reason: payload.reason,\r\n      model_id: model.id,\r\n      model_type: model.model_type,\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","import React, {Fragment, memo, useContext, useState} from 'react';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\nimport {Link} from 'react-router-dom';\r\nimport {Comment} from '@common/comments/comment';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {UserAvatar} from '@common/ui/images/user-avatar';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {NewCommentForm} from '@common/comments/new-comment-form';\r\nimport {User} from '@common/auth/user';\r\nimport {Commentable} from '@common/comments/commentable';\r\nimport {useDeleteComments} from '@common/comments/requests/use-delete-comments';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {ThumbButtons} from '@common/votes/thumb-buttons';\r\nimport {ReplyIcon} from '@common/icons/material/Reply';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {useSubmitReport} from '@common/reports/requests/use-submit-report';\r\n\r\ninterface CommentListItemProps {\r\n  comment: Comment;\r\n  commentable: Commentable;\r\n  canDelete?: boolean;\r\n}\r\nexport function CommentListItem({\r\n  comment,\r\n  commentable,\r\n  // user can delete comment if they have created it, or they have relevant permissions on commentable\r\n  canDelete,\r\n}: CommentListItemProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const {user, hasPermission} = useAuth();\r\n  const [replyFormVisible, setReplyFormVisible] = useState(false);\r\n  const showReplyButton =\r\n    user != null &&\r\n    !comment.deleted &&\r\n    !isMobile &&\r\n    comment.depth < 5 &&\r\n    hasPermission('comments.create');\r\n\r\n  return (\r\n    <div\r\n      style={{paddingLeft: `${comment.depth * 20}px`}}\r\n      onClick={() => {\r\n        if (isMobile) {\r\n          setReplyFormVisible(!replyFormVisible);\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"group flex min-h-70 items-start gap-24 py-18\">\r\n        <UserAvatar user={comment.user} size={isMobile ? 'lg' : 'xl'} circle />\r\n        <div className=\"flex-auto text-sm\">\r\n          <div className=\"mb-4 flex items-center gap-8\">\r\n            {comment.user && <UserDisplayName user={comment.user} />}\r\n            <time className=\"text-xs text-muted\">\r\n              <FormattedRelativeTime date={comment.created_at} />\r\n            </time>\r\n            {comment.position ? (\r\n              <Position commentable={commentable} position={comment.position} />\r\n            ) : null}\r\n          </div>\r\n          <div className=\"whitespace-pre-line\">\r\n            {comment.deleted ? (\r\n              <span className=\"italic text-muted\">\r\n                <Trans message=\"[COMMENT DELETED]\" />\r\n              </span>\r\n            ) : (\r\n              comment.content\r\n            )}\r\n          </div>\r\n          {!comment.deleted && (\r\n            <div className=\"-ml-8 mt-10 flex items-center gap-8\">\r\n              {showReplyButton && (\r\n                <Button\r\n                  sizeClassName=\"text-sm px-8 py-4\"\r\n                  startIcon={<ReplyIcon />}\r\n                  onClick={() => setReplyFormVisible(!replyFormVisible)}\r\n                >\r\n                  <Trans message=\"Reply\" />\r\n                </Button>\r\n              )}\r\n              <ThumbButtons model={comment} showUpvotesOnly />\r\n              <CommentOptionsTrigger\r\n                comment={comment}\r\n                canDelete={canDelete}\r\n                user={user}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {replyFormVisible ? (\r\n        <NewCommentForm\r\n          className={!comment?.depth ? 'pl-20' : undefined}\r\n          commentable={commentable}\r\n          inReplyTo={comment}\r\n          autoFocus\r\n          onSuccess={() => {\r\n            setReplyFormVisible(false);\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PositionProps {\r\n  commentable: Commentable;\r\n  position: number;\r\n}\r\nconst Position = memo(({commentable, position}: PositionProps) => {\r\n  if (!commentable.duration) return null;\r\n  const seconds = (position / 100) * (commentable.duration / 1000);\r\n  return (\r\n    <span className=\"text-xs text-muted\">\r\n      <Trans\r\n        message=\"at :position\"\r\n        values={{\r\n          position: <FormattedDuration seconds={seconds} />,\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n});\r\n\r\ninterface DeleteCommentsButtonProps {\r\n  comment: Comment;\r\n  canDelete?: boolean;\r\n  user: User | null;\r\n}\r\nexport function CommentOptionsTrigger({\r\n  comment,\r\n  canDelete,\r\n  user,\r\n}: DeleteCommentsButtonProps) {\r\n  const deleteComments = useDeleteComments();\r\n  const reportComment = useSubmitReport(comment);\r\n\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const showDeleteButton =\r\n    (comment.user_id === user?.id || canDelete) && !comment.deleted;\r\n\r\n  const handleReport = () => {\r\n    reportComment.mutate({});\r\n  };\r\n\r\n  const handleDelete = (isConfirmed: boolean) => {\r\n    setIsDeleteDialogOpen(false);\r\n    if (isConfirmed) {\r\n      deleteComments.mutate(\r\n        {commentIds: [comment.id]},\r\n        {\r\n          onSuccess: () => {\r\n            queryClient.invalidateQueries({queryKey: ['comment']});\r\n          },\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MenuTrigger>\r\n        <Button startIcon={<MoreVertIcon />} sizeClassName=\"text-sm px-8 py-4\">\r\n          <Trans message=\"More\" />\r\n        </Button>\r\n        <Menu>\r\n          <MenuItem value=\"report\" onSelected={() => handleReport()}>\r\n            <Trans message=\"Report comment\" />\r\n          </MenuItem>\r\n          {showDeleteButton && (\r\n            <MenuItem\r\n              value=\"delete\"\r\n              onSelected={() => setIsDeleteDialogOpen(true)}\r\n            >\r\n              <Trans message=\"Delete\" />\r\n            </MenuItem>\r\n          )}\r\n        </Menu>\r\n      </MenuTrigger>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={isDeleteDialogOpen}\r\n        onClose={isConfirmed => handleDelete(isConfirmed)}\r\n      >\r\n        <ConfirmationDialog\r\n          isDanger\r\n          title={<Trans message=\"Delete comment?\" />}\r\n          body={\r\n            <Trans message=\"Are you sure you want to delete this comment?\" />\r\n          }\r\n          confirm={<Trans message=\"Delete\" />}\r\n        />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface UserDisplayNameProps {\r\n  user: User;\r\n}\r\nfunction UserDisplayName({user}: UserDisplayNameProps) {\r\n  const {auth} = useContext(SiteConfigContext);\r\n  if (auth.getUserProfileLink) {\r\n    return (\r\n      <Link\r\n        to={auth.getUserProfileLink(user)}\r\n        className=\"text-base font-medium hover:underline\"\r\n      >\r\n        {user.display_name}\r\n      </Link>\r\n    );\r\n  }\r\n  return <div className=\"text-base font-medium\">{user.display_name}</div>;\r\n}\r\n","import {useAuth} from '@common/auth/use-auth';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Link} from 'react-router-dom';\r\nimport {LinkStyle} from '@common/ui/buttons/external-link';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\n\r\ninterface Props {\r\n  message: MessageDescriptor;\r\n}\r\nexport function AccountRequiredCard({message}: Props) {\r\n  const {user} = useAuth();\r\n  if (user) return null;\r\n  return (\r\n    <div className=\"border border-dashed py-30 px-20 my-40 mx-auto text-center max-w-850 rounded\">\r\n      <div className=\"text-xl font-semibold mb-8\">\r\n        <Trans message=\"Account required\" />\r\n      </div>\r\n      <div className=\"text-muted text-base\">\r\n        <Trans\r\n          {...message}\r\n          values={{\r\n            l: parts => (\r\n              <Link className={LinkStyle} to=\"/login\">\r\n                {parts}\r\n              </Link>\r\n            ),\r\n            r: parts => (\r\n              <Link className={LinkStyle} to=\"/register\">\r\n                {parts}\r\n              </Link>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {Comment} from '@common/comments/comment';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {CommentIcon} from '@common/icons/material/Comment';\r\nimport {Commentable} from '@common/comments/commentable';\r\nimport {useComments} from '@common/comments/requests/use-comments';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {CommentListItem} from '@common/comments/comment-list/comment-list-item';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport {ReactNode} from 'react';\r\nimport {AccountRequiredCard} from '@common/comments/comment-list/account-required-card';\r\nimport {message} from '@common/i18n/message';\r\n\r\nconst accountRequiredMessage = message(\r\n  'Please <l>login</l> or <r>create account</r> to comment'\r\n);\r\n\r\ninterface CommentListProps {\r\n  commentable: Commentable;\r\n  canDeleteAllComments?: boolean;\r\n  className?: string;\r\n  children?: ReactNode;\r\n  perPage?: number;\r\n}\r\nexport function CommentList({\r\n  className,\r\n  commentable,\r\n  canDeleteAllComments = false,\r\n  children,\r\n  perPage = 25,\r\n}: CommentListProps) {\r\n  const {items, totalItems, ...query} = useComments(commentable, {perPage});\r\n\r\n  if (query.isError) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"mb-8 pb-8 border-b flex items-center gap-8\">\r\n        <CommentIcon size=\"sm\" className=\"text-muted\" />\r\n        {query.isInitialLoading ? (\r\n          <Trans message=\"Loading comments...\" />\r\n        ) : (\r\n          <Trans\r\n            message=\":count comments\"\r\n            values={{count: <FormattedNumber value={totalItems || 0} />}}\r\n          />\r\n        )}\r\n      </div>\r\n      {children}\r\n      <AccountRequiredCard message={accountRequiredMessage} />\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        {query.isInitialLoading ? (\r\n          <CommentSkeletons count={4} />\r\n        ) : (\r\n          <CommentListItems\r\n            comments={items}\r\n            canDeleteAllComments={canDeleteAllComments}\r\n            commentable={commentable}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n      <InfiniteScrollSentinel query={query} variant=\"loadMore\" />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CommentListItemsProps {\r\n  comments: Comment[];\r\n  canDeleteAllComments: boolean;\r\n  commentable: Commentable;\r\n}\r\nfunction CommentListItems({\r\n  comments,\r\n  commentable,\r\n  canDeleteAllComments,\r\n}: CommentListItemsProps) {\r\n  if (!comments.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        className=\"mt-24\"\r\n        size=\"sm\"\r\n        title={<Trans message=\"Seems a little quiet over here\" />}\r\n        description={<Trans message=\"Be the first to comment\" />}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <m.div key=\"comments\" {...opacityAnimation}>\r\n      {comments.map(comment => (\r\n        <CommentListItem\r\n          key={comment.id}\r\n          comment={comment}\r\n          commentable={commentable}\r\n          canDelete={canDeleteAllComments}\r\n        />\r\n      ))}\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface CommentSkeletonsProps {\r\n  count: number;\r\n}\r\nfunction CommentSkeletons({count}: CommentSkeletonsProps) {\r\n  return (\r\n    <m.div key=\"loading-skeleton\" {...opacityAnimation}>\r\n      {[...new Array(count).keys()].map(index => (\r\n        <div\r\n          key={index}\r\n          className=\"flex items-start gap-24 py-18 min-h-70 group\"\r\n        >\r\n          <Skeleton variant=\"avatar\" radius=\"rounded-full\" size=\"w-60 h-60\" />\r\n          <div className=\"text-sm flex-auto\">\r\n            <Skeleton className=\"text-base max-w-184 mb-4\" />\r\n            <Skeleton className=\"text-sm\" />\r\n            <div className=\"flex items-center gap-8 mt-10\">\r\n              <Skeleton className=\"text-sm max-w-70\" />\r\n              <Skeleton className=\"text-sm max-w-40\" />\r\n              <Skeleton className=\"text-sm max-w-60\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </m.div>\r\n  );\r\n}\r\n","import {useLinkifiedString} from '@common/utils/hooks/use-linkified-string';\r\nimport {Fragment, useRef, useState} from 'react';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport clsx from 'clsx';\r\nimport {useLayoutEffect} from '@react-aria/utils';\r\n\r\ninterface TruncatedDescriptionProps {\r\n  description?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function TruncatedDescription({\r\n  description,\r\n  className,\r\n}: TruncatedDescriptionProps) {\r\n  const linkifiedDescription = useLinkifiedString(description);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n  const contentRef = useRef<HTMLDivElement>(null);\r\n  const [isOverflowing, setIsOverflowing] = useState(false);\r\n  const [isShowingAll, setIsShowingAll] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    const wrapperHeight =\r\n      wrapperRef.current?.getBoundingClientRect().height || 0;\r\n    const contentHeight = wrapperRef.current?.scrollHeight || 0;\r\n    if (contentHeight > wrapperHeight) {\r\n      setIsOverflowing(true);\r\n    }\r\n  }, []);\r\n\r\n  if (!linkifiedDescription) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        ref={wrapperRef}\r\n        className={clsx(\r\n          'relative',\r\n          className,\r\n          !isShowingAll && 'max-h-160 overflow-hidden',\r\n          !isShowingAll &&\r\n            isOverflowing &&\r\n            'after:absolute after:bottom-0 after:left-0 after:h-20 after:w-full after:bg-gradient-to-b after:from-transparent after:to-background'\r\n        )}\r\n      >\r\n        <div\r\n          ref={contentRef}\r\n          dangerouslySetInnerHTML={{__html: linkifiedDescription}}\r\n        />\r\n      </div>\r\n      {isOverflowing && (\r\n        <Button\r\n          size=\"xs\"\r\n          className=\"mt-20\"\r\n          variant=\"outline\"\r\n          onClick={() => setIsShowingAll(!isShowingAll)}\r\n        >\r\n          {isShowingAll ? (\r\n            <Trans message=\"Show less\" />\r\n          ) : (\r\n            <Trans message=\"Show more\" />\r\n          )}\r\n        </Button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useSettings} from '@common/core/settings/use-settings';\r\nimport {useAuth} from '@common/auth/use-auth';\r\n\r\nexport function useCommentPermissions() {\r\n  const {player} = useSettings();\r\n  const {hasPermission} = useAuth();\r\n  const canView = player?.track_comments && hasPermission('comments.view');\r\n  return {canView, canCreate: canView && hasPermission('comments.create')};\r\n}\r\n","import {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport React, {Fragment} from 'react';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\r\nimport {\r\n  actionButtonClassName,\r\n  MediaPageHeaderLayout,\r\n} from '@app/web-player/layout/media-page-header-layout';\r\nimport {AvatarGroup} from '@common/ui/images/avatar-group';\r\nimport {Avatar} from '@common/ui/images/avatar';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {getSmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\r\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\r\nimport {CommentList} from '@common/comments/comment-list/comment-list';\r\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\r\nimport {FocusScope} from '@react-aria/focus';\r\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {Link} from 'react-router-dom';\r\nimport {TruncatedDescription} from '@common/ui/truncated-description';\r\nimport {CommentBarContextProvider} from '@app/web-player/tracks/waveform/comment-bar-context';\r\nimport {CommentBarNewCommentForm} from '@app/web-player/tracks/waveform/comment-bar-new-comment-form';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {useCommentPermissions} from '@app/web-player/tracks/hooks/use-comment-permissions';\r\n\r\nexport function AlbumPage() {\r\n  const {canView: showComments, canCreate: allowCommenting} =\r\n    useCommentPermissions();\r\n  const query = useAlbum({loader: 'albumPage'});\r\n  const {canEdit} = useAlbumPermissions(query.data?.album);\r\n\r\n  if (query.data) {\r\n    return (\r\n      <div>\r\n        <CommentBarContextProvider>\r\n          <PageMetaTags query={query} />\r\n          <AdHost slot=\"general_top\" className=\"mb-44\" />\r\n          <AlbumPageHeader album={query.data.album} />\r\n          {allowCommenting ? (\r\n            <CommentBarNewCommentForm\r\n              className=\"mb-16\"\r\n              commentable={query.data.album}\r\n            />\r\n          ) : null}\r\n        </CommentBarContextProvider>\r\n        {query.data.album.tags?.length ? (\r\n          <FocusScope>\r\n            <ChipList className=\"mb-16\" selectable>\r\n              {query.data.album.tags.map(tag => (\r\n                <Chip elementType={Link} to={`/tag/${tag.name}`} key={tag.id}>\r\n                  #{tag.display_name || tag.name}\r\n                </Chip>\r\n              ))}\r\n            </ChipList>\r\n          </FocusScope>\r\n        ) : null}\r\n        <TruncatedDescription\r\n          description={query.data.album.description}\r\n          className=\"mt-24 text-sm\"\r\n        />\r\n        <AdHost slot=\"album_above\" className=\"mt-34\" />\r\n        <AlbumTrackTable album={query.data.album} />\r\n        {showComments && (\r\n          <CommentList\r\n            className=\"mt-34\"\r\n            commentable={query.data.album}\r\n            canDeleteAllComments={canEdit}\r\n          />\r\n        )}\r\n        <AdHost slot=\"general_bottom\" className=\"mt-44\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n      loaderIsScreen={false}\r\n    />\r\n  );\r\n}\r\n\r\ninterface AlbumTrackTableProps {\r\n  album: Album;\r\n}\r\nfunction AlbumTrackTable({album}: AlbumTrackTableProps) {\r\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(\r\n    album.tracks,\r\n  );\r\n  return (\r\n    <div className=\"mt-44\">\r\n      <TrackTable\r\n        queueGroupId={queueGroupId(album)}\r\n        tracks={data}\r\n        sortDescriptor={sortDescriptor}\r\n        onSortChange={onSortChange}\r\n        hideTrackImage\r\n        hideArtist\r\n        hideAlbum\r\n        hidePopularity={false}\r\n      />\r\n      {!album.tracks?.length ? (\r\n        <IllustratedMessage\r\n          className=\"mt-34\"\r\n          title={<Trans message=\"Nothing to display\" />}\r\n          description={\r\n            <Trans message=\"This album does not have any tracks yet\" />\r\n          }\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PlaylistPageHeaderProps {\r\n  album: Album;\r\n}\r\nfunction AlbumPageHeader({album}: PlaylistPageHeaderProps) {\r\n  const totalDuration = album.tracks?.reduce(\r\n    (t, track) => t + (track.duration || 0),\r\n    0,\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <MediaPageHeaderLayout\r\n        className=\"mb-28\"\r\n        image={<AlbumImage album={album} className=\"rounded\" />}\r\n        title={album.name}\r\n        subtitle={\r\n          <AvatarGroup>\r\n            {album.artists?.map(artist => (\r\n              <Avatar\r\n                key={artist.id}\r\n                circle\r\n                src={getSmallArtistImage(artist)}\r\n                label={artist.name}\r\n                link={getArtistLink(artist)}\r\n              />\r\n            ))}\r\n          </AvatarGroup>\r\n        }\r\n        description={\r\n          <BulletSeparatedItems className=\"text-sm text-muted\">\r\n            {album.tracks?.length ? (\r\n              <Trans\r\n                message=\"[one 1 track|other :count tracks]\"\r\n                values={{count: album.tracks.length}}\r\n              />\r\n            ) : null}\r\n            {album.tracks?.length ? (\r\n              <FormattedDuration ms={totalDuration} verbose />\r\n            ) : null}\r\n            <FormattedDate date={album.release_date} />\r\n          </BulletSeparatedItems>\r\n        }\r\n        actionButtons={\r\n          <TrackActionsBar\r\n            item={album}\r\n            managesItem={false}\r\n            buttonGap={undefined}\r\n            buttonSize=\"sm\"\r\n            buttonRadius=\"rounded-full\"\r\n            buttonClassName={actionButtonClassName()}\r\n          >\r\n            <PlaybackToggleButton\r\n              disabled={!album.tracks?.length}\r\n              buttonType=\"text\"\r\n              queueId={queueGroupId(album)}\r\n              className={actionButtonClassName({isFirst: true})}\r\n            />\r\n          </TrackActionsBar>\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {\r\n  useInfiniteData,\r\n  UseInfiniteDataProps,\r\n} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nexport const libraryTracksQueryKey = (userId: number | 'me') => {\r\n  const user = getBootstrapData().user;\r\n  // make sure we are using \"me\" as ID for current user\r\n  // everywhere, so it's easier to invalidate queries\r\n  if (userId === user?.id) {\r\n    userId = 'me';\r\n  }\r\n  return ['tracks', 'library', userId];\r\n};\r\n\r\nexport function useUserLikedTracks(\r\n  userId: number | 'me',\r\n  options?: Partial<UseInfiniteDataProps<Track>>\r\n) {\r\n  return useInfiniteData<Track>({\r\n    queryKey: libraryTracksQueryKey(userId),\r\n    endpoint: `users/${userId}/liked-tracks`,\r\n    defaultOrderBy: 'likes.created_at',\r\n    defaultOrderDir: 'desc',\r\n    ...options,\r\n  });\r\n}\r\n","import {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\r\nimport React from 'react';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {PageErrorMessage} from '@common/errors/page-error-message';\r\nimport {TableDataItem} from '@common/ui/tables/types/table-data-item';\r\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\r\nimport {useUserLikedTracks} from '@app/web-player/library/requests/use-user-liked-tracks';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nexport function LibraryTracksPage() {\r\n  const trackCount = useLibraryStore(s => Object.keys(s.track).length);\r\n\r\n  const query = useUserLikedTracks('me', {willSortOrFilter: true});\r\n  const {\r\n    isInitialLoading,\r\n    sortDescriptor,\r\n    setSortDescriptor,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    items,\r\n    isError,\r\n  } = query;\r\n\r\n  const {user} = useAuth();\r\n  const {trans} = useTrans();\r\n  const queueId = queueGroupId(user!, 'libraryTracks', sortDescriptor);\r\n\r\n  if (isError) {\r\n    return <PageErrorMessage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Your tracks\" />\r\n      </StaticPageTitle>\r\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n      <div className=\"flex flex-wrap items-center gap-24 justify-between mb-34\">\r\n        <h1 className=\"text-2xl font-semibold w-max md:w-full whitespace-nowrap\">\r\n          {trackCount ? (\r\n            <Trans\r\n              message=\"[one 1 liked song|other :count liked songs]\"\r\n              values={{count: trackCount}}\r\n            />\r\n          ) : (\r\n            <Trans message=\"My songs\" />\r\n          )}\r\n        </h1>\r\n        <PlaybackToggleButton\r\n          queueId={queueId}\r\n          buttonType=\"text\"\r\n          className=\"min-w-128 flex-shrink-0\"\r\n        />\r\n        <TextField\r\n          value={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value)}\r\n          className=\"max-w-512 flex-auto\"\r\n          size=\"sm\"\r\n          startAdornment={<SearchIcon />}\r\n          placeholder={trans(message('Search within tracks'))}\r\n        />\r\n      </div>\r\n      <TrackTable\r\n        queueGroupId={queueId}\r\n        tracks={isInitialLoading ? getPlaceholderItems(trackCount) : items}\r\n        sortDescriptor={sortDescriptor}\r\n        onSortChange={setSortDescriptor}\r\n        hideAddedAtColumn={false}\r\n        tableBody={<VirtualTableBody query={query} totalItems={trackCount} />}\r\n      />\r\n      {!items.length && !isInitialLoading && (\r\n        <MediaPageNoResultsMessage\r\n          className=\"mt-34\"\r\n          searchQuery={searchQuery}\r\n          description={\r\n            <Trans message=\"You have not added any songs to your library yet.\" />\r\n          }\r\n        />\r\n      )}\r\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getPlaceholderItems(totalTracks: number): TableDataItem[] {\r\n  // 30 tracks per page by default\r\n  return [...new Array(Math.min(totalTracks, 30)).keys()].map((key, index) => {\r\n    return {\r\n      isPlaceholder: true,\r\n      id: `placeholder-${key}`,\r\n    };\r\n  });\r\n}\r\n","import {SortDescriptor} from '@common/ui/tables/types/sort-descriptor';\r\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport React from 'react';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {SortIcon} from '@common/icons/material/Sort';\r\n\r\ninterface Props {\r\n  items: Record<string, MessageDescriptor>;\r\n  sortDescriptor: SortDescriptor;\r\n  setSortDescriptor: (sort: SortDescriptor) => void;\r\n}\r\nexport function LibraryPageSortDropdown({\r\n  items,\r\n  sortDescriptor,\r\n  setSortDescriptor,\r\n}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const selectedValue = `${sortDescriptor.orderBy}:${sortDescriptor.orderDir}`;\r\n  return (\r\n    <MenuTrigger\r\n      selectionMode=\"single\"\r\n      selectedValue={selectedValue}\r\n      onSelectionChange={newValue => {\r\n        const [orderBy, orderDir] = (newValue as string).split(':');\r\n        setSortDescriptor({\r\n          orderBy,\r\n          orderDir: orderDir as SortDescriptor['orderDir'],\r\n        });\r\n      }}\r\n    >\r\n      {isMobile ? (\r\n        <IconButton>\r\n          <SortIcon />\r\n        </IconButton>\r\n      ) : (\r\n        <Button\r\n          variant=\"outline\"\r\n          className=\"flex-shrink-0\"\r\n          endIcon={<ArrowDropDownIcon />}\r\n        >\r\n          <Trans {...items[selectedValue]} />\r\n        </Button>\r\n      )}\r\n      <Menu>\r\n        {Object.entries(items).map(([value, label]) => (\r\n          <Item key={value} value={value}>\r\n            <Trans {...label} />\r\n          </Item>\r\n        ))}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {\r\n  useInfiniteData,\r\n  UseInfiniteDataProps,\r\n} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nexport const libraryAlbumsQueryKey = (\r\n  userId: number | 'me',\r\n  queryParams?: Record<string, string | number>\r\n) => {\r\n  const user = getBootstrapData().user;\r\n  // make sure we are using \"me\" as ID for current user\r\n  // everywhere, so it's easier to invalidate queries\r\n  if (userId === user?.id) {\r\n    userId = 'me';\r\n  }\r\n  const key: any[] = ['albums', 'library', userId];\r\n  if (queryParams) {\r\n    key.push(queryParams);\r\n  }\r\n  return key;\r\n};\r\n\r\nexport function useUserLikedAlbums(\r\n  userId: number | 'me',\r\n  options?: Partial<UseInfiniteDataProps<Album>>\r\n) {\r\n  return useInfiniteData<Album>({\r\n    queryKey: libraryAlbumsQueryKey(userId),\r\n    endpoint: `users/${userId}/liked-albums`,\r\n    defaultOrderBy: 'likes.created_at',\r\n    defaultOrderDir: 'desc',\r\n    ...options,\r\n  });\r\n}\r\n","import {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\r\nimport React from 'react';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {PageErrorMessage} from '@common/errors/page-error-message';\r\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\r\nimport {PlayableMediaGridSkeleton} from '@app/web-player/playable-item/player-media-grid-skeleton';\r\nimport {LibraryPageSortDropdown} from '@app/web-player/library/library-page-sort-dropdown';\r\nimport {useUserLikedAlbums} from '@app/web-player/library/requests/use-user-liked-albums';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nconst sortItems = {\r\n  'likes.created_at:desc': message('Recently added'),\r\n  'name:asc': message('A-Z'),\r\n  'release_date:desc': message('Release date'),\r\n};\r\n\r\nexport function LibraryAlbumsPage() {\r\n  const {trans} = useTrans();\r\n  const totalItems = useLibraryStore(s => Object.keys(s.album).length);\r\n  const query = useUserLikedAlbums('me', {willSortOrFilter: true});\r\n  const {\r\n    isLoading,\r\n    sortDescriptor,\r\n    setSortDescriptor,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    items,\r\n    isError,\r\n  } = query;\r\n\r\n  if (isError) {\r\n    return <PageErrorMessage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Your albums\" />\r\n      </StaticPageTitle>\r\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n      <h1 className=\"mb-20 text-2xl font-semibold\">\r\n        {totalItems ? (\r\n          <Trans\r\n            message=\"[one 1 liked album|other :count liked albums]\"\r\n            values={{count: totalItems}}\r\n          />\r\n        ) : (\r\n          <Trans message=\"My albums\" />\r\n        )}\r\n      </h1>\r\n      <div className=\"flex items-center justify-between gap-24\">\r\n        <TextField\r\n          value={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value)}\r\n          className=\"max-w-512 flex-auto\"\r\n          size=\"sm\"\r\n          startAdornment={<SearchIcon />}\r\n          placeholder={trans(message('Search within albums'))}\r\n        />\r\n        <LibraryPageSortDropdown\r\n          items={sortItems}\r\n          sortDescriptor={sortDescriptor}\r\n          setSortDescriptor={setSortDescriptor}\r\n        />\r\n      </div>\r\n      <div className=\"mt-34\">\r\n        <AnimatePresence initial={false} mode=\"wait\">\r\n          {isLoading ? (\r\n            <PlayableMediaGridSkeleton itemCount={totalItems} />\r\n          ) : (\r\n            <m.div key=\"media-grid\" {...opacityAnimation}>\r\n              <ContentGrid>\r\n                {items.map(album => (\r\n                  <AlbumGridItem key={album.id} album={album} />\r\n                ))}\r\n                <InfiniteScrollSentinel query={query} />\r\n              </ContentGrid>\r\n            </m.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      {!items.length && !isLoading && (\r\n        <MediaPageNoResultsMessage\r\n          className=\"mt-34\"\r\n          searchQuery={searchQuery}\r\n          description={\r\n            <Trans message=\"You have not added any albums to your library yet.\" />\r\n          }\r\n        />\r\n      )}\r\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  useInfiniteData,\r\n  UseInfiniteDataProps,\r\n} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\n\r\nexport const libraryArtistsQueryKey = (userId: number | 'me') => {\r\n  const user = getBootstrapData().user;\r\n  // make sure we are using \"me\" as ID for current user\r\n  // everywhere, so it's easier to invalidate queries\r\n  if (userId === user?.id) {\r\n    userId = 'me';\r\n  }\r\n  return ['artists', 'library', userId];\r\n};\r\n\r\nexport function useUserLikedArtists(\r\n  userId: number | 'me',\r\n  options?: Partial<UseInfiniteDataProps<Artist>>\r\n) {\r\n  return useInfiniteData<Artist>({\r\n    queryKey: libraryArtistsQueryKey(userId),\r\n    endpoint: `users/${userId}/liked-artists`,\r\n    defaultOrderBy: 'likes.created_at',\r\n    defaultOrderDir: 'desc',\r\n    ...options,\r\n  });\r\n}\r\n","import {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useLibraryStore} from '@app/web-player/library/state/likes-store';\r\nimport React from 'react';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {PageErrorMessage} from '@common/errors/page-error-message';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\r\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\r\nimport {PlayableMediaGridSkeleton} from '@app/web-player/playable-item/player-media-grid-skeleton';\r\nimport {LibraryPageSortDropdown} from '@app/web-player/library/library-page-sort-dropdown';\r\nimport {useUserLikedArtists} from '@app/web-player/library/requests/use-user-liked-artists';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nconst sortItems = {\r\n  'likes.created_at:desc': message('Recently added'),\r\n  'name:asc': message('A-Z'),\r\n};\r\n\r\nexport function LibraryArtistsPage() {\r\n  const {trans} = useTrans();\r\n  const totalItems = useLibraryStore(s => Object.keys(s.artist).length);\r\n  const query = useUserLikedArtists('me', {willSortOrFilter: true});\r\n  const {\r\n    isInitialLoading,\r\n    sortDescriptor,\r\n    setSortDescriptor,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    items,\r\n    isError,\r\n  } = query;\r\n\r\n  if (isError) {\r\n    return <PageErrorMessage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Your artists\" />\r\n      </StaticPageTitle>\r\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n      <h1 className=\"text-2xl font-semibold mb-20\">\r\n        {totalItems ? (\r\n          <Trans\r\n            message=\"[one 1 liked artist|other :count liked artists]\"\r\n            values={{count: totalItems}}\r\n          />\r\n        ) : (\r\n          <Trans message=\"My artists\" />\r\n        )}\r\n      </h1>\r\n      <div className=\"flex items-center gap-24 justify-between\">\r\n        <TextField\r\n          value={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value)}\r\n          className=\"max-w-512 flex-auto\"\r\n          size=\"sm\"\r\n          startAdornment={<SearchIcon />}\r\n          placeholder={trans(message('Search within artists'))}\r\n        />\r\n        <LibraryPageSortDropdown\r\n          items={sortItems}\r\n          sortDescriptor={sortDescriptor}\r\n          setSortDescriptor={setSortDescriptor}\r\n        />\r\n      </div>\r\n      <div className=\"mt-34\">\r\n        <AnimatePresence initial={false} mode=\"wait\">\r\n          {isInitialLoading ? (\r\n            <PlayableMediaGridSkeleton\r\n              itemCount={totalItems}\r\n              itemRadius=\"rounded-full\"\r\n              showDescription={false}\r\n            />\r\n          ) : (\r\n            <m.div key=\"media-grid\" {...opacityAnimation}>\r\n              <ContentGrid>\r\n                {items.map(artist => (\r\n                  <ArtistGridItem key={artist.id} artist={artist} />\r\n                ))}\r\n                <InfiniteScrollSentinel query={query} />\r\n              </ContentGrid>\r\n            </m.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      {!items.length && !isInitialLoading && (\r\n        <MediaPageNoResultsMessage\r\n          className=\"mt-34\"\r\n          searchQuery={searchQuery}\r\n          description={\r\n            <Trans message=\"You have not added any artists to your library yet.\" />\r\n          }\r\n        />\r\n      )}\r\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\r\n    </div>\r\n  );\r\n}\r\n","import {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {VirtualTableBody} from '@app/web-player/playlists/virtual-table-body';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {PageErrorMessage} from '@common/errors/page-error-message';\r\nimport {TableDataItem} from '@common/ui/tables/types/table-data-item';\r\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nexport const libraryHistoryQueryKey = ['tracks', 'history', 'me'];\r\n\r\nexport function LibraryHistoryPage() {\r\n  const {user} = useAuth();\r\n\r\n  const query = useInfiniteData<Track>({\r\n    queryKey: libraryHistoryQueryKey,\r\n    endpoint: `tracks/plays/${user!.id}`,\r\n    defaultOrderBy: 'track_plays.created_at',\r\n    defaultOrderDir: 'desc',\r\n    paginate: 'simple',\r\n    willSortOrFilter: false,\r\n  });\r\n  const {isInitialLoading, searchQuery, setSearchQuery, items, isError} = query;\r\n\r\n  const {trans} = useTrans();\r\n  const queueId = queueGroupId(user!, 'playHistory');\r\n\r\n  if (isError) {\r\n    return <PageErrorMessage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Listening history\" />\r\n      </StaticPageTitle>\r\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n      <div className=\"flex flex-wrap items-center gap-24 justify-between mb-34\">\r\n        <h1 className=\"text-2xl font-semibold w-max md:w-full whitespace-nowrap\">\r\n          <Trans message=\"Listening history\" />\r\n        </h1>\r\n        <PlaybackToggleButton\r\n          queueId={queueId}\r\n          buttonType=\"text\"\r\n          className=\"min-w-128 flex-shrink-0\"\r\n        />\r\n        <TextField\r\n          value={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value)}\r\n          className=\"max-w-512 flex-auto\"\r\n          size=\"sm\"\r\n          startAdornment={<SearchIcon />}\r\n          placeholder={trans(message('Search within history'))}\r\n        />\r\n      </div>\r\n      <TrackTable\r\n        enableSorting={false}\r\n        queueGroupId={queueId}\r\n        tracks={isInitialLoading ? getPlaceholderItems() : items}\r\n        hideAddedAtColumn={false}\r\n        tableBody={<VirtualTableBody query={query} />}\r\n      />\r\n      {!items.length && !isInitialLoading && (\r\n        <MediaPageNoResultsMessage\r\n          className=\"mt-34\"\r\n          searchQuery={searchQuery}\r\n          description={<Trans message=\"You have not played any songs yet.\" />}\r\n        />\r\n      )}\r\n      <AdHost slot=\"general_bottom\" className=\"mt-34\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getPlaceholderItems(): TableDataItem[] {\r\n  // 30 tracks per page by default\r\n  return [...new Array(10).keys()].map(key => {\r\n    return {\r\n      isPlaceholder: true,\r\n      id: `placeholder-${key}`,\r\n    };\r\n  });\r\n}\r\n","import {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport React, {Fragment} from 'react';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {\r\n  actionButtonClassName,\r\n  MediaPageHeaderLayout,\r\n} from '@app/web-player/layout/media-page-header-layout';\r\nimport {AvatarGroup} from '@common/ui/images/avatar-group';\r\nimport {Avatar} from '@common/ui/images/avatar';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {getSmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\r\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\r\nimport {CommentList} from '@common/comments/comment-list/comment-list';\r\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\r\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {TruncatedDescription} from '@common/ui/truncated-description';\r\nimport {Waveform} from '@app/web-player/tracks/waveform/waveform';\r\nimport {CommentBarContextProvider} from '@app/web-player/tracks/waveform/comment-bar-context';\r\nimport {CommentBarNewCommentForm} from '@app/web-player/tracks/waveform/comment-bar-new-comment-form';\r\nimport {GenreLink} from '@app/web-player/genres/genre-link';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {TrackActionsBar} from '@app/web-player/tracks/track-actions-bar';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\r\nimport {Link} from 'react-router-dom';\r\nimport {FocusScope} from '@react-aria/focus';\r\nimport {trackIsLocallyUploaded} from '@app/web-player/tracks/utils/track-is-locally-uploaded';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {useCommentPermissions} from '@app/web-player/tracks/hooks/use-comment-permissions';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\nexport function TrackPage() {\r\n  const {canView: showComments, canCreate: allowCommenting} =\r\n    useCommentPermissions();\r\n  const query = useTrack({loader: 'trackPage'});\r\n  const {canEdit} = useTrackPermissions([query.data?.track]);\r\n\r\n  if (query.data) {\r\n    return (\r\n      <div>\r\n        <CommentBarContextProvider>\r\n          <PageMetaTags query={query} />\r\n          <AdHost slot=\"general_top\" className=\"mb-44\" />\r\n          <TrackPageHeader track={query.data.track} />\r\n          {allowCommenting ? (\r\n            <CommentBarNewCommentForm\r\n              className=\"mb-16\"\r\n              commentable={query.data.track}\r\n            />\r\n          ) : null}\r\n        </CommentBarContextProvider>\r\n        {query.data.track.tags.length ? (\r\n          <FocusScope>\r\n            <ChipList className=\"mb-16\" selectable>\r\n              {query.data.track.tags.map(tag => (\r\n                <Chip elementType={Link} to={`/tag/${tag.name}`} key={tag.id}>\r\n                  #{tag.display_name || tag.name}\r\n                </Chip>\r\n              ))}\r\n            </ChipList>\r\n          </FocusScope>\r\n        ) : null}\r\n        <TruncatedDescription\r\n          description={query.data.track.description}\r\n          className=\"mt-24 text-sm\"\r\n        />\r\n        {showComments ? (\r\n          <CommentList\r\n            className=\"mt-34\"\r\n            commentable={query.data.track}\r\n            canDeleteAllComments={canEdit}\r\n          />\r\n        ) : null}\r\n        {query.data.track.album && (\r\n          <AlbumTrackTable album={query.data.track.album} />\r\n        )}\r\n        <AdHost slot=\"general_bottom\" className=\"mt-44\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderIsScreen={false}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n    />\r\n  );\r\n}\r\n\r\ninterface AlbumTrackTableProps {\r\n  album: Album;\r\n}\r\nfunction AlbumTrackTable({album}: AlbumTrackTableProps) {\r\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(\r\n    album.tracks,\r\n  );\r\n  return (\r\n    <div className=\"mt-44\">\r\n      <div className=\"mb-14 flex items-center gap-16 overflow-hidden rounded bg-hover\">\r\n        <AlbumImage\r\n          album={album}\r\n          className=\"flex-shrink-0 rounded\"\r\n          size=\"w-70 h-70\"\r\n        />\r\n        <div className=\"flex-auto\">\r\n          <div className=\"text-sm\">\r\n            <Trans message=\"From the album\" />\r\n          </div>\r\n          <div className=\"text-sm font-semibold\">{album.name}</div>\r\n        </div>\r\n      </div>\r\n      <TrackTable\r\n        queueGroupId={queueGroupId(album)}\r\n        tracks={data}\r\n        sortDescriptor={sortDescriptor}\r\n        onSortChange={onSortChange}\r\n        hideTrackImage\r\n        hideArtist\r\n        hideAlbum\r\n        hidePopularity={false}\r\n      />\r\n      {!album.tracks?.length ? (\r\n        <IllustratedMessage\r\n          className=\"mt-34\"\r\n          title={<Trans message=\"Nothing to display\" />}\r\n          description={\r\n            <Trans message=\"This album does not have any tracks yet\" />\r\n          }\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface TrackPageHeaderProps {\r\n  track: Track;\r\n}\r\nfunction TrackPageHeader({track}: TrackPageHeaderProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const {player} = useSettings();\r\n  const releaseDate = track.album?.release_date || track.created_at;\r\n  const genre = track.genres?.[0];\r\n\r\n  const showWave =\r\n    !isMobile &&\r\n    player?.seekbar_type === 'waveform' &&\r\n    trackIsLocallyUploaded(track);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MediaPageHeaderLayout\r\n        className=\"mb-28\"\r\n        image={<TrackImage track={track} />}\r\n        title={track.name}\r\n        subtitle={\r\n          <AvatarGroup>\r\n            {track.artists?.map(artist => (\r\n              <Avatar\r\n                key={artist.id}\r\n                circle\r\n                src={getSmallArtistImage(artist)}\r\n                label={artist.name}\r\n                link={getArtistLink(artist)}\r\n              />\r\n            ))}\r\n          </AvatarGroup>\r\n        }\r\n        description={\r\n          <BulletSeparatedItems className=\"text-sm text-muted\">\r\n            {track.duration ? (\r\n              <FormattedDuration ms={track.duration} verbose />\r\n            ) : null}\r\n            {releaseDate && <FormattedDate date={releaseDate} />}\r\n            {genre && <GenreLink genre={genre} />}\r\n            {track.plays && !player?.enable_repost ? (\r\n              <Trans\r\n                message=\":count plays\"\r\n                values={{count: <FormattedNumber value={track.plays} />}}\r\n              />\r\n            ) : null}\r\n          </BulletSeparatedItems>\r\n        }\r\n        actionButtons={\r\n          <TrackActionsBar\r\n            item={track}\r\n            managesItem={false}\r\n            buttonGap={undefined}\r\n            buttonSize=\"sm\"\r\n            buttonRadius=\"rounded-full\"\r\n            buttonClassName={actionButtonClassName()}\r\n          >\r\n            <PlaybackToggleButton\r\n              buttonType=\"text\"\r\n              track={track}\r\n              tracks={\r\n                track.album?.tracks?.length ? track.album.tracks : undefined\r\n              }\r\n              className={actionButtonClassName({isFirst: true})}\r\n              queueId={queueGroupId(track.album || track)}\r\n            />\r\n          </TrackActionsBar>\r\n        }\r\n        footer={\r\n          showWave ? (\r\n            <Waveform track={track} className=\"max-md:hidden\" />\r\n          ) : undefined\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useParams} from 'react-router-dom';\r\nimport {User} from '@common/auth/user';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nexport interface GetUserProfileResponse extends BackendResponse {\r\n  user: User;\r\n  loader: Params['loader'];\r\n}\r\n\r\ninterface Params {\r\n  loader: 'userProfilePage';\r\n}\r\n\r\nexport function useUserProfile(params: Params) {\r\n  const {userId} = useParams();\r\n  return useQuery({\r\n    queryKey: userProfileQueryKey(userId!),\r\n    queryFn: () => fetchUser(userId!, params),\r\n    initialData: () => {\r\n      const data = getBootstrapData().loaders?.[params.loader];\r\n      if (data?.user?.id == userId && data?.loader === params.loader) {\r\n        return data;\r\n      }\r\n      return undefined;\r\n    },\r\n  });\r\n}\r\n\r\nfunction fetchUser(userId: number | string, params: Params) {\r\n  return apiClient\r\n    .get<GetUserProfileResponse>(`user-profile/${userId}`, {params})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function userProfileQueryKey(userId: number | string) {\r\n  return ['users', +userId, 'profile'];\r\n}\r\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {Repost} from '@app/web-player/reposts/repost';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TrackListItem} from '@app/web-player/tracks/track-list/track-list-item';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport React from 'react';\r\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\r\nimport {AlbumListItem} from '@app/web-player/albums/album-list/album-list-item';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {TrackGridItem} from '@app/web-player/tracks/track-grid-item';\r\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\nexport function ProfileRepostsPanel({user}: ProfileContentProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const query = useInfiniteData<Repost>({\r\n    queryKey: ['reposts', user.id],\r\n    endpoint: `users/${user.id}/reposts`,\r\n  });\r\n\r\n  if (query.isLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No reposts yet\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Follow :user for updates on tracks and albums they repost in the future.\"\r\n            values={{user: user.display_name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <div>\r\n        <ContentGrid>\r\n          {query.items.map(repost => {\r\n            if (repost.repostable?.model_type === 'track') {\r\n              return (\r\n                <TrackGridItem track={repost.repostable} key={repost.id} />\r\n              );\r\n            } else if (repost.repostable?.model_type === 'album') {\r\n              return (\r\n                <AlbumGridItem album={repost.repostable} key={repost.id} />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </ContentGrid>\r\n        <InfiniteScrollSentinel query={query} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {query.items.map(repost => {\r\n        if (repost.repostable?.model_type === 'track') {\r\n          return (\r\n            <TrackListItem\r\n              className=\"mb-40\"\r\n              key={repost.id}\r\n              track={repost.repostable}\r\n              reposter={user}\r\n            />\r\n          );\r\n        } else if (repost.repostable?.model_type === 'album') {\r\n          return (\r\n            <AlbumListItem\r\n              key={repost.id}\r\n              album={repost.repostable}\r\n              className=\"mb-40\"\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n","import {useUserLikedTracks} from '@app/web-player/library/requests/use-user-liked-tracks';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\r\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\r\n\r\nexport function ProfileTracksPanel({user}: ProfileContentProps) {\r\n  const query = useUserLikedTracks(user.id);\r\n\r\n  if (query.isLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" screen={false} />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No tracks yet\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Follow :user for updates on tracks they like in the future.\"\r\n            values={{user: user.display_name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return <TrackList query={query} />;\r\n}\r\n","import {\r\n  useInfiniteData,\r\n  UseInfiniteDataProps,\r\n} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\nimport {Playlist} from '@app/web-player/playlists/playlist';\r\n\r\nexport const libraryPlaylistsQueryKey = (\r\n  userId: number | 'me',\r\n  queryParams?: Record<string, string | number>\r\n) => {\r\n  const user = getBootstrapData().user;\r\n  // make sure we are using \"me\" as ID for current user\r\n  // everywhere, so it's easier to invalidate queries\r\n  if (userId === user?.id) {\r\n    userId = 'me';\r\n  }\r\n  const key: any[] = ['playlists', 'library', userId];\r\n  if (queryParams) {\r\n    key.push(queryParams);\r\n  }\r\n  return key;\r\n};\r\n\r\nexport function useUserPlaylists(\r\n  userId: number | 'me',\r\n  options?: Partial<UseInfiniteDataProps<Playlist>>\r\n) {\r\n  return useInfiniteData<Playlist>({\r\n    queryKey: libraryPlaylistsQueryKey(userId),\r\n    endpoint: `users/${userId}/playlists`,\r\n    defaultOrderBy: 'updated_at',\r\n    defaultOrderDir: 'desc',\r\n    ...options,\r\n  });\r\n}\r\n","import {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport React from 'react';\r\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\r\nimport {QueueMusicIcon} from '@common/icons/material/QueueMusic';\r\nimport {useUserPlaylists} from '@app/web-player/library/requests/use-user-playlists';\r\n\r\nexport function ProfilePlaylistsPanel({user}: ProfileContentProps) {\r\n  const query = useUserPlaylists(user.id);\r\n\r\n  if (query.isInitialLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<QueueMusicIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No playlists yet\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Follow :user for updates on playlists they create in the future.\"\r\n            values={{user: user.display_name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ContentGrid>\r\n        {query.items.map(playlist => (\r\n          <PlaylistGridItem key={playlist.id} playlist={playlist} />\r\n        ))}\r\n      </ContentGrid>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n","import {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\r\nimport {useUserLikedAlbums} from '@app/web-player/library/requests/use-user-liked-albums';\r\nimport {AlbumIcon} from '@common/icons/material/Album';\r\nimport {AlbumList} from '@app/web-player/albums/album-list/album-list';\r\n\r\nexport function ProfileAlbumsPanel({user}: ProfileContentProps) {\r\n  const query = useUserLikedAlbums(user.id, {\r\n    queryParams: {\r\n      with: 'tracks',\r\n    },\r\n  });\r\n\r\n  if (query.isInitialLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<AlbumIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No albums yet\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Follow :user for updates on albums they like in the future.\"\r\n            values={{user: user.display_name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return <AlbumList query={query} />;\r\n}\r\n","import {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport React from 'react';\r\nimport {ProfileContentProps} from '@app/web-player/user-profile/user-profile-page';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {useUserLikedArtists} from '@app/web-player/library/requests/use-user-liked-artists';\r\nimport {MicIcon} from '@common/icons/material/Mic';\r\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\r\n\r\nexport function ProfileArtistsPanel({user}: ProfileContentProps) {\r\n  const query = useUserLikedArtists(user.id);\r\n\r\n  if (query.isInitialLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<MicIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No artists yet\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Follow :user for updates on artists they like in the future.\"\r\n            values={{user: user.display_name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ContentGrid>\r\n        {query.items.map(artist => (\r\n          <ArtistGridItem key={artist.id} artist={artist} />\r\n        ))}\r\n      </ContentGrid>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {User} from '@common/auth/user';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport React from 'react';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {BookmarkBorderIcon} from '@common/icons/material/BookmarkBorder';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {FollowerListItem} from '@app/web-player/artists/artist-page/followers-panel/follower-list-item';\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\nexport function ProfileFollowersPanel({user}: Props) {\r\n  const query = useInfiniteData<User>({\r\n    queryKey: ['users', user.id, 'followers'],\r\n    endpoint: `users/${user.id}/followers`,\r\n  });\r\n\r\n  if (query.isLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<BookmarkBorderIcon size=\"lg\" className=\"text-muted\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Seems like no one is following :name yet.\"\r\n            values={{name: user.display_name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {query.items.map(follower => (\r\n        <FollowerListItem key={follower.id} follower={follower} />\r\n      ))}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {User} from '@common/auth/user';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport React from 'react';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {BookmarkBorderIcon} from '@common/icons/material/BookmarkBorder';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {FollowerListItem} from '@app/web-player/artists/artist-page/followers-panel/follower-list-item';\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\nexport function ProfileFollowedUsersPanel({user}: Props) {\r\n  const query = useInfiniteData<User>({\r\n    queryKey: ['users', user.id, 'followed-users'],\r\n    endpoint: `users/${user.id}/followed-users`,\r\n  });\r\n\r\n  if (query.isInitialLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<BookmarkBorderIcon size=\"lg\" className=\"text-muted\" />}\r\n        description={\r\n          <Trans\r\n            message=\"Seems like :name is not following anyone yet.\"\r\n            values={{name: user.display_name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {query.items.map(follower => (\r\n        <FollowerListItem key={follower.id} follower={follower} />\r\n      ))}\r\n      <InfiniteScrollSentinel query={query} />\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {UserLink} from '@app/web-player/user-profile/user-link';\r\nimport {userProfileQueryKey} from '@app/web-player/user-profile/requests/use-user-profile';\r\n\r\ninterface Response extends BackendResponse {\r\n  album: Album;\r\n}\r\n\r\nexport interface UpdateProfilePayload {\r\n  user: {\r\n    avatar?: string;\r\n    first_name?: string;\r\n    last_name?: string;\r\n    username?: string;\r\n  };\r\n  profile: {\r\n    city?: string;\r\n    country?: string;\r\n    description?: string;\r\n  };\r\n  links: UserLink[];\r\n}\r\n\r\nexport function useUpdateUserProfile(\r\n  form: UseFormReturn<UpdateProfilePayload>,\r\n) {\r\n  const {user} = useAuth();\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateProfilePayload) => updateProfile(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Profile updated')));\r\n      if (user) {\r\n        queryClient.invalidateQueries({queryKey: userProfileQueryKey(user.id)});\r\n      }\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateProfile(payload: UpdateProfilePayload): Promise<Response> {\r\n  return apiClient.put('users/profile/update', payload).then(r => r.data);\r\n}\r\n","import {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport React from 'react';\r\nimport {ComboBox, ComboboxProps} from './combobox';\r\n\r\ntype Props<T extends object> = ComboboxProps<T> & {\r\n  name: string;\r\n  selectionMode?: 'single';\r\n};\r\nexport function FormComboBox<T extends object>({children, ...props}: Props<T>) {\r\n  const {\r\n    field: {onChange, onBlur, value = '', ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name: props.name,\r\n  });\r\n\r\n  const formProps: Partial<ComboboxProps<T>> = {\r\n    onSelectionChange: onChange,\r\n    onBlur,\r\n    selectedValue: value,\r\n    defaultInputValue: value,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n  };\r\n\r\n  return (\r\n    <ComboBox ref={ref} {...mergeProps(formProps, props)}>\r\n      {children}\r\n    </ComboBox>\r\n  );\r\n}\r\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {\r\n  UpdateProfilePayload,\r\n  useUpdateUserProfile,\r\n} from '@app/web-player/user-profile/requests/use-update-user-profile';\r\nimport {useForm} from 'react-hook-form';\r\nimport {User} from '@common/auth/user';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ProfileLinksForm} from '@app/admin/artist-datatable-page/artist-form/profile-links-form';\r\nimport {Option} from '@common/ui/forms/combobox/combobox';\r\nimport {FormComboBox} from '@common/ui/forms/combobox/form-combobox';\r\nimport {useValueLists} from '@common/http/value-lists';\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\nexport function EditProfileDialog({user}: Props) {\r\n  const {close, formId} = useDialogContext();\r\n  const {data} = useValueLists(['countries']);\r\n  const form = useForm<UpdateProfilePayload>({\r\n    defaultValues: {\r\n      user: {\r\n        username: user.username,\r\n        avatar: user.avatar,\r\n        first_name: user.first_name,\r\n        last_name: user.last_name,\r\n      },\r\n      profile: {\r\n        city: user.profile?.city,\r\n        country: user.profile?.country,\r\n        description: user.profile?.description,\r\n      },\r\n      links: user.links,\r\n    },\r\n  });\r\n  const updateProfile = useUpdateUserProfile(form);\r\n  return (\r\n    <Dialog size=\"xl\">\r\n      <DialogHeader>\r\n        <Trans message=\"Edit your profile\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={values =>\r\n            updateProfile.mutate(values, {onSuccess: () => close()})\r\n          }\r\n        >\r\n          <FileUploadProvider>\r\n            <div className=\"md:flex items-start gap-30\">\r\n              <FormImageSelector\r\n                label={<Trans message=\"Avatar\" />}\r\n                name=\"user.avatar\"\r\n                diskPrefix=\"avatars\"\r\n                variant=\"square\"\r\n                previewSize=\"w-200 h-200\"\r\n                className=\"max-md:mb-20\"\r\n              />\r\n              <div className=\"flex-auto\">\r\n                <FormTextField\r\n                  name=\"user.username\"\r\n                  label={<Trans message=\"Username\" />}\r\n                  className=\"mb-24\"\r\n                />\r\n                <div className=\"flex items-center gap-24\">\r\n                  <FormTextField\r\n                    name=\"user.first_name\"\r\n                    label={<Trans message=\"First name\" />}\r\n                    className=\"flex-1 mb-24\"\r\n                  />\r\n                  <FormTextField\r\n                    name=\"user.last_name\"\r\n                    label={<Trans message=\"Last name\" />}\r\n                    className=\"flex-1 mb-24\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center gap-24\">\r\n                  <FormTextField\r\n                    name=\"profile.city\"\r\n                    label={<Trans message=\"City\" />}\r\n                    className=\"flex-1 mb-24\"\r\n                  />\r\n                  <FormComboBox\r\n                    className=\"flex-1 mb-24\"\r\n                    selectionMode=\"single\"\r\n                    name=\"profile.country\"\r\n                    label={<Trans message=\"Country\" />}\r\n                  >\r\n                    {data?.countries?.map(country => (\r\n                      <Option key={country.code} value={country.name}>\r\n                        {country.name}\r\n                      </Option>\r\n                    ))}\r\n                  </FormComboBox>\r\n                </div>\r\n                <FormTextField\r\n                  name=\"profile.description\"\r\n                  label={<Trans message=\"Description\" />}\r\n                  inputElementType=\"textarea\"\r\n                  rows={4}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-24\">\r\n              <div className=\"mb-16 pb-16 border-b\">\r\n                <Trans message=\"Your links\" />\r\n              </div>\r\n              <ProfileLinksForm />\r\n            </div>\r\n          </FileUploadProvider>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          type=\"submit\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={updateProfile.isPending}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useAuth} from '@common/auth/use-auth';\r\nimport {\r\n  actionButtonClassName,\r\n  MediaPageHeaderLayout,\r\n} from '@app/web-player/layout/media-page-header-layout';\r\nimport {UserImage} from '@app/web-player/users/user-image';\r\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\r\nimport {Link} from 'react-router-dom';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {ProfileDescription} from '@app/web-player/user-profile/profile-description';\r\nimport React from 'react';\r\nimport {User} from '@common/auth/user';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {EditIcon} from '@common/icons/material/Edit';\r\nimport {EditProfileDialog} from '@app/web-player/user-profile/edit-profile-dialog';\r\nimport {FollowButton} from '@common/users/follow-button';\r\n\r\ninterface ProfileHeaderProps {\r\n  user: User;\r\n  tabLink: (tabName: string) => string;\r\n}\r\n\r\nexport function ProfileHeader({user, tabLink}: ProfileHeaderProps) {\r\n  const {user: currentUser} = useAuth();\r\n\r\n  return (\r\n    <MediaPageHeaderLayout\r\n      image={\r\n        <UserImage\r\n          user={user}\r\n          size=\"w-240 h-240\"\r\n          className=\"rounded\"\r\n          showProBadge\r\n        />\r\n      }\r\n      title={user.display_name}\r\n      subtitle={\r\n        <BulletSeparatedItems className=\"z-20 mx-auto w-max text-sm text-muted\">\r\n          {user.followers_count && user.followers_count > 0 ? (\r\n            <Link to={tabLink('followers')} className=\"hover:underline\">\r\n              <Trans\r\n                message=\":count followers\"\r\n                values={{count: user.followers_count}}\r\n              />\r\n            </Link>\r\n          ) : null}\r\n          {user.followed_users_count && user.followed_users_count > 0 ? (\r\n            <Link to={tabLink('following')} className=\"hover:underline\">\r\n              <Trans\r\n                message=\"Following :count\"\r\n                values={{count: user.followed_users_count}}\r\n              />\r\n            </Link>\r\n          ) : null}\r\n        </BulletSeparatedItems>\r\n      }\r\n      actionButtons={\r\n        <div className=\"flex items-center justify-center md:justify-start\">\r\n          <FollowButton\r\n            user={user}\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            minWidth={null}\r\n            className={actionButtonClassName({isFirst: true})}\r\n            radius=\"rounded-full\"\r\n          />\r\n          {currentUser?.id === user.id && <EditButton user={user} />}\r\n        </div>\r\n      }\r\n      footer={<ProfileDescription profile={user.profile} links={user.links} />}\r\n    />\r\n  );\r\n}\r\n\r\ninterface EditButtonProps {\r\n  user: User;\r\n}\r\n\r\nfunction EditButton({user}: EditButtonProps) {\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Button\r\n        variant=\"outline\"\r\n        radius=\"rounded-full\"\r\n        startIcon={<EditIcon />}\r\n        className={actionButtonClassName()}\r\n      >\r\n        <Trans message=\"Edit\" />\r\n      </Button>\r\n      <EditProfileDialog user={user} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useUserProfile} from '@app/web-player/user-profile/requests/use-user-profile';\r\nimport {User} from '@common/auth/user';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport React, {Fragment, useCallback} from 'react';\r\nimport {Tabs} from '@common/ui/tabs/tabs';\r\nimport {TabList} from '@common/ui/tabs/tab-list';\r\nimport {Tab} from '@common/ui/tabs/tab';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {ProfileRepostsPanel} from '@app/web-player/user-profile/panels/profile-reposts-panel';\r\nimport {ProfileTracksPanel} from '@app/web-player/user-profile/panels/profile-tracks-panel';\r\nimport {ProfilePlaylistsPanel} from '@app/web-player/user-profile/panels/profile-playlists-panel';\r\nimport {ProfileAlbumsPanel} from '@app/web-player/user-profile/panels/profile-albums-panel';\r\nimport {ProfileArtistsPanel} from '@app/web-player/user-profile/panels/profile-artists-panel';\r\nimport {ProfileFollowersPanel} from '@app/web-player/user-profile/panels/profile-followers-panel';\r\nimport {ProfileFollowedUsersPanel} from '@app/web-player/user-profile/panels/profile-followed-users-panel';\r\nimport {ProfileHeader} from '@app/web-player/user-profile/header/profile-header';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nconst profileTabs = [\r\n  'tracks',\r\n  'playlists',\r\n  'reposts',\r\n  'albums',\r\n  'artists',\r\n  'followers',\r\n  'following',\r\n];\r\n\r\nif (!getBootstrapData().settings.player?.enable_repost) {\r\n  profileTabs.splice(2, 1);\r\n}\r\n\r\nexport function UserProfilePage() {\r\n  const query = useUserProfile({loader: 'userProfilePage'});\r\n\r\n  if (query.data) {\r\n    return <PageContent user={query.data.user} />;\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderIsScreen={false}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n    />\r\n  );\r\n}\r\n\r\nexport interface ProfileContentProps {\r\n  user: User;\r\n}\r\nfunction PageContent({user}: ProfileContentProps) {\r\n  const {player} = useSettings();\r\n  const {tabName = 'tracks'} = useParams();\r\n\r\n  const selectedTab = profileTabs.indexOf(tabName) || 0;\r\n\r\n  const tabLink = useCallback(\r\n    (tabName: string) => {\r\n      return `/user/${user.id}/${user.display_name}/${tabName}`;\r\n    },\r\n    [user],\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <ProfileHeader user={user} tabLink={tabLink} />\r\n      <Tabs className=\"mt-48\" isLazy selectedTab={selectedTab}>\r\n        <TabList>\r\n          <Tab elementType={Link} to={tabLink('tracks')}>\r\n            <Trans message=\"Liked tracks\" />\r\n          </Tab>\r\n          <Tab elementType={Link} to={tabLink('playlists')}>\r\n            <Trans message=\"Public playlists\" />\r\n          </Tab>\r\n          {player?.enable_repost && (\r\n            <Tab elementType={Link} to={tabLink('reposts')}>\r\n              <Trans message=\"Reposts\" />\r\n            </Tab>\r\n          )}\r\n          <Tab elementType={Link} to={tabLink('albums')}>\r\n            <Trans message=\"Liked albums\" />\r\n          </Tab>\r\n          <Tab elementType={Link} to={tabLink('artists')}>\r\n            <Trans message=\"Liked artists\" />\r\n          </Tab>\r\n          <Tab elementType={Link} to={tabLink('followers')}>\r\n            <Trans message=\"Followers\" />\r\n          </Tab>\r\n          <Tab elementType={Link} to={tabLink('following')}>\r\n            <Trans message=\"Following\" />\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanels className=\"mt-24\">\r\n          <TabPanel>\r\n            <ProfileTracksPanel user={user} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <ProfilePlaylistsPanel user={user} />\r\n          </TabPanel>\r\n          {player?.enable_repost && (\r\n            <TabPanel>\r\n              <ProfileRepostsPanel user={user} />\r\n            </TabPanel>\r\n          )}\r\n          <TabPanel>\r\n            <ProfileAlbumsPanel user={user} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <ProfileArtistsPanel user={user} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <ProfileFollowersPanel user={user} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <ProfileFollowedUsersPanel user={user} />\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useInfiniteData} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React, {useState} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {AlbumIcon} from '@common/icons/material/Album';\r\nimport {Tabs} from '@common/ui/tabs/tabs';\r\nimport {TabList} from '@common/ui/tabs/tab-list';\r\nimport {Tab} from '@common/ui/tabs/tab';\r\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\r\nimport {TrackList} from '@app/web-player/tracks/track-list/track-list';\r\nimport {AlbumList} from '@app/web-player/albums/album-list/album-list';\r\n\r\nconst tagTabNames = {\r\n  tracks: 0,\r\n  albums: 1,\r\n};\r\n\r\nexport function TagMediaPage() {\r\n  const params = useParams();\r\n  const tagName = params.tagName!;\r\n  const tabName = params['*']?.split('/').pop() || tagTabNames.tracks;\r\n  const [selectedTab, setSelectedTab] = useState(\r\n    tagTabNames[tabName as keyof typeof tagTabNames] || 0,\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-3xl mb-40\">\r\n        {tabName === 'albums' ? (\r\n          <Trans\r\n            message=\"Most popular albums for #:tag\"\r\n            values={{tag: tagName}}\r\n          />\r\n        ) : (\r\n          <Trans\r\n            message=\"Most popular tracks for #:tag\"\r\n            values={{tag: tagName}}\r\n          />\r\n        )}\r\n      </h1>\r\n      <Tabs selectedTab={selectedTab} onTabChange={setSelectedTab}>\r\n        <TabList>\r\n          <Tab elementType={Link} to={`/tag/${tagName}`}>\r\n            <Trans message=\"Tracks\" />\r\n          </Tab>\r\n          <Tab elementType={Link} to={`/tag/${tagName}/albums`}>\r\n            <Trans message=\"Albums\" />\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanels className=\"pt-24\">\r\n          <TabPanel>\r\n            <TracksPanel tagName={tagName!} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <AlbumsPanel tagName={tagName!} />\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface TracksPanelProps {\r\n  tagName: string;\r\n}\r\nfunction AlbumsPanel({tagName}: TracksPanelProps) {\r\n  const query = useInfiniteData<Album>({\r\n    queryKey: ['albums', 'tags', tagName],\r\n    endpoint: `tags/${tagName}/albums`,\r\n  });\r\n\r\n  if (query.isLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" screen={false} />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<AlbumIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No albums yet\" />}\r\n        description={\r\n          <Trans message=\"This tag is not attached to any albums yet, check back later.\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return <AlbumList query={query} />;\r\n}\r\n\r\nfunction TracksPanel({tagName}: TracksPanelProps) {\r\n  const query = useInfiniteData<Track>({\r\n    queryKey: ['tracks', 'tags', tagName],\r\n    endpoint: `tags/${tagName}/tracks`,\r\n  });\r\n\r\n  if (query.isLoading) {\r\n    return <FullPageLoader className=\"min-h-100\" screen={false} />;\r\n  }\r\n\r\n  if (!query.items.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-14\"\r\n        image={<AudiotrackIcon size=\"lg\" className=\"text-muted\" />}\r\n        title={<Trans message=\"No tracks yet\" />}\r\n        description={\r\n          <Trans message=\"This tag is not attached to any tracks yet, check back later.\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return <TrackList query={query} />;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\nimport {Genre} from '@app/web-player/genres/genre';\r\n\r\nexport type RadioSeed = Artist | Track | Genre;\r\n\r\ninterface Response extends BackendResponse {\r\n  type: 'artist' | 'genre' | 'track';\r\n  seed: RadioSeed;\r\n  recommendations: Track[];\r\n}\r\n\r\nexport function useRadioRecommendations() {\r\n  const {seedType, seedId} = useParams();\r\n  return useQuery({\r\n    queryKey: ['radio', seedType, +seedId!],\r\n    queryFn: () => fetchRecommendations(seedType!, seedId!),\r\n    // different suggestions are returned every time, don't reload in background\r\n    staleTime: Infinity,\r\n  });\r\n}\r\n\r\nfunction fetchRecommendations(seedType: string, seedId: string | number) {\r\n  return apiClient\r\n    .get<Response>(`radio/${seedType}/${seedId}`)\r\n    .then(response => response.data);\r\n}\r\n","import React, {useMemo} from 'react';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {\r\n  RadioSeed,\r\n  useRadioRecommendations,\r\n} from '@app/web-player/radio/requests/use-radio-recommendations';\r\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {\r\n  actionButtonClassName,\r\n  MediaPageHeaderLayout,\r\n} from '@app/web-player/layout/media-page-header-layout';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {BulletSeparatedItems} from '@app/web-player/layout/bullet-separated-items';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {PlaybackToggleButton} from '@app/web-player/playable-item/playback-toggle-button';\r\nimport {queueGroupId} from '@app/web-player/queue-group-id';\r\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {GenreImage} from '@app/web-player/genres/genre-image';\r\nimport {useParams} from 'react-router-dom';\r\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nconst validSeeds: RadioSeed['model_type'][] = ['artist', 'track', 'genre'];\r\n\r\nexport function RadioPage() {\r\n  const {seedType} = useParams();\r\n  const query = useRadioRecommendations();\r\n  const {data, onSortChange, sortDescriptor} = useSortableTableData(\r\n    query.data?.recommendations,\r\n  );\r\n\r\n  const totalDuration = useMemo(() => {\r\n    return data.reduce((total, track) => {\r\n      return total + (track.duration || 0);\r\n    }, 0);\r\n  }, [data]);\r\n\r\n  if (!validSeeds.includes(seedType as any)) {\r\n    return <NotFoundPage />;\r\n  }\r\n\r\n  if (query.data) {\r\n    const seed = query.data.seed;\r\n    const queueId = queueGroupId(seed, 'radio');\r\n    return (\r\n      <div>\r\n        <PageMetaTags query={query} />\r\n        <AdHost slot=\"general_top\" className=\"mb-44\" />\r\n        <MediaPageHeaderLayout\r\n          image={<Image seed={seed} />}\r\n          title={\r\n            <Trans\r\n              message=\":name radio\"\r\n              values={{\r\n                name:\r\n                  'display_name' in seed && seed.display_name\r\n                    ? seed.display_name\r\n                    : seed.name,\r\n              }}\r\n            />\r\n          }\r\n          subtitle={\r\n            <BulletSeparatedItems className=\"justify-center text-sm text-muted md:justify-start\">\r\n              <RadioType seed={seed} />\r\n              <Trans\r\n                message=\"[one 1 song|other :count songs]\"\r\n                values={{count: data.length}}\r\n              />\r\n              <FormattedDuration ms={totalDuration} verbose />\r\n            </BulletSeparatedItems>\r\n          }\r\n          actionButtons={\r\n            <div className=\"text-center md:text-start\">\r\n              <PlaybackToggleButton\r\n                tracks={data}\r\n                disabled={!data.length}\r\n                buttonType=\"text\"\r\n                queueId={queueId}\r\n                className={actionButtonClassName({isFirst: true})}\r\n              />\r\n            </div>\r\n          }\r\n        />\r\n        <TrackTable\r\n          className=\"mt-34\"\r\n          tracks={data}\r\n          queueGroupId={queueId}\r\n          onSortChange={onSortChange}\r\n          sortDescriptor={sortDescriptor}\r\n        />\r\n        <AdHost slot=\"general_bottom\" className=\"mt-44\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderIsScreen={false}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n    />\r\n  );\r\n}\r\n\r\ninterface SeedImageProps {\r\n  seed: RadioSeed;\r\n}\r\nfunction Image({seed}: SeedImageProps) {\r\n  switch (seed.model_type) {\r\n    case 'artist':\r\n      return (\r\n        <SmallArtistImage\r\n          artist={seed}\r\n          size=\"w-240 h-240\"\r\n          wrapperClassName=\"mx-auto\"\r\n          className=\"rounded\"\r\n        />\r\n      );\r\n    case 'genre':\r\n      return (\r\n        <GenreImage\r\n          genre={seed}\r\n          size=\"w-240 h-240\"\r\n          className=\"mx-auto rounded\"\r\n        />\r\n      );\r\n    default:\r\n      return (\r\n        <TrackImage\r\n          track={seed}\r\n          size=\"w-240 h-240\"\r\n          className=\"mx-auto rounded\"\r\n        />\r\n      );\r\n  }\r\n}\r\n\r\nfunction RadioType({seed}: SeedImageProps) {\r\n  switch (seed.model_type) {\r\n    case 'artist':\r\n      return <Trans message=\"Artist radio\" />;\r\n    case 'genre':\r\n      return <Trans message=\"Genre radio\" />;\r\n    default:\r\n      return <Trans message=\"Track radio\" />;\r\n  }\r\n}\r\n","import {\r\n  useInfiniteData,\r\n  UseInfiniteDataProps,\r\n} from '@common/ui/infinite-scroll/use-infinite-data';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport function useInfiniteSearchResults<T>(\r\n  modelType: string,\r\n  initialPage: UseInfiniteDataProps<T>['initialPage'],\r\n) {\r\n  const {searchQuery} = useParams();\r\n  return useInfiniteData<T>({\r\n    endpoint: `search/model/${modelType}`,\r\n    queryParams: {query: searchQuery || ''},\r\n    initialPage,\r\n    queryKey: ['search', modelType],\r\n    paginate: 'simple',\r\n  });\r\n}\r\n","import {\r\n  SearchResponse,\r\n  useSearchResults,\r\n} from '@app/web-player/search/requests/use-search-results';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport React, {\r\n  Fragment,\r\n  ReactNode,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {Tabs} from '@common/ui/tabs/tabs';\r\nimport {TabList} from '@common/ui/tabs/tab-list';\r\nimport {Tab} from '@common/ui/tabs/tab';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\r\nimport {Track, TRACK_MODEL} from '@app/web-player/tracks/track';\r\nimport {TrackTable} from '@app/web-player/tracks/track-table/track-table';\r\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {ArtistGridItem} from '@app/web-player/artists/artist-grid-item';\r\nimport {AlbumGridItem} from '@app/web-player/albums/album-grid-item';\r\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\r\nimport {UserGridItem} from '@app/web-player/users/user-grid-item';\r\nimport {Artist, ARTIST_MODEL} from '@app/web-player/artists/artist';\r\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\r\nimport {Playlist, PLAYLIST_MODEL} from '@app/web-player/playlists/playlist';\r\nimport {User, USER_MODEL} from '@common/auth/user';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {UseQueryResult} from '@tanstack/react-query';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {SimplePaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {useInfiniteSearchResults} from '@app/web-player/search/requests/use-infinite-search-results';\r\nimport {getScrollParent} from '@react-aria/utils';\r\n\r\nexport function SearchResultsPage() {\r\n  const {searchQuery} = useParams();\r\n  const query = useSearchResults({\r\n    loader: 'searchPage',\r\n    query: searchQuery,\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <MobileSearchBar />\r\n      <PageContent query={query} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction MobileSearchBar() {\r\n  const {searchQuery = ''} = useParams();\r\n  const navigate = useNavigate();\r\n  const {trans} = useTrans();\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  if (!isMobile) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TextField\r\n      defaultValue={searchQuery}\r\n      onChange={e => {\r\n        navigate(`/search/${e.target.value}`, {replace: true});\r\n      }}\r\n      autoFocus\r\n      className=\"w-full\"\r\n      size=\"lg\"\r\n      placeholder={trans(message('Search...'))}\r\n    />\r\n  );\r\n}\r\n\r\ninterface PageContentProps {\r\n  query: UseQueryResult<SearchResponse>;\r\n}\r\nfunction PageContent({query}: PageContentProps) {\r\n  const {branding} = useSettings();\r\n\r\n  if (query.data) {\r\n    return <SearchResults results={query.data?.results} />;\r\n  }\r\n\r\n  if (query.fetchStatus === 'idle') {\r\n    return (\r\n      <IllustratedMessage\r\n        className=\"mt-40\"\r\n        image={<SearchIcon size=\"xl\" />}\r\n        imageHeight=\"h-auto\"\r\n        imageMargin=\"mb-12\"\r\n        title={\r\n          <Trans\r\n            message=\"Search :siteName\"\r\n            values={{siteName: branding.site_name}}\r\n          />\r\n        }\r\n        description={\r\n          <Trans message=\"Find songs, artists, albums, playlists and more.\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderIsScreen={false}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n    />\r\n  );\r\n}\r\n\r\ninterface SearchResultsProps {\r\n  results: SearchResponse['results'];\r\n}\r\nfunction SearchResults({results}: SearchResultsProps) {\r\n  const {tabName = 'all', searchQuery} = useParams();\r\n  const tabNames = useMemo(() => {\r\n    const names = ['tracks', 'artists', 'albums', 'playlists', 'users'].filter(\r\n      tabName =>\r\n        results[tabName as keyof SearchResponse['results']]?.data.length,\r\n    );\r\n    return ['all', ...names];\r\n  }, [results]);\r\n\r\n  const tabIndex = tabNames.indexOf(tabName as any);\r\n\r\n  const [selectedTab, setSelectedTab] = useState(tabIndex > -1 ? tabIndex : 0);\r\n\r\n  // change tab when url changes\r\n  useEffect(() => {\r\n    if (tabIndex !== selectedTab) {\r\n      setSelectedTab(tabIndex);\r\n    }\r\n  }, [tabIndex, selectedTab]);\r\n\r\n  const tabLink = (tabName?: string) => {\r\n    let base = `/search/${searchQuery}`;\r\n    if (tabName) {\r\n      base += `/${tabName}`;\r\n    }\r\n    return base;\r\n  };\r\n\r\n  const haveResults = Object.entries(results).some(([, r]) => r?.data.length);\r\n\r\n  if (!haveResults) {\r\n    return (\r\n      <IllustratedMessage\r\n        className=\"mt-40\"\r\n        image={<SearchIcon size=\"xl\" />}\r\n        imageHeight=\"h-auto\"\r\n        title={\r\n          <Trans\r\n            message=\"Not results for “:query“\"\r\n            values={{query: searchQuery}}\r\n          />\r\n        }\r\n        description={<Trans message=\"Please try a different search query\" />}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Tabs selectedTab={selectedTab} onTabChange={setSelectedTab}>\r\n      <TabList>\r\n        <Tab elementType={Link} to={tabLink()}>\r\n          <Trans message=\"Top results\" />\r\n        </Tab>\r\n        {results.tracks?.data.length ? (\r\n          <Tab elementType={Link} to={tabLink('tracks')}>\r\n            <Trans message=\"Tracks\" />\r\n          </Tab>\r\n        ) : null}\r\n        {results.artists?.data.length ? (\r\n          <Tab elementType={Link} to={tabLink('artists')}>\r\n            <Trans message=\"Artists\" />\r\n          </Tab>\r\n        ) : null}\r\n        {results.albums?.data.length ? (\r\n          <Tab elementType={Link} to={tabLink('albums')}>\r\n            <Trans message=\"Albums\" />\r\n          </Tab>\r\n        ) : null}\r\n        {results.playlists?.data.length ? (\r\n          <Tab elementType={Link} to={tabLink('playlists')}>\r\n            <Trans message=\"Playlists\" />\r\n          </Tab>\r\n        ) : null}\r\n        {results.users?.data.length ? (\r\n          <Tab elementType={Link} to={tabLink('users')}>\r\n            <Trans message=\"Profiles\" />\r\n          </Tab>\r\n        ) : null}\r\n      </TabList>\r\n      <TabPanels className=\"pt-8\">\r\n        <TabPanel>\r\n          <TopResultsPanel results={results} />\r\n        </TabPanel>\r\n        {results.tracks?.data.length ? (\r\n          <TabPanel>\r\n            <PaginatedTrackResults data={results.tracks!} />\r\n          </TabPanel>\r\n        ) : null}\r\n        {results.artists?.data.length ? (\r\n          <TabPanel>\r\n            <PaginatedArtistResults data={results.artists!} />\r\n          </TabPanel>\r\n        ) : null}\r\n        {results.albums?.data.length ? (\r\n          <TabPanel>\r\n            <PaginatedAlbumResults data={results.albums!} />\r\n          </TabPanel>\r\n        ) : null}\r\n        {results.playlists?.data.length ? (\r\n          <TabPanel>\r\n            <PaginatedPlaylistResults data={results.playlists!} />\r\n          </TabPanel>\r\n        ) : null}\r\n        {results.users?.data.length ? (\r\n          <TabPanel>\r\n            <PaginatedProfileResults data={results.users!} />\r\n          </TabPanel>\r\n        ) : null}\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nfunction TopResultsPanel({\r\n  results: {artists, albums, tracks, playlists, users},\r\n}: SearchResultsProps) {\r\n  return (\r\n    <Fragment>\r\n      {tracks?.data.length ? (\r\n        <TrackResults data={tracks.data.slice(0, 5)} showMore />\r\n      ) : null}\r\n      {artists?.data.length ? (\r\n        <ArtistResults data={artists.data.slice(0, 5)} showMore />\r\n      ) : null}\r\n      {albums?.data.length ? (\r\n        <AlbumResults data={albums.data.slice(0, 5)} showMore />\r\n      ) : null}\r\n      {playlists?.data.length ? (\r\n        <PlaylistResults data={playlists.data.slice(0, 5)} showMore />\r\n      ) : null}\r\n      {users?.data.length ? (\r\n        <ProfileResults data={users.data.slice(0, 5)} showMore />\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ResultPanelProps<T> {\r\n  data: T[];\r\n  showMore?: boolean;\r\n  children?: ReactNode;\r\n}\r\n\r\ninterface PaginatedResultPanelProps<T> {\r\n  data: SimplePaginationResponse<T>;\r\n  showMore?: boolean;\r\n}\r\n\r\nfunction TrackResults({data, showMore, children}: ResultPanelProps<Track>) {\r\n  return (\r\n    <div className=\"py-24\">\r\n      <PanelTitle to={showMore ? 'tracks' : undefined}>\r\n        <Trans message=\"Tracks\" />\r\n      </PanelTitle>\r\n      <TrackTable tracks={data} />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaginatedTrackResults({\r\n  data,\r\n  showMore,\r\n}: PaginatedResultPanelProps<Track>) {\r\n  const query = useInfiniteSearchResults<Track>(TRACK_MODEL, data);\r\n  return (\r\n    <TrackResults data={query.items} showMore={showMore}>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </TrackResults>\r\n  );\r\n}\r\n\r\nfunction PaginatedArtistResults({\r\n  data,\r\n  showMore,\r\n}: PaginatedResultPanelProps<Artist>) {\r\n  const query = useInfiniteSearchResults<Artist>(ARTIST_MODEL, data);\r\n  return (\r\n    <ArtistResults data={query.items} showMore={showMore}>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </ArtistResults>\r\n  );\r\n}\r\n\r\nfunction ArtistResults({data, showMore, children}: ResultPanelProps<Artist>) {\r\n  return (\r\n    <div className=\"py-24\">\r\n      <PanelTitle to={showMore ? 'artists' : undefined}>\r\n        <Trans message=\"Artists\" />\r\n      </PanelTitle>\r\n      <ContentGrid>\r\n        {data.map(artist => (\r\n          <ArtistGridItem key={artist.id} artist={artist} />\r\n        ))}\r\n      </ContentGrid>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AlbumResults({data, showMore, children}: ResultPanelProps<Album>) {\r\n  return (\r\n    <div className=\"py-24\">\r\n      <PanelTitle to={showMore ? 'albums' : undefined}>\r\n        <Trans message=\"Albums\" />\r\n      </PanelTitle>\r\n      <ContentGrid>\r\n        {data.map(album => (\r\n          <AlbumGridItem key={album.id} album={album} />\r\n        ))}\r\n      </ContentGrid>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaginatedAlbumResults({\r\n  data,\r\n  showMore,\r\n}: PaginatedResultPanelProps<Album>) {\r\n  const query = useInfiniteSearchResults<Album>(ALBUM_MODEL, data);\r\n  return (\r\n    <AlbumResults data={query.items} showMore={showMore}>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </AlbumResults>\r\n  );\r\n}\r\n\r\nfunction PlaylistResults({\r\n  data,\r\n  showMore,\r\n  children,\r\n}: ResultPanelProps<Playlist>) {\r\n  return (\r\n    <div className=\"py-24\">\r\n      <PanelTitle to={showMore ? 'playlists' : undefined}>\r\n        <Trans message=\"Playlists\" />\r\n      </PanelTitle>\r\n      <ContentGrid>\r\n        {data.map(playlist => (\r\n          <PlaylistGridItem key={playlist.id} playlist={playlist} />\r\n        ))}\r\n      </ContentGrid>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaginatedPlaylistResults({\r\n  data,\r\n  showMore,\r\n}: PaginatedResultPanelProps<Playlist>) {\r\n  const query = useInfiniteSearchResults<Playlist>(PLAYLIST_MODEL, data);\r\n  return (\r\n    <PlaylistResults data={query.items} showMore={showMore}>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </PlaylistResults>\r\n  );\r\n}\r\n\r\nfunction ProfileResults({data, showMore, children}: ResultPanelProps<User>) {\r\n  return (\r\n    <div className=\"py-24\">\r\n      <PanelTitle to={showMore ? 'users' : undefined}>\r\n        <Trans message=\"Profiles\" />\r\n      </PanelTitle>\r\n      <ContentGrid>\r\n        {data.map(user => (\r\n          <UserGridItem key={user.id} user={user} />\r\n        ))}\r\n      </ContentGrid>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaginatedProfileResults({\r\n  data,\r\n  showMore,\r\n}: PaginatedResultPanelProps<User>) {\r\n  const query = useInfiniteSearchResults<User>(USER_MODEL, data);\r\n  return (\r\n    <ProfileResults data={query.items} showMore={showMore}>\r\n      <InfiniteScrollSentinel query={query} />\r\n    </ProfileResults>\r\n  );\r\n}\r\n\r\ninterface PanelTitleProps {\r\n  children: ReactNode;\r\n  to?: string;\r\n}\r\nfunction PanelTitle({children, to}: PanelTitleProps) {\r\n  const ref = useRef<HTMLHeadingElement>(null!);\r\n  return (\r\n    <h2 className=\"mb-24 w-max text-2xl font-medium\" ref={ref}>\r\n      {to ? (\r\n        <Link\r\n          to={to}\r\n          className=\"flex items-center gap-2 hover:text-primary\"\r\n          onClick={() => {\r\n            const scrollParent = getScrollParent(ref.current);\r\n            if (scrollParent) {\r\n              scrollParent.scrollTo({top: 0});\r\n            }\r\n          }}\r\n        >\r\n          {children}\r\n          <KeyboardArrowRightIcon className=\"mt-4\" />\r\n        </Link>\r\n      ) : (\r\n        children\r\n      )}\r\n    </h2>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {AudiotrackIcon} from '@common/icons/material/Audiotrack';\r\nimport {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport React, {ReactElement, ReactNode} from 'react';\r\nimport {Link, Navigate} from 'react-router-dom';\r\nimport {AlbumIcon} from '@common/icons/material/Album';\r\nimport {MicIcon} from '@common/icons/material/Mic';\r\nimport {PlaylistPlayIcon} from '@common/icons/material/PlaylistPlay';\r\nimport {HistoryIcon} from '@common/icons/material/History';\r\nimport {SvgIconProps} from '@common/icons/svg-icon';\r\nimport {getPlaylistLink} from '@app/web-player/playlists/playlist-link';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {PlaylistAddIcon} from '@common/icons/material/PlaylistAdd';\r\nimport {CreatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/create-playlist-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\r\nimport {useUserPlaylists} from '@app/web-player/library/requests/use-user-playlists';\r\nimport {PlaylistImage} from '@app/web-player/playlists/playlist-image';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {useIsTabletMediaQuery} from '@common/utils/hooks/is-tablet-media-query';\r\n\r\nexport function LibraryPage() {\r\n  const navigate = useNavigate();\r\n  const authHandler = useAuthClickCapture();\r\n  const query = useUserPlaylists('me');\r\n  const isSmallScreen = useIsTabletMediaQuery();\r\n\r\n  if (!isSmallScreen) {\r\n    return <Navigate to=\"/library/songs\" replace />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Your tracks\" />\r\n      </StaticPageTitle>\r\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n      <div className=\"flex items-center justify-between gap-24 mb-20\">\r\n        <h1 className=\"text-2xl font-semibold whitespace-nowrap\">\r\n          <Trans message=\"Your library\" />\r\n        </h1>\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={newPlaylist => {\r\n            if (newPlaylist) {\r\n              navigate(getPlaylistLink(newPlaylist));\r\n            }\r\n          }}\r\n        >\r\n          <IconButton className=\"flex-shrink-0\" onClickCapture={authHandler}>\r\n            <PlaylistAddIcon />\r\n          </IconButton>\r\n          <CreatePlaylistDialog />\r\n        </DialogTrigger>\r\n      </div>\r\n      <div>\r\n        <MenuItem\r\n          icon={<AudiotrackIcon className=\"text-main\" />}\r\n          to=\"/library/songs\"\r\n        >\r\n          <Trans message=\"Songs\" />\r\n        </MenuItem>\r\n        <MenuItem icon={<PlaylistPlayIcon />} to=\"/library/playlists\">\r\n          <Trans message=\"Playlists\" />\r\n        </MenuItem>\r\n        <MenuItem icon={<AlbumIcon />} to=\"/library/albums\">\r\n          <Trans message=\"Albums\" />\r\n        </MenuItem>\r\n        <MenuItem icon={<MicIcon />} to=\"/library/artists\">\r\n          <Trans message=\"Artists\" />\r\n        </MenuItem>\r\n        <MenuItem icon={<HistoryIcon />} to=\"/library/history\">\r\n          <Trans message=\"Play history\" />\r\n        </MenuItem>\r\n        {query.items.map(playlist => (\r\n          <MenuItem\r\n            key={playlist.id}\r\n            wrapIcon={false}\r\n            icon={\r\n              <PlaylistImage\r\n                size=\"w-42 h-42\"\r\n                className=\"rounded\"\r\n                playlist={playlist}\r\n              />\r\n            }\r\n            to={getPlaylistLink(playlist)}\r\n          >\r\n            {playlist.name}\r\n          </MenuItem>\r\n        ))}\r\n        <InfiniteScrollSentinel query={query} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MenuItemProps {\r\n  icon: ReactElement<SvgIconProps>;\r\n  children: ReactNode;\r\n  to: string;\r\n  wrapIcon?: boolean;\r\n}\r\nfunction MenuItem({icon, children, to, wrapIcon = true}: MenuItemProps) {\r\n  return (\r\n    <Link className=\"flex items-center gap-14 mb-18 text-sm\" to={to}>\r\n      {wrapIcon ? (\r\n        <div className=\"rounded bg-chip p-8 w-42 h-42\">{icon}</div>\r\n      ) : (\r\n        icon\r\n      )}\r\n      {children}\r\n    </Link>\r\n  );\r\n}\r\n","import {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {PageErrorMessage} from '@common/errors/page-error-message';\r\nimport {ContentGrid} from '@app/web-player/playable-item/content-grid';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {MediaPageNoResultsMessage} from '@app/web-player/layout/media-page-no-results-message';\r\nimport {PlayableMediaGridSkeleton} from '@app/web-player/playable-item/player-media-grid-skeleton';\r\nimport {LibraryPageSortDropdown} from '@app/web-player/library/library-page-sort-dropdown';\r\nimport {useUserPlaylists} from '@app/web-player/library/requests/use-user-playlists';\r\nimport {PlaylistGridItem} from '@app/web-player/playlists/playlist-grid-item';\r\nimport {useAuthUserPlaylists} from '@app/web-player/playlists/requests/use-auth-user-playlists';\r\nimport {getPlaylistLink} from '@app/web-player/playlists/playlist-link';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {PlaylistAddIcon} from '@common/icons/material/PlaylistAdd';\r\nimport {CreatePlaylistDialog} from '@app/web-player/playlists/crupdate-dialog/create-playlist-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useAuthClickCapture} from '@app/web-player/use-auth-click-capture';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nconst sortItems = {\r\n  'updated_at:desc': message('Recently updated'),\r\n  'name:asc': message('A-Z'),\r\n  'views:desc': message('Most viewed'),\r\n  'plays:desc': message('Most played'),\r\n};\r\n\r\nexport function LibraryPlaylistsPage() {\r\n  const navigate = useNavigate();\r\n  const authHandler = useAuthClickCapture();\r\n  const {trans} = useTrans();\r\n  const {data} = useAuthUserPlaylists();\r\n  const totalItems = data.playlists.length;\r\n  const query = useUserPlaylists('me', {willSortOrFilter: true});\r\n  const {\r\n    isInitialLoading,\r\n    sortDescriptor,\r\n    setSortDescriptor,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    items,\r\n    isError,\r\n  } = query;\r\n\r\n  if (isError) {\r\n    return <PageErrorMessage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Your playlists\" />\r\n      </StaticPageTitle>\r\n      <AdHost slot=\"general_top\" className=\"mb-34\" />\r\n      <div className=\"flex items-center justify-between gap-24 mb-20\">\r\n        <h1 className=\"text-2xl font-semibold whitespace-nowrap\">\r\n          {totalItems ? (\r\n            <Trans\r\n              message=\"[one 1 playlist|other :count playlists]\"\r\n              values={{count: totalItems}}\r\n            />\r\n          ) : (\r\n            <Trans message=\"My playlists\" />\r\n          )}\r\n        </h1>\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={newPlaylist => {\r\n            if (newPlaylist) {\r\n              navigate(getPlaylistLink(newPlaylist));\r\n            }\r\n          }}\r\n        >\r\n          <IconButton className=\"flex-shrink-0\" onClickCapture={authHandler}>\r\n            <PlaylistAddIcon />\r\n          </IconButton>\r\n          <CreatePlaylistDialog />\r\n        </DialogTrigger>\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-24 justify-between\">\r\n        <TextField\r\n          value={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value)}\r\n          className=\"max-w-512 flex-auto\"\r\n          size=\"sm\"\r\n          startAdornment={<SearchIcon />}\r\n          placeholder={trans(message('Search within playlists'))}\r\n        />\r\n        <LibraryPageSortDropdown\r\n          items={sortItems}\r\n          sortDescriptor={sortDescriptor}\r\n          setSortDescriptor={setSortDescriptor}\r\n        />\r\n      </div>\r\n      <div className=\"mt-34\">\r\n        <AnimatePresence initial={false} mode=\"wait\">\r\n          {isInitialLoading ? (\r\n            <PlayableMediaGridSkeleton itemCount={totalItems} />\r\n          ) : (\r\n            <m.div key=\"media-grid\" {...opacityAnimation}>\r\n              <ContentGrid>\r\n                {items.map(playlist => (\r\n                  <PlaylistGridItem key={playlist.id} playlist={playlist} />\r\n                ))}\r\n                <InfiniteScrollSentinel query={query} />\r\n              </ContentGrid>\r\n            </m.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      {!items.length && !isInitialLoading && (\r\n        <MediaPageNoResultsMessage\r\n          className=\"mt-34\"\r\n          searchQuery={searchQuery}\r\n          description={\r\n            <Trans message=\"You have not added any playlists to your library yet.\" />\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from 'react';\r\nimport {playerStoreOptions} from '@app/web-player/state/player-store-options';\r\nimport {PlayerContext} from '@common/player/player-context';\r\nimport {TrackListItem} from '@app/web-player/tracks/track-list/track-list-item';\r\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {trackToMediaItem} from '@app/web-player/tracks/utils/track-to-media-item';\r\nimport {PlayerStoreOptions} from '@common/player/state/player-store-options';\r\nimport {PlayerOutlet} from '@common/player/ui/player-outlet';\r\nimport {PlayerPoster} from '@common/player/ui/controls/player-poster';\r\n\r\nexport function TrackEmbed() {\r\n  const {data} = useTrack({loader: 'trackPage'});\r\n  return (\r\n    <div className=\"h-[174px] rounded border bg-alt p-14\">\r\n      {!data?.track ? (\r\n        <FullPageLoader screen={false} />\r\n      ) : (\r\n        <EmbedContent track={data.track} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface EmbedContentProps {\r\n  track: Track;\r\n}\r\nfunction EmbedContent({track}: EmbedContentProps) {\r\n  const options: PlayerStoreOptions = useMemo(() => {\r\n    const mediaItem = trackToMediaItem(track);\r\n    return {\r\n      ...playerStoreOptions,\r\n      initialData: {\r\n        queue: [mediaItem],\r\n        cuedMediaId: mediaItem.id,\r\n        state: {\r\n          repeat: false,\r\n        },\r\n      },\r\n    };\r\n  }, [track]);\r\n  return (\r\n    <PlayerContext id=\"web-player\" options={options}>\r\n      <div className=\"flex gap-24\">\r\n        <div className=\"relative h-144 w-144 flex-shrink-0 overflow-hidden rounded bg-black\">\r\n          <PlayerPoster className=\"absolute inset-0\" />\r\n          <PlayerOutlet className=\"h-full w-full\" />\r\n        </div>\r\n        <TrackListItem\r\n          track={track}\r\n          hideArtwork\r\n          hideActions\r\n          linksInNewTab\r\n          className=\"flex-auto\"\r\n        />\r\n      </div>\r\n    </PlayerContext>\r\n  );\r\n}\r\n","import React, {useMemo} from 'react';\r\nimport {playerStoreOptions} from '@app/web-player/state/player-store-options';\r\nimport {PlayerContext} from '@common/player/player-context';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {\r\n  tracksToMediaItems,\r\n  trackToMediaItem,\r\n} from '@app/web-player/tracks/utils/track-to-media-item';\r\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {AlbumListItem} from '@app/web-player/albums/album-list/album-list-item';\r\nimport {PlayerStoreOptions} from '@common/player/state/player-store-options';\r\nimport {PlayerOutlet} from '@common/player/ui/player-outlet';\r\nimport {PlayerPoster} from '@common/player/ui/controls/player-poster';\r\n\r\nexport function AlbumEmbed() {\r\n  const {data} = useAlbum({loader: 'albumEmbed'});\r\n  return (\r\n    <div className=\"h-384 rounded border bg-alt p-14\">\r\n      {!data?.album ? (\r\n        <FullPageLoader screen={false} />\r\n      ) : (\r\n        <EmbedContent album={data.album} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface EmbedContentProps {\r\n  album: Album;\r\n}\r\nfunction EmbedContent({album}: EmbedContentProps) {\r\n  const options: PlayerStoreOptions = useMemo(() => {\r\n    return {\r\n      ...playerStoreOptions,\r\n      initialData: {\r\n        queue: album.tracks?.length ? tracksToMediaItems(album.tracks) : [],\r\n        cuedMediaId: album.tracks?.length\r\n          ? trackToMediaItem(album.tracks[0]).id\r\n          : undefined,\r\n        state: {\r\n          repeat: false,\r\n        },\r\n      },\r\n    };\r\n  }, [album]);\r\n  return (\r\n    <PlayerContext id=\"web-player\" options={options}>\r\n      <div className=\"flex h-full items-start gap-24\">\r\n        <div className=\"relative h-144 w-144 flex-shrink-0 overflow-hidden rounded bg-black\">\r\n          <PlayerPoster className=\"absolute inset-0\" />\r\n          <PlayerOutlet className=\"h-full w-full\" />\r\n        </div>\r\n        <AlbumListItem\r\n          album={album}\r\n          maxHeight=\"h-full\"\r\n          className=\"flex-auto\"\r\n          hideArtwork\r\n          hideActions\r\n          linksInNewTab\r\n        />\r\n      </div>\r\n    </PlayerContext>\r\n  );\r\n}\r\n","import {useSettings} from '@common/core/settings/use-settings';\r\nimport {ChannelPage} from '@app/web-player/channels/channel-page';\r\nimport React from 'react';\r\n\r\nexport function HomepageChannelPage() {\r\n  const {homepage} = useSettings();\r\n  let slugOrId = 'discover';\r\n  if (homepage.type.startsWith('channel') && homepage.value) {\r\n    slugOrId = homepage.value;\r\n  }\r\n  return <ChannelPage slugOrId={slugOrId} />;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\n\r\nexport interface SyncedLyricResponse {\r\n  is_synced: true;\r\n  lines: {time: number; text: string}[];\r\n  duration: number | null;\r\n}\r\n\r\nexport interface PlainLyricResponse {\r\n  is_synced: false;\r\n  lines: {text: string}[];\r\n}\r\n\r\nexport interface UseLyricsResponse extends BackendResponse {\r\n  is_synced: true;\r\n  lines: {time?: number; text: string}[];\r\n  duration: number | null;\r\n}\r\n\r\ninterface UseLyricsQueryParams {\r\n  duration: number;\r\n}\r\n\r\nexport function useLyrics(\r\n  trackId: number | string,\r\n  queryParams: UseLyricsQueryParams,\r\n) {\r\n  return useQuery({\r\n    queryKey: ['lyrics', trackId],\r\n    queryFn: () => fetchLyrics(trackId, queryParams),\r\n  });\r\n}\r\n\r\nfunction fetchLyrics(\r\n  trackId: number | string,\r\n  queryParams: UseLyricsQueryParams,\r\n) {\r\n  return apiClient\r\n    .get<UseLyricsResponse>(`tracks/${trackId}/lyrics`, {params: queryParams})\r\n    .then(response => response.data);\r\n}\r\n","import {\r\n  SyncedLyricResponse,\r\n  useLyrics,\r\n  UseLyricsResponse,\r\n} from '@app/web-player/tracks/lyrics/use-lyrics';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {MediaMicrophoneIcon} from '@common/icons/media/media-microphone';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React, {ReactNode, useEffect, useMemo} from 'react';\r\nimport clsx from 'clsx';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport {MusicNoteIcon} from '@common/icons/material/MusicNote';\r\nimport {useCuedTrack} from '@app/web-player/player-controls/use-cued-track';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {useCurrentTime} from '@common/player/hooks/use-current-time';\r\nimport {usePlayerStore} from '@common/player/hooks/use-player-store';\r\n\r\nexport function LyricsPage() {\r\n  const track = useCuedTrack();\r\n  return (\r\n    <AnimatePresence initial={false} mode=\"wait\">\r\n      <div>\r\n        {track ? (\r\n          <Lyrics track={track} />\r\n        ) : (\r\n          <NoLyricsMessage\r\n            title={<Trans message=\"Play a song in order to view lyrics.\" />}\r\n          />\r\n        )}\r\n      </div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\ninterface LyricsProps {\r\n  track: Track;\r\n}\r\nfunction Lyrics({track}: LyricsProps) {\r\n  const duration = usePlayerStore(s => s.mediaDuration);\r\n  const {data, isLoading} = useLyrics(track.id, {duration});\r\n\r\n  if (data) {\r\n    return <SyncedLyrics data={data} />;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <LyricSkeleton />;\r\n  }\r\n\r\n  return (\r\n    <NoLyricsMessage\r\n      title={<Trans message=\"We do not have lyrics for this song yet\" />}\r\n      description={<Trans message=\"Please try again later\" />}\r\n    />\r\n  );\r\n}\r\n\r\n// calculate currently active line index based on current player time\r\nconst calcActiveIndex = (data: SyncedLyricResponse, time: number) => {\r\n  for (let i = 0; i < data.lines.length; i++) {\r\n    if (data.lines[i].time <= time && data.lines[i + 1]?.time > time) {\r\n      return i;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\ninterface SyncedLyricsProps {\r\n  data: UseLyricsResponse;\r\n}\r\nfunction SyncedLyrics({data}: SyncedLyricsProps) {\r\n  const duration = usePlayerStore(s => s.mediaDuration);\r\n  const lyricDuration = data.duration;\r\n  // if there's a duration difference of more then 12 seconds between lyrics and media, don't sync\r\n  const shouldSync =\r\n    data.is_synced &&\r\n    (!lyricDuration || Math.abs(lyricDuration - duration) <= 12);\r\n  const currentTime = useCurrentTime({\r\n    precision: 'seconds',\r\n    disabled: !shouldSync,\r\n  });\r\n\r\n  const activeIndex = useMemo(\r\n    () =>\r\n      shouldSync\r\n        ? calcActiveIndex(data as SyncedLyricResponse, currentTime)\r\n        : null,\r\n    [data, currentTime, shouldSync],\r\n  );\r\n\r\n  // reset index when lyrics change\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      document.querySelector(`[data-line-index=\"${0}\"]`)?.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'center',\r\n      });\r\n    });\r\n  }, [data]);\r\n\r\n  // scroll to active line\r\n  useEffect(() => {\r\n    if (activeIndex != null) {\r\n      document\r\n        .querySelector(`[data-line-index=\"${activeIndex}\"]`)\r\n        ?.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'center',\r\n        });\r\n    }\r\n  }, [activeIndex]);\r\n\r\n  return (\r\n    <LyricsWrapper animationKey=\"synced-lyrics\">\r\n      {data.lines.map((line, index) => {\r\n        const isPast = activeIndex && index < activeIndex;\r\n        const isActive = activeIndex === index;\r\n        return (\r\n          <div\r\n            key={line.time || index}\r\n            data-line-index={index}\r\n            className={clsx(\r\n              'max-md:mb-18 md:leading-[48px]',\r\n              isPast && 'opacity-40',\r\n              isActive && 'text-primary',\r\n            )}\r\n          >\r\n            {line.text || <MusicNoteIcon />}\r\n          </div>\r\n        );\r\n      })}\r\n    </LyricsWrapper>\r\n  );\r\n}\r\n\r\nconst widths = [40, 55, 70, 80, 90, 100];\r\nfunction LyricSkeleton() {\r\n  return (\r\n    <LyricsWrapper animationKey=\"skeletons\" width=\"min-w-[70%]\">\r\n      {[...new Array(12).keys()].map(key => (\r\n        <Skeleton\r\n          key={key}\r\n          variant=\"rect\"\r\n          className=\"mb-14\"\r\n          size=\"h-48 w-full\"\r\n          style={{maxWidth: `${widths[key % widths.length]}%`}}\r\n        />\r\n      ))}\r\n    </LyricsWrapper>\r\n  );\r\n}\r\n\r\ninterface LyricsWrapperProps {\r\n  children: ReactNode;\r\n  animationKey: string;\r\n  width?: string;\r\n}\r\nfunction LyricsWrapper({\r\n  children,\r\n  animationKey,\r\n  width = 'w-max',\r\n}: LyricsWrapperProps) {\r\n  return (\r\n    <m.div\r\n      key={animationKey}\r\n      {...opacityAnimation}\r\n      className=\"flex-col items-center justify-start md:flex\"\r\n    >\r\n      <div\r\n        className={clsx(\r\n          'max-w-full flex-auto text-2xl md:mx-64 md:text-3xl',\r\n          width,\r\n        )}\r\n      >\r\n        {children}\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface NoLyricsMessageProps {\r\n  title: ReactNode;\r\n  description?: ReactNode;\r\n}\r\nfunction NoLyricsMessage({title, description}: NoLyricsMessageProps) {\r\n  return (\r\n    <m.div key=\"no-lyrics-message\" {...opacityAnimation}>\r\n      <IllustratedMessage\r\n        image={<MediaMicrophoneIcon size=\"xl\" />}\r\n        imageHeight=\"h-auto\"\r\n        title={title}\r\n        description={description}\r\n      />\r\n    </m.div>\r\n  );\r\n}\r\n","import {RouteObject, useRoutes} from 'react-router-dom';\r\nimport {ChannelPage} from '@app/web-player/channels/channel-page';\r\nimport React from 'react';\r\nimport {WebPlayerLayout} from '@app/web-player/layout/web-player-layout';\r\nimport {ArtistPage} from '@app/web-player/artists/artist-page/artist-page';\r\nimport {PlaylistPage} from '@app/web-player/playlists/playlist-page/playlist-page';\r\nimport {AlbumPage} from '@app/web-player/albums/album-page';\r\nimport {LibraryTracksPage} from '@app/web-player/library/library-tracks-page';\r\nimport {AuthRoute} from '@common/auth/guards/auth-route';\r\nimport {LibraryAlbumsPage} from '@app/web-player/library/library-albums-page';\r\nimport {LibraryArtistsPage} from '@app/web-player/library/library-artists-page';\r\nimport {LibraryHistoryPage} from '@app/web-player/library/library-history-page';\r\nimport {TrackPage} from '@app/web-player/tracks/track-page';\r\nimport {UserProfilePage} from '@app/web-player/user-profile/user-profile-page';\r\nimport {TagMediaPage} from '@app/web-player/genres/tag-media-page';\r\nimport {RadioPage} from '@app/web-player/radio/radio-page';\r\nimport {SearchResultsPage} from '@app/web-player/search/search-results-page';\r\nimport {LibraryPage} from '@app/web-player/library/library-page';\r\nimport {LibraryPlaylistsPage} from '@app/web-player/library/library-playlists-page';\r\nimport {TrackEmbed} from '@app/web-player/tracks/track-embed';\r\nimport {AlbumEmbed} from '@app/web-player/albums/album-embed';\r\nimport {HomepageChannelPage} from '@app/web-player/channels/homepage-channel-page';\r\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\r\nimport {LyricsPage} from '@app/web-player/tracks/lyrics/lyrics-page';\r\n\r\nconst RouteConfig: RouteObject[] = [\r\n  {\r\n    path: 'track/:trackId/:trackName/embed',\r\n    element: <TrackEmbed />,\r\n  },\r\n  {\r\n    path: 'album/:albumId/:artistName/:albumName/embed',\r\n    element: <AlbumEmbed />,\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <WebPlayerLayout />,\r\n    children: [\r\n      {\r\n        index: true,\r\n        element: <HomepageChannelPage />,\r\n      },\r\n      {\r\n        path: 'lyrics',\r\n        element: <LyricsPage />,\r\n      },\r\n      // artists\r\n      {\r\n        path: 'artist/:artistId/:artistName',\r\n        element: <ArtistPage />,\r\n      },\r\n      {\r\n        path: 'artist/:artistId',\r\n        element: <ArtistPage />,\r\n      },\r\n      // playlists\r\n      {\r\n        path: 'playlist/:playlistId/:playlistName',\r\n        element: <PlaylistPage />,\r\n      },\r\n      // albums\r\n      {\r\n        path: 'album/:albumId/:artistName/:albumName',\r\n        element: <AlbumPage />,\r\n      },\r\n      // tracks\r\n      {\r\n        path: 'track/:trackId/:trackName',\r\n        element: <TrackPage />,\r\n      },\r\n      // tags\r\n      {\r\n        path: 'tag/:tagName',\r\n        element: <TagMediaPage />,\r\n      },\r\n      {\r\n        path: 'tag/:tagName/tracks',\r\n        element: <TagMediaPage />,\r\n      },\r\n      {\r\n        path: 'tag/:tagName/albums',\r\n        element: <TagMediaPage />,\r\n      },\r\n      // user profile\r\n      {\r\n        path: 'user/:userId/:userName',\r\n        element: <UserProfilePage />,\r\n      },\r\n      {\r\n        path: 'user/:userId/:userName/:tabName',\r\n        element: <UserProfilePage />,\r\n      },\r\n      // radio\r\n      {\r\n        path: 'radio/:seedType/:seedId/:seeName',\r\n        element: <RadioPage />,\r\n      },\r\n      // search\r\n      {\r\n        path: 'search',\r\n        element: <SearchResultsPage />,\r\n      },\r\n      {\r\n        path: 'search/:searchQuery',\r\n        element: <SearchResultsPage />,\r\n      },\r\n      {\r\n        path: 'search/:searchQuery/:tabName',\r\n        element: <SearchResultsPage />,\r\n      },\r\n      // library\r\n      {\r\n        path: '/library',\r\n        element: (\r\n          <AuthRoute>\r\n            <LibraryPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: '/library/songs',\r\n        element: (\r\n          <AuthRoute>\r\n            <LibraryTracksPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: '/library/playlists',\r\n        element: (\r\n          <AuthRoute>\r\n            <LibraryPlaylistsPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: '/library/albums',\r\n        element: (\r\n          <AuthRoute>\r\n            <LibraryAlbumsPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: '/library/artists',\r\n        element: (\r\n          <AuthRoute>\r\n            <LibraryArtistsPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: '/library/history',\r\n        element: (\r\n          <AuthRoute>\r\n            <LibraryHistoryPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // Channels\r\n      {\r\n        path: ':slugOrId',\r\n        element: <ChannelPage />,\r\n      },\r\n      {\r\n        path: 'channel/:slugOrId',\r\n        element: <ChannelPage />,\r\n      },\r\n      {\r\n        path: ':slugOrId/:restriction',\r\n        element: <ChannelPage />,\r\n      },\r\n      {\r\n        path: 'channel/:slugOrId/:restriction',\r\n        element: <ChannelPage />,\r\n      },\r\n      {\r\n        path: '*',\r\n        element: <NotFoundPage />,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function WebPlayerRoutes() {\r\n  return useRoutes(RouteConfig);\r\n}\r\n"],"names":["hasNextPage","_a","queryKey","endpoint","_b","queueGroupId","removeTracks","currentTime","queryClient","createComment","YoutubeCommand","YouTubePlayerState","QueuedTrack","PlaybackButtons","MenuItem","isNumber","item","ActionButtons","AlbumTrackTable","followUser","unfollowUser","reorderTracks","PageContent","changeVote","model","message","useLayoutEffect","getPlaceholderItems","sortItems","ComboBox","updateProfile","Option","tabName","Image","EmbedContent"],"mappings":"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"}