{"version":3,"file":"lazy-chart-9300132f.mjs","sources":["../../../common/resources/client/charts/lazy-chart.tsx"],"sourcesContent":["import {\r\n  ArcElement,\r\n  BarController,\r\n  BarElement,\r\n  CategoryScale,\r\n  Chart,\r\n  ChartOptions,\r\n  ChartType,\r\n  Filler,\r\n  Legend,\r\n  LinearScale,\r\n  LineController,\r\n  LineElement,\r\n  PointElement,\r\n  PolarAreaController,\r\n  RadialLinearScale,\r\n  Tooltip,\r\n} from 'chart.js';\r\nimport {useEffect, useRef} from 'react';\r\nimport {BaseChartProps} from './base-chart';\r\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\r\nimport deepMerge from 'deepmerge';\r\n\r\nChart.register([\r\n  LineElement,\r\n  PointElement,\r\n  BarElement,\r\n  ArcElement,\r\n  LineController,\r\n  BarController,\r\n  PolarAreaController,\r\n  RadialLinearScale,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n]);\r\n\r\nexport default function LazyChart({\r\n  type,\r\n  data,\r\n  options,\r\n  hideLegend,\r\n}: Omit<BaseChartProps<any>, 'children'>) {\r\n  const ref = useRef<HTMLCanvasElement>(null);\r\n  const chartRef = useRef<Chart<ChartType, unknown>>();\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      chartRef.current = new Chart(ref.current, {\r\n        type,\r\n        data,\r\n        options: deepMerge(\r\n          {\r\n            maintainAspectRatio: false,\r\n            animation: {\r\n              duration: 250,\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                position: 'bottom',\r\n                display: !hideLegend,\r\n              },\r\n              tooltip: {\r\n                padding: 16,\r\n                cornerRadius: 4,\r\n                callbacks: {\r\n                  title: ([item]) => {\r\n                    const data = item.raw as FormattedDatasetItem;\r\n                    return data.tooltipTitle ?? item.label;\r\n                  },\r\n                  label: item => {\r\n                    return `  ${item.dataset.label}: ${item.formattedValue}`;\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n          options as ChartOptions\r\n        ),\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      chartRef.current?.destroy();\r\n    };\r\n  }, [data, type, options, hideLegend]);\r\n\r\n  return <canvas ref={ref}></canvas>;\r\n}\r\n"],"names":["data"],"mappings":";;;;AAuBA,MAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAED,SAAwB,UAAU;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAA0C;AAClC,QAAA,MAAM,OAA0B,IAAI;AAC1C,QAAM,WAAW;AAEjB,YAAU,MAAM;AACd,QAAI,IAAI,SAAS;AACf,eAAS,UAAU,IAAI,MAAM,IAAI,SAAS;AAAA,QACxC;AAAA,QACA;AAAA,QACA,SAAS;AAAA,UACP;AAAA,YACE,qBAAqB;AAAA,YACrB,WAAW;AAAA,cACT,UAAU;AAAA,YACZ;AAAA,YACA,SAAS;AAAA,cACP,QAAQ;AAAA,gBACN,UAAU;AAAA,gBACV,SAAS,CAAC;AAAA,cACZ;AAAA,cACA,SAAS;AAAA,gBACP,SAAS;AAAA,gBACT,cAAc;AAAA,gBACd,WAAW;AAAA,kBACT,OAAO,CAAC,CAAC,IAAI,MAAM;AACjB,0BAAMA,QAAO,KAAK;AACXA,2BAAAA,MAAK,gBAAgB,KAAK;AAAA,kBACnC;AAAA,kBACA,OAAO,CAAQ,SAAA;AACb,2BAAO,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,cAAc;AAAA,kBACxD;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA,QACF;AAAA,MAAA,CACD;AAAA,IACH;AAEA,WAAO,MAAM;;AACX,qBAAS,YAAT,mBAAkB;AAAA,IAAQ;AAAA,KAE3B,CAAC,MAAM,MAAM,SAAS,UAAU,CAAC;AAE7B,SAAA,oBAAC,YAAO,IAAU,CAAA;AAC3B;"}