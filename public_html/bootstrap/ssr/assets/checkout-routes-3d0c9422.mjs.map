{"version":3,"file":"checkout-routes-3d0c9422.mjs","sources":["../../../common/resources/client/auth/guards/not-subscribed-route.tsx","../../../common/resources/client/billing/checkout/checkout-layout.tsx","../../../common/resources/client/billing/requests/use-checkout-product.ts","../../../common/resources/client/billing/checkout/checkout-product-summary.tsx","../../../common/resources/client/billing/checkout/paypal/use-paypal.ts","../../../common/resources/client/billing/checkout/checkout.tsx","../../../common/resources/client/billing/checkout/stripe/checkout-stripe-done.tsx","../../../common/resources/client/billing/checkout/paypal/checkout-paypal-done.tsx","../../../common/resources/client/billing/checkout/checkout-routes.tsx"],"sourcesContent":["import {useAuth} from '../use-auth';\r\nimport {ReactElement} from 'react';\r\nimport {Navigate, Outlet} from 'react-router-dom';\r\n\r\ninterface GuestRouteProps {\r\n  children: ReactElement;\r\n}\r\nexport function NotSubscribedRoute({children}: GuestRouteProps) {\r\n  const {isLoggedIn, isSubscribed} = useAuth();\r\n\r\n  if (!isLoggedIn) {\r\n    return <Navigate to=\"/register\" replace />;\r\n  }\r\n\r\n  if (isLoggedIn && isSubscribed) {\r\n    return <Navigate to=\"/billing\" replace />;\r\n  }\r\n\r\n  return children || <Outlet />;\r\n}\r\n","import {Fragment, ReactElement, useEffect} from 'react';\r\nimport {Navbar} from '../../ui/navigation/navbar/navbar';\r\nimport {CustomMenu} from '../../menus/custom-menu';\r\nimport {LocaleSwitcher} from '../../i18n/locale-switcher';\r\nimport {removeFromLocalStorage} from '../../utils/hooks/local-storage';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\ninterface CheckoutLayoutProps {\r\n  children: [ReactElement, ReactElement];\r\n}\r\nexport function CheckoutLayout({children}: CheckoutLayoutProps) {\r\n  const [left, right] = children;\r\n\r\n  useEffect(() => {\r\n    removeFromLocalStorage('be.onboarding.selected');\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Checkout\" />\r\n      </StaticPageTitle>\r\n      <Navbar\r\n        size=\"sm\"\r\n        color=\"transparent\"\r\n        className=\"z-10 mb-20 md:mb-0\"\r\n        textColor=\"text-main\"\r\n        logoColor=\"dark\"\r\n        darkModeColor=\"transparent\"\r\n        menuPosition=\"checkout-page-navbar\"\r\n      />\r\n      <div className=\"md:flex w-full mx-auto justify-between px-20 md:px-0 md:pt-128 md:max-w-950\">\r\n        <div className=\"hidden md:block fixed right-0 top-0 w-1/2 h-full bg-alt shadow-[15px_0_30px_0_rgb(0_0_0_/_18%)]\" />\r\n        <div className=\"md:w-400 overflow-hidden\">\r\n          {left}\r\n          <CustomMenu\r\n            menu=\"checkout-page-footer\"\r\n            className=\"text-xs mt-50 text-muted overflow-x-auto\"\r\n          />\r\n          <div className=\"mt-40\">\r\n            <LocaleSwitcher />\r\n          </div>\r\n        </div>\r\n        <div className=\"hidden md:block w-384\">\r\n          <div className=\"relative z-10\">{right}</div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {Product} from '../product';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst endpoint = (productId: string | number) =>\r\n  `billing/products/${productId}`;\r\n\r\nexport interface FetchProductResponse extends BackendResponse {\r\n  product: Product;\r\n}\r\n\r\nexport function useCheckoutProduct() {\r\n  const {productId, priceId} = useParams();\r\n  const query = useQuery({\r\n    queryKey: [endpoint(productId!)],\r\n    queryFn: () => fetchProduct(productId!),\r\n    placeholderData: keepPreviousData,\r\n    enabled: productId != null && priceId != null,\r\n  });\r\n\r\n  const product = query.data?.product;\r\n  const price =\r\n    product?.prices.find(p => p.id === parseInt(priceId!)) ||\r\n    product?.prices[0];\r\n\r\n  return {status: query.status, product, price};\r\n}\r\n\r\nfunction fetchProduct(\r\n  productId: string | number,\r\n): Promise<FetchProductResponse> {\r\n  return apiClient.get(endpoint(productId)).then(response => response.data);\r\n}\r\n","import {Trans} from '../../i18n/trans';\r\nimport {FormattedPrice} from '../../i18n/formatted-price';\r\nimport {useCheckoutProduct} from '../requests/use-checkout-product';\r\nimport {m} from 'framer-motion';\r\nimport {Skeleton} from '../../ui/skeleton/skeleton';\r\nimport {Product} from '../product';\r\nimport {Price} from '../price';\r\nimport {FormattedCurrency} from '../../i18n/formatted-currency';\r\nimport {ProductFeatureList} from '../pricing-table/product-feature-list';\r\nimport {opacityAnimation} from '../../ui/animation/opacity-animation';\r\nimport {UpsellLabel} from '@common/billing/pricing-table/upsell-label';\r\n\r\ninterface CheckoutProductSummaryProps {\r\n  showBillingLine?: boolean;\r\n}\r\nexport function CheckoutProductSummary({\r\n  showBillingLine = true,\r\n}: CheckoutProductSummaryProps) {\r\n  const {status, product, price} = useCheckoutProduct();\r\n\r\n  if (status === 'error' || (status !== 'pending' && (!product || !price))) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl mb-30\">\r\n        <Trans message=\"Summary\" />\r\n      </h2>\r\n      {status === 'pending' ? (\r\n        <LoadingSkeleton key=\"loading-skeleton\" />\r\n      ) : (\r\n        <ProductSummary\r\n          product={product!}\r\n          price={price!}\r\n          showBillingLine={showBillingLine}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ProductSummaryProps {\r\n  product: Product;\r\n  price: Price;\r\n  showBillingLine: boolean;\r\n}\r\nfunction ProductSummary({\r\n  product,\r\n  price,\r\n  showBillingLine,\r\n}: ProductSummaryProps) {\r\n  return (\r\n    <m.div>\r\n      <div className=\"text-xl font-semibold mb-6\">{product.name}</div>\r\n      {product.description && (\r\n        <div className=\"text-sm text-muted\">{product.description}</div>\r\n      )}\r\n      <FormattedPrice\r\n        priceClassName=\"font-bold text-4xl\"\r\n        periodClassName=\"text-muted text-xs\"\r\n        variant=\"separateLine\"\r\n        price={price}\r\n        className=\"mt-32\"\r\n      />\r\n      <br />\r\n      {price.interval === 'year' && (\r\n        <div className=\"flex items-center gap-4 text-xs text-muted\">\r\n          <Trans message=\"Billed Annually\" />\r\n          <UpsellLabel products={[product]} />\r\n        </div>\r\n      )}\r\n      {price.interval === 'month' && (\r\n        <div className=\"flex items-center gap-4 text-xs text-muted\">\r\n          <Trans message=\"Get\" />\r\n          <UpsellLabel products={[product]} />\r\n          <Trans message=\" When Billed Annually\" />\r\n        </div>\r\n      )}\r\n      {showBillingLine && (\r\n        <div className=\"flex items-center justify-between gap-24 border-t pt-24 mt-32 font-medium\">\r\n          <div>\r\n            <Trans message=\"Billed today\" />\r\n          </div>\r\n          <div>\r\n            <FormattedCurrency value={price.amount} currency={price.currency} currency_position={price.currency_position} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ProductFeatureList product={product} />\r\n    </m.div>\r\n  );\r\n}\r\n\r\nfunction LoadingSkeleton() {\r\n  return (\r\n    <m.div {...opacityAnimation} className=\"max-w-180\">\r\n      <Skeleton className=\"text-xl mb-6\" />\r\n      <Skeleton className=\"text-sm\" />\r\n      <Skeleton className=\"text-4xl mt-32\" />\r\n    </m.div>\r\n  );\r\n}\r\n","import {useEffect, useRef, useState} from 'react';\r\nimport {loadScript} from '@paypal/paypal-js';\r\nimport {useProducts} from '@common/billing/pricing-table/use-products';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\ninterface UsePaypalProps {\r\n  productId?: string;\r\n  priceId?: string;\r\n}\r\nexport function usePaypal({productId, priceId}: UsePaypalProps) {\r\n  const {data} = useProducts();\r\n  const paypalLoadStarted = useRef<boolean>(false);\r\n  const paypalButtonsRendered = useRef<boolean>(false);\r\n  const [paypalIsLoaded, setPaypalIsLoaded] = useState(false);\r\n  const paypalElementRef = useRef<HTMLDivElement>(null);\r\n  const {\r\n    base_url,\r\n    billing: {\r\n      stripe: {enable: stripeEnabled},\r\n      paypal: {enable: paypalEnabled, public_key},\r\n    },\r\n  } = useSettings();\r\n\r\n  useEffect(() => {\r\n    if (!paypalEnabled || !public_key || paypalLoadStarted.current) return;\r\n    loadScript({\r\n      clientId: public_key,\r\n      intent: 'subscription',\r\n      vault: true,\r\n      disableFunding: stripeEnabled ? 'card' : undefined,\r\n    }).then(() => {\r\n      setPaypalIsLoaded(true);\r\n    });\r\n    paypalLoadStarted.current = true;\r\n  }, [public_key, paypalEnabled, stripeEnabled]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !paypalIsLoaded ||\r\n      !window.paypal?.Buttons ||\r\n      !paypalElementRef.current ||\r\n      !data?.products.length ||\r\n      !productId ||\r\n      !priceId ||\r\n      paypalButtonsRendered.current\r\n    )\r\n      return;\r\n\r\n    const product = data.products.find(p => p.id === parseInt(productId));\r\n    const price = product?.prices.find(p => p.id === parseInt(priceId));\r\n\r\n    window.paypal\r\n      .Buttons({\r\n        style: {\r\n          label: 'pay',\r\n        },\r\n        createSubscription: (data, actions) => {\r\n          return actions.subscription.create({\r\n            application_context: {\r\n              shipping_preference: 'NO_SHIPPING',\r\n            },\r\n            plan_id: price?.paypal_id!,\r\n          });\r\n        },\r\n        onApprove: (data, actions) => {\r\n          actions.redirect(\r\n            `${base_url}/checkout/${productId}/${priceId}/paypal/done?subscriptionId=${data.subscriptionID}&status=success`\r\n          );\r\n          return Promise.resolve();\r\n        },\r\n        onError: e => {\r\n          location.href = `${base_url}/checkout/${productId}/${priceId}/paypal/done?status=error`;\r\n        },\r\n      })\r\n      .render(paypalElementRef.current)\r\n      .then(() => {\r\n        paypalButtonsRendered.current = true;\r\n      });\r\n  }, [productId, priceId, data, paypalIsLoaded, base_url]);\r\n\r\n  return {\r\n    paypalElementRef,\r\n    stripeIsEnabled: public_key != null && paypalEnabled,\r\n  };\r\n}\r\n","import {Navigate, useParams} from 'react-router-dom';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {CheckoutLayout} from './checkout-layout';\r\nimport {CheckoutProductSummary} from './checkout-product-summary';\r\nimport {usePaypal} from './paypal/use-paypal';\r\nimport {StripeElementsForm} from './stripe/stripe-elements-form';\r\nimport {Fragment} from 'react';\r\nimport {useProducts} from '../pricing-table/use-products';\r\nimport {FullPageLoader} from '../../ui/progress/full-page-loader';\r\nimport {useSettings} from '../../core/settings/use-settings';\r\n\r\nexport function Checkout() {\r\n  const {productId, priceId} = useParams();\r\n  const productQuery = useProducts();\r\n  const {paypalElementRef} = usePaypal({\r\n    productId,\r\n    priceId,\r\n  });\r\n  const {\r\n    base_url,\r\n    billing: {stripe},\r\n  } = useSettings();\r\n\r\n  if (productQuery.isLoading) {\r\n    return <FullPageLoader screen />;\r\n  }\r\n\r\n  const product = productQuery.data?.products.find(\r\n    p => p.id === parseInt(productId!)\r\n  );\r\n  const price = product?.prices.find(p => p.id === parseInt(priceId!));\r\n\r\n  // make sure product and price exists in backend\r\n  if (!product || !price || productQuery.status === 'error') {\r\n    return <Navigate to=\"/pricing\" replace />;\r\n  }\r\n\r\n  return (\r\n    <CheckoutLayout>\r\n      <Fragment>\r\n        <h1 className=\"mb-40 text-4xl\">\r\n          <Trans message=\"Checkout\" />\r\n        </h1>\r\n        {stripe.enable ? (\r\n          <Fragment>\r\n            <StripeElementsForm\r\n              productId={productId}\r\n              priceId={priceId}\r\n              submitLabel={<Trans message=\"Upgrade\" />}\r\n              type=\"subscription\"\r\n              returnUrl={`${base_url}/checkout/${productId}/${priceId}/stripe/done`}\r\n            />\r\n            <Separator />\r\n          </Fragment>\r\n        ) : null}\r\n        <div ref={paypalElementRef} />\r\n        <div className=\"mt-30 text-xs text-muted\">\r\n          <Trans message=\"You’ll be charged until you cancel your subscription. Previous charges won’t be refunded when you cancel unless it’s legally required. Your payment data is encrypted and secure. By subscribing your agree to our terms of service and privacy policy.\" />\r\n        </div>\r\n      </Fragment>\r\n      <CheckoutProductSummary />\r\n    </CheckoutLayout>\r\n  );\r\n}\r\n\r\nfunction Separator() {\r\n  return (\r\n    <div className=\"relative my-20 text-center before:absolute before:left-0 before:top-1/2 before:h-1 before:w-full before:-translate-y-1/2 before:bg-divider\">\r\n      <span className=\"relative z-10 bg px-10 text-sm text-muted\">\r\n        <Trans message=\"or\" />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import {CheckoutLayout} from '../checkout-layout';\r\nimport {useParams, useSearchParams} from 'react-router-dom';\r\nimport {loadStripe, PaymentIntent} from '@stripe/stripe-js';\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport {message} from '../../../i18n/message';\r\nimport {CheckoutProductSummary} from '../checkout-product-summary';\r\nimport {\r\n  BillingRedirectMessage,\r\n  BillingRedirectMessageConfig,\r\n} from '../../billing-redirect-message';\r\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\r\nimport {apiClient} from '../../../http/query-client';\r\nimport {useSettings} from '../../../core/settings/use-settings';\r\nimport {useBootstrapData} from '../../../core/bootstrap-data/bootstrap-data-context';\r\n\r\nexport function CheckoutStripeDone() {\r\n  const {invalidateBootstrapData} = useBootstrapData();\r\n  const {productId, priceId} = useParams();\r\n  const navigate = useNavigate();\r\n  const {\r\n    billing: {stripe_public_key},\r\n  } = useSettings();\r\n\r\n  const [params] = useSearchParams();\r\n  const clientSecret = params.get('payment_intent_client_secret');\r\n\r\n  const [messageConfig, setMessageConfig] =\r\n    useState<BillingRedirectMessageConfig>();\r\n\r\n  const stripeInitiated = useRef<boolean>();\r\n\r\n  useEffect(() => {\r\n    if (stripeInitiated.current) return;\r\n    loadStripe(stripe_public_key!).then(async stripe => {\r\n      if (!stripe || !clientSecret) {\r\n        setMessageConfig(getRedirectMessageConfig());\r\n        return;\r\n      }\r\n      stripe.retrievePaymentIntent(clientSecret).then(({paymentIntent}) => {\r\n        if (paymentIntent?.status === 'succeeded') {\r\n          storeSubscriptionDetailsLocally(paymentIntent.id).then(() => {\r\n            invalidateBootstrapData();\r\n          });\r\n        }\r\n        setMessageConfig(\r\n          getRedirectMessageConfig(paymentIntent?.status, productId, priceId),\r\n        );\r\n      });\r\n    });\r\n    stripeInitiated.current = true;\r\n  }, [\r\n    stripe_public_key,\r\n    clientSecret,\r\n    priceId,\r\n    productId,\r\n    invalidateBootstrapData,\r\n  ]);\r\n\r\n  if (!clientSecret) {\r\n    navigate('/');\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <CheckoutLayout>\r\n      <BillingRedirectMessage config={messageConfig} />\r\n      <CheckoutProductSummary showBillingLine={false} />\r\n    </CheckoutLayout>\r\n  );\r\n}\r\n\r\nfunction getRedirectMessageConfig(\r\n  status?: PaymentIntent.Status,\r\n  productId?: string,\r\n  priceId?: string,\r\n): BillingRedirectMessageConfig {\r\n  switch (status) {\r\n    case 'succeeded':\r\n      return {\r\n        message: message('Subscription successful!'),\r\n        status: 'success',\r\n        buttonLabel: message('Return to site'),\r\n        link: '/billing',\r\n      };\r\n    case 'processing':\r\n      return {\r\n        message: message(\r\n          \"Payment processing. We'll update you when payment is received.\",\r\n        ),\r\n        status: 'success',\r\n        buttonLabel: message('Return to site'),\r\n        link: '/billing',\r\n      };\r\n    case 'requires_payment_method':\r\n      return {\r\n        message: message('Payment failed. Please try another payment method.'),\r\n        status: 'error',\r\n        buttonLabel: message('Go back'),\r\n        link: errorLink(productId, priceId),\r\n      };\r\n    default:\r\n      return {\r\n        message: message('Something went wrong'),\r\n        status: 'error',\r\n        buttonLabel: message('Go back'),\r\n        link: errorLink(productId, priceId),\r\n      };\r\n  }\r\n}\r\n\r\nfunction errorLink(productId?: string, priceId?: string): string {\r\n  return productId && priceId ? `/checkout/${productId}/${priceId}` : '/';\r\n}\r\n\r\nfunction storeSubscriptionDetailsLocally(paymentIntentId: string) {\r\n  return apiClient.post('billing/stripe/store-subscription-details-locally', {\r\n    payment_intent_id: paymentIntentId,\r\n  });\r\n}\r\n","import {CheckoutLayout} from '../checkout-layout';\r\nimport {useParams, useSearchParams} from 'react-router-dom';\r\nimport {useEffect, useState} from 'react';\r\nimport {message} from '@common/i18n/message';\r\nimport {CheckoutProductSummary} from '../checkout-product-summary';\r\nimport {\r\n  BillingRedirectMessage,\r\n  BillingRedirectMessageConfig,\r\n} from '../../billing-redirect-message';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useBootstrapData} from '@common/core/bootstrap-data/bootstrap-data-context';\r\n\r\nexport function CheckoutPaypalDone() {\r\n  const {invalidateBootstrapData} = useBootstrapData();\r\n  const {productId, priceId} = useParams();\r\n  const [params] = useSearchParams();\r\n\r\n  const [messageConfig, setMessageConfig] =\r\n    useState<BillingRedirectMessageConfig>();\r\n\r\n  useEffect(() => {\r\n    const subscriptionId = params.get('subscriptionId');\r\n    const status = params.get('status');\r\n    setMessageConfig(getRedirectMessageConfig(status, productId, priceId));\r\n    if (subscriptionId && status === 'success') {\r\n      storeSubscriptionDetailsLocally(subscriptionId).then(() => {\r\n        invalidateBootstrapData();\r\n      });\r\n    }\r\n  }, [priceId, productId, params, invalidateBootstrapData]);\r\n\r\n  return (\r\n    <CheckoutLayout>\r\n      <BillingRedirectMessage config={messageConfig} />\r\n      <CheckoutProductSummary showBillingLine={false} />\r\n    </CheckoutLayout>\r\n  );\r\n}\r\n\r\nfunction getRedirectMessageConfig(\r\n  status?: 'success' | 'error' | string | null,\r\n  productId?: string,\r\n  priceId?: string,\r\n): BillingRedirectMessageConfig {\r\n  switch (status) {\r\n    case 'success':\r\n      return {\r\n        message: message('Subscription successful!'),\r\n        status: 'success',\r\n        buttonLabel: message('Return to site'),\r\n        link: '/billing',\r\n      };\r\n    default:\r\n      return {\r\n        message: message('Something went wrong. Please try again.'),\r\n        status: 'error',\r\n        buttonLabel: message('Go back'),\r\n        link: errorLink(productId, priceId),\r\n      };\r\n  }\r\n}\r\n\r\nfunction errorLink(productId?: string, priceId?: string): string {\r\n  return productId && priceId ? `/checkout/${productId}/${priceId}` : '/';\r\n}\r\n\r\nfunction storeSubscriptionDetailsLocally(subscriptionId: string) {\r\n  return apiClient.post('billing/paypal/store-subscription-details-locally', {\r\n    paypal_subscription_id: subscriptionId,\r\n  });\r\n}\r\n","import {Route, Routes} from 'react-router-dom';\r\nimport {NotSubscribedRoute} from '../../auth/guards/not-subscribed-route';\r\nimport {Checkout} from './checkout';\r\nimport React from 'react';\r\nimport {CheckoutStripeDone} from './stripe/checkout-stripe-done';\r\nimport {CheckoutPaypalDone} from './paypal/checkout-paypal-done';\r\n\r\nexport default function CheckoutRoutes() {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path=\":productId/:priceId\"\r\n        element={\r\n          <NotSubscribedRoute>\r\n            <Checkout />\r\n          </NotSubscribedRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\":productId/:priceId/stripe/done\"\r\n        element={\r\n          <NotSubscribedRoute>\r\n            <CheckoutStripeDone />\r\n          </NotSubscribedRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\":productId/:priceId/paypal/done\"\r\n        element={\r\n          <NotSubscribedRoute>\r\n            <CheckoutPaypalDone />\r\n          </NotSubscribedRoute>\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n}\r\n"],"names":["data","getRedirectMessageConfig","storeSubscriptionDetailsLocally","errorLink"],"mappings":"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"}