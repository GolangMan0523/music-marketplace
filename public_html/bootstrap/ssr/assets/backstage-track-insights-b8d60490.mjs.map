{"version":3,"file":"backstage-track-insights-b8d60490.mjs","sources":["../../../common/resources/client/utils/date/start-of-day.ts","../../../common/resources/client/utils/date/end-of-day.ts","../../../common/resources/client/i18n/get-user-timezone.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/resources/client/icons/material/DateRange.tsx","../../../common/resources/client/ui/forms/input-field/input.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/resources/client/ui/forms/input-field/date/utils.ts","../../../common/resources/client/ui/forms/input-field/date/use-base-date-picker-state.ts","../../../common/resources/client/i18n/use-current-date-time.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/resources/client/icons/material/ArrowRightAlt.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/set-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/page-step.ts","../../../common/resources/client/ui/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/literal-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/resources/client/ui/forms/input-field/date/segments/date-segment-list.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-month.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar.tsx","../../../common/resources/client/i18n/formatted-date-time-range.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/users/queries/use-normalized-models.ts","../../../common/resources/client/users/queries/use-normalized-model.ts","../../../common/resources/client/ui/forms/normalized-model-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/resources/client/ui/forms/input-field/chip-field/chip-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/form-chip-field.tsx","../../../common/resources/client/ui/forms/input-field/date/date-picker/use-date-picker-state.ts","../../../common/resources/client/ui/forms/input-field/date/date-picker/date-picker.tsx","../../../common/resources/client/icons/material/DragHandle.tsx","../../../common/resources/client/utils/hooks/sticky-sentinel.ts","../../../common/resources/client/admin/crupdate-resource-layout.tsx","../../../resources/client/admin/tracks-datatable-page/music.svg","../../../resources/client/web-player/artists/artist-picker/use-artist-picker-suggestions.ts","../../../resources/client/web-player/artists/artist-picker/form-artist-picker.tsx","../../../common/resources/client/tags/form-normalized-model-chip-field.tsx","../../../common/resources/client/tags/tag.ts","../../../common/resources/client/icons/material/FileUpload.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-status-text.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-progress.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-extract-track-file-metadata.ts","../../../resources/client/web-player/backstage/upload-page/use-track-uploader.ts","../../../resources/client/web-player/backstage/upload-page/use-track-upload.ts","../../../resources/client/admin/tracks-datatable-page/track-form/track-form-upload-button.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-form.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-create-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-create-track-form.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/create-track-page.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-update-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-update-track-form.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/update-track-page.tsx","../../../resources/client/admin/albums-datatable-page/requests/use-create-album.ts","../../../resources/client/admin/albums-datatable-page/requests/use-update-album.ts","../../../resources/client/admin/tracks-datatable-page/track-form/update-track-dialog.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/create-track-dialog.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-tracks-form.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-form.tsx","../../../resources/client/admin/albums-datatable-page/update-album-page.tsx","../../../resources/client/web-player/backstage/upload-page/album-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/tracks-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/album-border.png","../../../resources/client/web-player/backstage/upload-page/uploaded-media-preview.tsx","../../../resources/client/web-player/backstage/upload-page/drop-tarket-mask.tsx","../../../resources/client/web-player/backstage/upload-page/use-user-minutes-limit.ts","../../../resources/client/web-player/backstage/backstage-layout.tsx","../../../resources/client/web-player/backstage/upload-page/upload-page.tsx","../../../resources/client/admin/albums-datatable-page/create-album-page.tsx","../../../resources/client/web-player/backstage/requests/use-backstage-request.ts","../../../common/resources/client/icons/material/DocumentScanner.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/artist-albums-table.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/crupdate-artist-form.tsx","../../../resources/client/admin/artist-datatable-page/requests/use-update-artist.ts","../../../resources/client/admin/artist-datatable-page/update-artist-page.tsx","../../../common/resources/client/admin/analytics/report-date-selector.tsx","../../../common/resources/client/charts/chart-layout.tsx","../../../common/resources/client/charts/chart-loading-indicator.tsx","../../../common/resources/client/charts/base-chart.tsx","../../../common/resources/client/charts/data/format-report-data.ts","../../../common/resources/client/charts/chart-colors.tsx","../../../common/resources/client/charts/line-chart.tsx","../../../common/resources/client/charts/polar-area-chart.tsx","../../../common/resources/client/admin/analytics/geo-chart/use-google-geo-chart.ts","../../../common/resources/client/icons/material/ArrowBack.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger.tsx","../../../common/resources/client/i18n/formatted-country-name.tsx","../../../common/resources/client/admin/analytics/geo-chart/geo-chart.tsx","../../../resources/client/admin/reports/requests/use-insights-report.ts","../../../common/resources/client/icons/material/Info.tsx","../../../resources/client/admin/reports/top-models-chart-layout.tsx","../../../resources/client/admin/reports/insights-report-charts.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-layout.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-title.tsx","../../../resources/client/web-player/backstage/insights/backstage-artist-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-album-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-track-insights.tsx"],"sourcesContent":["import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\r\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\r\n}\r\n","import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\r\n  return date.set({\r\n    hour: 24 - 1,\r\n    minute: 60 - 1,\r\n    second: 60 - 1,\r\n    millisecond: 1000 - 1,\r\n  });\r\n}\r\n","import {getBootstrapData} from '../core/bootstrap-data/use-backend-bootstrap-data';\r\nimport {getLocalTimeZone} from '@internationalized/date';\r\n\r\nexport function getUserTimezone(): string {\r\n  const defaultTimezone = getBootstrapData()?.settings.dates.default_timezone;\r\n  const preferredTimezone =\r\n    getBootstrapData()?.user?.timezone || defaultTimezone || 'auto';\r\n\r\n  if (!preferredTimezone || preferredTimezone === 'auto') {\r\n    return getLocalTimeZone();\r\n  }\r\n  return preferredTimezone;\r\n}\r\n","import {DateRangeValue} from '../date-range-value';\r\nimport {message} from '@common/i18n/message';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\nimport {\r\n  endOfMonth,\r\n  endOfWeek,\r\n  endOfYear,\r\n  now,\r\n  startOfMonth,\r\n  startOfWeek,\r\n  startOfYear,\r\n} from '@internationalized/date';\r\nimport {startOfDay} from '@common/utils/date/start-of-day';\r\nimport {endOfDay} from '@common/utils/date/end-of-day';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\nimport {getUserTimezone} from '@common/i18n/get-user-timezone';\r\n\r\nconst Now = startOfDay(now(getUserTimezone()));\r\nconst locale = getBootstrapData()?.i18n?.language || 'en';\r\n\r\nexport interface DateRangePreset {\r\n  key: number;\r\n  label: MessageDescriptor;\r\n  getRangeValue: () => DateRangeValue;\r\n}\r\n\r\nexport const DateRangePresets: DateRangePreset[] = [\r\n  {\r\n    key: 0,\r\n    label: message('Today'),\r\n    getRangeValue: () => ({\r\n      preset: 0,\r\n      start: Now,\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 1,\r\n    label: message('Yesterday'),\r\n    getRangeValue: () => ({\r\n      preset: 1,\r\n      start: Now.subtract({days: 1}),\r\n      end: endOfDay(Now).subtract({days: 1}),\r\n    }),\r\n  },\r\n  {\r\n    key: 2,\r\n    label: message('This week'),\r\n    getRangeValue: () => ({\r\n      preset: 2,\r\n      start: startOfWeek(Now, locale),\r\n      end: endOfWeek(endOfDay(Now), locale),\r\n    }),\r\n  },\r\n  {\r\n    key: 3,\r\n    label: message('Last week'),\r\n    getRangeValue: () => {\r\n      const start = startOfWeek(Now, locale).subtract({days: 7});\r\n      return {\r\n        preset: 3,\r\n        start,\r\n        end: start.add({days: 6}),\r\n      };\r\n    },\r\n  },\r\n  {\r\n    key: 4,\r\n    label: message('Last 7 days'),\r\n    getRangeValue: () => ({\r\n      preset: 4,\r\n      start: Now.subtract({days: 7}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 6,\r\n    label: message('Last 30 days'),\r\n    getRangeValue: () => ({\r\n      preset: 6,\r\n      start: Now.subtract({days: 30}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 7,\r\n    label: message('Last 3 months'),\r\n    getRangeValue: () => ({\r\n      preset: 7,\r\n      start: Now.subtract({months: 3}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 8,\r\n    label: message('Last 12 months'),\r\n    getRangeValue: () => ({\r\n      preset: 8,\r\n      start: Now.subtract({months: 12}),\r\n      end: endOfDay(Now),\r\n    }),\r\n  },\r\n  {\r\n    key: 9,\r\n    label: message('This month'),\r\n    getRangeValue: () => ({\r\n      preset: 9,\r\n      start: startOfMonth(Now),\r\n      end: endOfMonth(endOfDay(Now)),\r\n    }),\r\n  },\r\n  {\r\n    key: 10,\r\n    label: message('This year'),\r\n    getRangeValue: () => ({\r\n      preset: 10,\r\n      start: startOfYear(Now),\r\n      end: endOfYear(endOfDay(Now)),\r\n    }),\r\n  },\r\n  {\r\n    key: 11,\r\n    label: message('Last year'),\r\n    getRangeValue: () => ({\r\n      preset: 11,\r\n      start: startOfYear(Now).subtract({years: 1}),\r\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\r\n    }),\r\n  },\r\n];\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DateRangeIcon = createSvgIcon(\r\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\r\n, 'DateRangeOutlined');\r\n","import {FocusScope} from '@react-aria/focus';\r\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface InputProps {\r\n  className?: string;\r\n  children: ReactNode;\r\n  autoFocus?: boolean;\r\n  disabled?: boolean;\r\n  style?: CSSProperties;\r\n  inputProps?: ComponentPropsWithoutRef<'div'>;\r\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\r\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\r\n}\r\n\r\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\r\n  (props, ref) => {\r\n    const {\r\n      children,\r\n      inputProps,\r\n      wrapperProps,\r\n      className,\r\n      autoFocus,\r\n      style,\r\n      onClick,\r\n    } = props;\r\n\r\n    return (\r\n      <div {...wrapperProps} onClick={onClick}>\r\n        <div\r\n          {...inputProps}\r\n          role=\"group\"\r\n          className={clsx(\r\n            className,\r\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\r\n          )}\r\n          ref={ref}\r\n          style={style}\r\n        >\r\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createFocusManager} from '@react-aria/focus';\r\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\r\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\r\nimport {Field, FieldProps} from '../../field';\r\nimport {Input} from '../../input';\r\nimport {useField} from '../../use-field';\r\n\r\nexport interface DatePickerFieldProps\r\n  extends Omit<FieldProps, 'fieldClassNames'> {\r\n  inputRef?: Ref<HTMLDivElement>;\r\n  onBlur?: FocusEventHandler;\r\n  showCalendarFooter?: boolean;\r\n}\r\nexport const DatePickerField = React.forwardRef<HTMLDivElement, DatePickerFieldProps>(\r\n  ({ inputRef, wrapperProps, children, onBlur, ...other }, ref) => {\r\n    const fieldClassNames = getInputFieldClassNames(other);\r\n    const objRef = useObjectRef(ref);\r\n\r\n    const { fieldProps, inputProps } = useField({\r\n      ...other,\r\n      focusRef: objRef,\r\n      labelElementType: 'span',\r\n    });\r\n\r\n    fieldClassNames.wrapper = clsx(fieldClassNames.wrapper, other.disabled && 'pointer-events-none');\r\n\r\n    return (\r\n      <Field\r\n        wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\r\n          wrapperProps!,\r\n          {\r\n            onBlur: (e) => {\r\n              if (objRef.current && !objRef.current.contains(e.relatedTarget as Node)) {\r\n                onBlur?.(e);\r\n              }\r\n            },\r\n            onClick: () => {\r\n              // focus first segment when clicking on label or somewhere else in the field, but not directly on segment\r\n              const focusManager = createFocusManager(objRef);\r\n              focusManager?.focusFirst();\r\n            },\r\n          }\r\n        )}\r\n        fieldClassNames={fieldClassNames}\r\n        ref={objRef}\r\n        {...fieldProps}\r\n      >\r\n        <Input\r\n          inputProps={inputProps}\r\n          className={clsx(fieldClassNames.input, 'gap-10')}\r\n          ref={inputRef}\r\n        >\r\n          {children}\r\n        </Input>\r\n      </Field>\r\n    );\r\n  }\r\n);\r\n","import {CalendarDate, DateValue} from '@internationalized/date';\r\n\r\nexport function getDefaultGranularity(date: DateValue) {\r\n  if (date instanceof CalendarDate) {\r\n    return 'day';\r\n  }\r\n  return 'minute';\r\n}\r\n\r\nexport function dateIsInvalid(\r\n  date: CalendarDate,\r\n  min?: DateValue,\r\n  max?: DateValue\r\n) {\r\n  return (\r\n    (min != null && date.compare(min) < 0) ||\r\n    (max != null && date.compare(max) > 0)\r\n  );\r\n}\r\n","import {useState} from 'react';\r\nimport {DateValue, toZoned, ZonedDateTime} from '@internationalized/date';\r\nimport {getDefaultGranularity} from './utils';\r\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\r\nimport {DateRangeValue} from './date-range-picker/date-range-value';\r\nimport {useUserTimezone} from '@common/i18n/use-user-timezone';\r\n\r\nexport function useBaseDatePickerState(\r\n  selectedDate: DateValue,\r\n  props:\r\n    | DatePickerValueProps<ZonedDateTime>\r\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>\r\n) {\r\n  const timezone = useUserTimezone();\r\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\r\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\r\n\r\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\r\n  const min = props.min ? toZoned(props.min, timezone) : undefined;\r\n  const max = props.max ? toZoned(props.max, timezone) : undefined;\r\n\r\n  return {\r\n    timezone,\r\n    granularity,\r\n    min,\r\n    max,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    closeDialogOnSelection,\r\n  };\r\n}\r\n","import {useMemo} from 'react';\r\nimport {now} from '@internationalized/date';\r\nimport {useUserTimezone} from './use-user-timezone';\r\n\r\nexport function useCurrentDateTime() {\r\n  const timezone = useUserTimezone();\r\n  return useMemo(() => {\r\n    return now(timezone);\r\n  }, [timezone]);\r\n}\r\n","import {useControlledState} from '@react-stately/utils';\r\nimport {HTMLAttributes, useCallback, useState} from 'react';\r\nimport {\r\n  CalendarDate,\r\n  DateValue,\r\n  endOfMonth,\r\n  isSameDay,\r\n  isSameMonth,\r\n  maxDate,\r\n  minDate,\r\n  startOfMonth,\r\n  toCalendarDate,\r\n  toZoned,\r\n  ZonedDateTime,\r\n} from '@internationalized/date';\r\nimport {\r\n  BaseDatePickerState,\r\n  DatePickerValueProps,\r\n} from '../date-picker/use-date-picker-state';\r\nimport {DateRangeValue} from './date-range-value';\r\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\r\nimport {startOfDay} from '@common/utils/date/start-of-day';\r\nimport {endOfDay} from '@common/utils/date/end-of-day';\r\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\r\n\r\nexport interface IsPlaceholderValue {\r\n  start: boolean;\r\n  end: boolean;\r\n}\r\n\r\nexport type DateRangePickerState = BaseDatePickerState<\r\n  DateRangeValue,\r\n  IsPlaceholderValue\r\n>;\r\n\r\nexport function useDateRangePickerState(\r\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\r\n): DateRangePickerState {\r\n  const now = useCurrentDateTime();\r\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\r\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\r\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\r\n  });\r\n\r\n  // if user clears the date, we will want to still keep an\r\n  // instance internally, but return null via \"onChange\" callback\r\n  const setStateValue = props.onChange;\r\n  const [internalValue, setInternalValue] = useControlledState(\r\n    props.value ? completeRange(props.value, now) : undefined,\r\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\r\n    value => {\r\n      setIsPlaceholder({start: false, end: false});\r\n      setStateValue?.(value);\r\n    },\r\n  );\r\n\r\n  const {\r\n    min,\r\n    max,\r\n    granularity,\r\n    timezone,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    closeDialogOnSelection,\r\n  } = useBaseDatePickerState(internalValue.start, props);\r\n\r\n  const clear = useCallback(() => {\r\n    setIsPlaceholder({start: true, end: true});\r\n    setInternalValue(completeRange(null, now));\r\n    setStateValue?.(null);\r\n    setCalendarIsOpen(false);\r\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\r\n\r\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\r\n  const [isHighlighting, setIsHighlighting] = useState(false);\r\n  const [highlightedRange, setHighlightedRange] =\r\n    useState<DateRangeValue>(internalValue);\r\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\r\n    return rangeToCalendarDates(internalValue, max);\r\n  });\r\n\r\n  const constrainRange = useCallback(\r\n    (range: DateRangeValue): DateRangeValue => {\r\n      let start = range.start;\r\n      let end = range.end;\r\n\r\n      // make sure start date is after min date and before max date/range end\r\n      if (min) {\r\n        start = maxDate(start, min);\r\n      }\r\n      const startMax = max ? minDate(max, end) : end;\r\n      start = minDate(start, startMax);\r\n\r\n      // make sure end date is after min date/range start and before max date\r\n      const endMin = min ? maxDate(min, start) : start;\r\n      end = maxDate(end, endMin);\r\n\r\n      if (max) {\r\n        end = minDate(end, max);\r\n      }\r\n\r\n      return {start: toZoned(start, timezone), end: toZoned(end, timezone)};\r\n    },\r\n    [min, max, timezone],\r\n  );\r\n\r\n  const setSelectedValue = useCallback(\r\n    (newRange: DateRangeValue) => {\r\n      const value = {\r\n        ...constrainRange(newRange),\r\n        preset: newRange.preset,\r\n      };\r\n      setInternalValue(value);\r\n      setHighlightedRange(value);\r\n      setCalendarDates(rangeToCalendarDates(value, max));\r\n      setIsPlaceholder({start: false, end: false});\r\n    },\r\n    [setInternalValue, constrainRange, max],\r\n  );\r\n\r\n  const dayIsActive = useCallback(\r\n    (day: CalendarDate) => {\r\n      return (\r\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\r\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\r\n      );\r\n    },\r\n    [highlightedRange, isPlaceholder],\r\n  );\r\n\r\n  const dayIsHighlighted = useCallback(\r\n    (day: CalendarDate) => {\r\n      return (\r\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\r\n        day.compare(highlightedRange.start) >= 0 &&\r\n        day.compare(highlightedRange.end) <= 0\r\n      );\r\n    },\r\n    [highlightedRange, isPlaceholder, isHighlighting],\r\n  );\r\n\r\n  const dayIsRangeStart = useCallback(\r\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\r\n    [highlightedRange],\r\n  );\r\n\r\n  const dayIsRangeEnd = useCallback(\r\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\r\n    [highlightedRange],\r\n  );\r\n\r\n  const getCellProps = useCallback(\r\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\r\n      return {\r\n        onPointerEnter: () => {\r\n          if (isHighlighting && isSameMonth) {\r\n            setHighlightedRange(\r\n              makeRange({start: anchorDate!, end: date, timezone}),\r\n            );\r\n          }\r\n        },\r\n        onClick: () => {\r\n          if (!isHighlighting) {\r\n            setIsHighlighting(true);\r\n            setAnchorDate(date);\r\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\r\n          } else {\r\n            const finalRange = makeRange({\r\n              start: anchorDate!,\r\n              end: date,\r\n              timezone,\r\n            });\r\n            // cast to start and end of day after making range, because \"makeRange\"\r\n            // will flip start and end dates, if they are out of order\r\n            finalRange.start = startOfDay(finalRange.start);\r\n            finalRange.end = endOfDay(finalRange.end);\r\n            setIsHighlighting(false);\r\n            setAnchorDate(null);\r\n            setSelectedValue?.(finalRange);\r\n            if (closeDialogOnSelection) {\r\n              setCalendarIsOpen?.(false);\r\n            }\r\n          }\r\n        },\r\n      };\r\n    },\r\n    [\r\n      anchorDate,\r\n      isHighlighting,\r\n      setSelectedValue,\r\n      setCalendarIsOpen,\r\n      closeDialogOnSelection,\r\n      timezone,\r\n    ],\r\n  );\r\n\r\n  return {\r\n    selectedValue: internalValue,\r\n    setSelectedValue,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    dayIsActive,\r\n    dayIsHighlighted,\r\n    dayIsRangeStart,\r\n    dayIsRangeEnd,\r\n    getCellProps,\r\n    calendarDates,\r\n    setIsPlaceholder,\r\n    isPlaceholder,\r\n    clear,\r\n    setCalendarDates,\r\n    min,\r\n    max,\r\n    granularity,\r\n    timezone,\r\n    closeDialogOnSelection,\r\n  };\r\n}\r\n\r\nfunction rangeToCalendarDates(\r\n  range: DateRangeValue,\r\n  max?: DateValue,\r\n): CalendarDate[] {\r\n  let start = toCalendarDate(startOfMonth(range.start));\r\n  let end = toCalendarDate(endOfMonth(range.end));\r\n\r\n  // make sure we don't show the same month twice\r\n  if (isSameMonth(start, end)) {\r\n    end = endOfMonth(end.add({months: 1}));\r\n  }\r\n\r\n  // if next month is disabled, show previous instead\r\n  if (max && end.compare(max) > 0) {\r\n    end = start;\r\n    start = startOfMonth(start.subtract({months: 1}));\r\n  }\r\n  return [start, end];\r\n}\r\n\r\ninterface MakeRangeProps {\r\n  start: DateValue;\r\n  end: DateValue;\r\n  timezone: string;\r\n}\r\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\r\n  const start = toZoned(props.start, props.timezone);\r\n  const end = toZoned(props.end, props.timezone);\r\n  if (start.compare(end) > 0) {\r\n    return {start: end, end: start};\r\n  }\r\n  return {start, end};\r\n}\r\n\r\nfunction completeRange(\r\n  range: Partial<DateRangeValue> | null | undefined,\r\n  now: ZonedDateTime,\r\n): DateRangeValue {\r\n  if (range?.start && range?.end) {\r\n    return range as DateRangeValue;\r\n  } else if (!range?.start && range?.end) {\r\n    range.start = range.end.subtract({months: 1});\r\n    return range as DateRangeValue;\r\n  } else if (!range?.end && range?.start) {\r\n    range.end = range.start.add({months: 1});\r\n    return range as DateRangeValue;\r\n  }\r\n  return {start: now, end: now.add({months: 1})};\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ArrowRightAltIcon = createSvgIcon(\r\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\r\n, 'ArrowRightAltOutlined');\r\n","import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function adjustSegment(\r\n  value: ZonedDateTime,\r\n  part: string,\r\n  amount: number,\r\n  options: Intl.ResolvedDateTimeFormatOptions\r\n) {\r\n  switch (part) {\r\n    case 'era':\r\n    case 'year':\r\n    case 'month':\r\n    case 'day':\r\n      return value.cycle(part, amount, {round: part === 'year'});\r\n  }\r\n\r\n  if ('hour' in value) {\r\n    switch (part) {\r\n      case 'dayPeriod': {\r\n        const hours = value.hour;\r\n        const isPM = hours >= 12;\r\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\r\n      }\r\n      case 'hour':\r\n      case 'minute':\r\n      case 'second':\r\n        return value.cycle(part, amount, {\r\n          round: part !== 'hour',\r\n          hourCycle: options.hour12 ? 12 : 24,\r\n        });\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n","import {ZonedDateTime} from '@internationalized/date';\r\n\r\nexport function setSegment(\r\n  value: ZonedDateTime,\r\n  part: string,\r\n  segmentValue: number,\r\n  options: Intl.ResolvedDateTimeFormatOptions\r\n) {\r\n  switch (part) {\r\n    case 'day':\r\n    case 'month':\r\n    case 'year':\r\n      return value.set({[part]: segmentValue});\r\n  }\r\n\r\n  if ('hour' in value) {\r\n    switch (part) {\r\n      case 'dayPeriod': {\r\n        const hours = value.hour;\r\n        const wasPM = hours >= 12;\r\n        const isPM = segmentValue >= 12;\r\n        if (isPM === wasPM) {\r\n          return value;\r\n        }\r\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\r\n      }\r\n      case 'hour':\r\n        // In 12 hour time, ensure that AM/PM does not change\r\n        if (options.hour12) {\r\n          const hours = value.hour;\r\n          const wasPM = hours >= 12;\r\n          if (!wasPM && segmentValue === 12) {\r\n            segmentValue = 0;\r\n          }\r\n          if (wasPM && segmentValue < 12) {\r\n            segmentValue += 12;\r\n          }\r\n        }\r\n      // fallthrough\r\n      case 'minute':\r\n      case 'second':\r\n        return value.set({[part]: segmentValue});\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n","export const PAGE_STEP = {\r\n  year: 5,\r\n  month: 2,\r\n  day: 7,\r\n  hour: 2,\r\n  minute: 15,\r\n  second: 15,\r\n  dayPeriod: 1,\r\n};\r\n","import {useFocusManager} from '@react-aria/focus';\r\nimport React, {\r\n  ComponentPropsWithoutRef,\r\n  HTMLAttributes,\r\n  KeyboardEventHandler,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\nimport {NumberParser} from '@internationalized/number';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {today, ZonedDateTime} from '@internationalized/date';\r\nimport {useSelectedLocale} from '@common/i18n/selected-locale';\r\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {adjustSegment} from './utils/adjust-segment';\r\nimport {setSegment} from './utils/set-segment';\r\nimport {PAGE_STEP} from './utils/page-step';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\nexport interface EditableSegment {\r\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\r\n  text: string;\r\n  value: number;\r\n  minValue: number;\r\n  maxValue: number;\r\n  minLength: number;\r\n}\r\n\r\ninterface DatePickerSegmentProps {\r\n  segment: EditableSegment;\r\n  domProps?: ComponentPropsWithoutRef<'div'>;\r\n  state: DatePickerState | DateRangePickerState;\r\n  value: ZonedDateTime;\r\n  onChange: (newValue: ZonedDateTime) => void;\r\n  isPlaceholder?: boolean;\r\n}\r\nexport function EditableDateSegment({\r\n  segment,\r\n  domProps,\r\n  value,\r\n  onChange,\r\n  isPlaceholder,\r\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\r\n}: DatePickerSegmentProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const enteredKeys = useRef('');\r\n  const {localeCode} = useSelectedLocale();\r\n  const focusManager = useFocusManager();\r\n  const formatter = useDateFormatter({timeZone: timezone});\r\n  const parser = useMemo(\r\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\r\n    [localeCode],\r\n  );\r\n\r\n  const setSegmentValue = (newValue: number) => {\r\n    onChange(\r\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\r\n    );\r\n  };\r\n\r\n  const adjustSegmentValue = (amount: number) => {\r\n    onChange(\r\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\r\n    );\r\n  };\r\n\r\n  const backspace = () => {\r\n    if (parser.isValidPartialNumber(segment.text)) {\r\n      const newValue = segment.text.slice(0, -1);\r\n      const parsed = parser.parse(newValue);\r\n      if (newValue.length === 0 || parsed === 0) {\r\n        const now = today(timezone);\r\n        if (segment.type in now) {\r\n          // @ts-ignore\r\n          setSegmentValue(now[segment.type]);\r\n        }\r\n      } else {\r\n        setSegmentValue(parsed);\r\n      }\r\n      enteredKeys.current = newValue;\r\n    } else if (segment.type === 'dayPeriod') {\r\n      adjustSegmentValue(-1);\r\n    }\r\n  };\r\n\r\n  const onKeyDown: KeyboardEventHandler = e => {\r\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\r\n      return;\r\n    }\r\n\r\n    // Navigation between date segments and deletion\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        focusManager?.focusPrevious();\r\n        break;\r\n      case 'ArrowRight':\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'Enter':\r\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\r\n        setCalendarIsOpen(!calendarIsOpen);\r\n        break;\r\n      case 'Tab':\r\n        break;\r\n      case 'Backspace':\r\n      case 'Delete': {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        backspace();\r\n        break;\r\n      }\r\n\r\n      // Spinbutton incrementing/decrementing\r\n      case 'ArrowUp':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(1);\r\n        break;\r\n      case 'ArrowDown':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(-1);\r\n        break;\r\n      case 'PageUp':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\r\n        break;\r\n      case 'PageDown':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\r\n        break;\r\n      case 'Home':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        setSegmentValue(segment.maxValue);\r\n        break;\r\n      case 'End':\r\n        e.preventDefault();\r\n        enteredKeys.current = '';\r\n        setSegmentValue(segment.minValue);\r\n        break;\r\n    }\r\n\r\n    onInput(e.key);\r\n  };\r\n\r\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\r\n  const am = useMemo(() => {\r\n    const amDate = new Date();\r\n    amDate.setHours(0);\r\n    return amPmFormatter\r\n      .formatToParts(amDate)\r\n      .find(part => part.type === 'dayPeriod')!.value;\r\n  }, [amPmFormatter]);\r\n  const pm = useMemo(() => {\r\n    const pmDate = new Date();\r\n    pmDate.setHours(12);\r\n    return amPmFormatter\r\n      .formatToParts(pmDate)\r\n      .find(part => part.type === 'dayPeriod')!.value;\r\n  }, [amPmFormatter]);\r\n\r\n  // Update date values on user keyboard input\r\n  const onInput = (key: string) => {\r\n    const newValue = enteredKeys.current + key;\r\n\r\n    switch (segment.type) {\r\n      case 'dayPeriod':\r\n        if (am.toLowerCase().startsWith(key)) {\r\n          setSegmentValue(0);\r\n        } else if (pm.toLowerCase().startsWith(key)) {\r\n          setSegmentValue(12);\r\n        } else {\r\n          break;\r\n        }\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'day':\r\n      case 'hour':\r\n      case 'minute':\r\n      case 'second':\r\n      case 'month':\r\n      case 'year': {\r\n        if (!parser.isValidPartialNumber(newValue)) {\r\n          return;\r\n        }\r\n\r\n        let numberValue = parser.parse(newValue);\r\n        let segmentValue = numberValue;\r\n        let allowsZero = segment.minValue === 0;\r\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\r\n          switch (formatter.resolvedOptions().hourCycle) {\r\n            case 'h11':\r\n              if (numberValue > 11) {\r\n                segmentValue = parser.parse(key);\r\n              }\r\n              break;\r\n            case 'h12':\r\n              allowsZero = false;\r\n              if (numberValue > 12) {\r\n                segmentValue = parser.parse(key);\r\n              }\r\n              break;\r\n          }\r\n\r\n          if (segment.value >= 12 && numberValue > 1) {\r\n            numberValue += 12;\r\n          }\r\n        } else if (numberValue > segment.maxValue) {\r\n          segmentValue = parser.parse(key);\r\n        }\r\n\r\n        if (Number.isNaN(numberValue)) {\r\n          return;\r\n        }\r\n\r\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\r\n        if (shouldSetValue) {\r\n          setSegmentValue(segmentValue);\r\n        }\r\n\r\n        if (\r\n          Number(`${numberValue}0`) > segment.maxValue ||\r\n          newValue.length >= String(segment.maxValue).length\r\n        ) {\r\n          enteredKeys.current = '';\r\n          if (shouldSetValue) {\r\n            focusManager?.focusNext();\r\n          }\r\n        } else {\r\n          enteredKeys.current = newValue;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\r\n    ? {}\r\n    : {\r\n        'aria-label': segment.type,\r\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\r\n        'aria-valuemin': segment.minValue,\r\n        'aria-valuemax': segment.maxValue,\r\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\r\n        tabIndex: 0,\r\n        onKeyDown,\r\n      };\r\n\r\n  return (\r\n    <div\r\n      {...mergeProps(domProps!, {\r\n        ...spinButtonProps,\r\n        onFocus: e => {\r\n          enteredKeys.current = '';\r\n          e.target.scrollIntoView({block: 'nearest'});\r\n        },\r\n        onClick: e => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        },\r\n      } as HTMLAttributes<HTMLDivElement>)}\r\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\r\n    >\r\n      {segment.text.padStart(segment.minLength, '0')}\r\n    </div>\r\n  );\r\n}\r\n","import {useFocusManager} from '@react-aria/focus';\r\nimport {ComponentPropsWithoutRef} from 'react';\r\n\r\nexport interface LiteralSegment {\r\n  type: 'literal';\r\n  minLength: 1;\r\n  text: string;\r\n}\r\n\r\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\r\n  segment: LiteralSegment;\r\n  domProps?: ComponentPropsWithoutRef<'div'>;\r\n}\r\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\r\n  const focusManager = useFocusManager();\r\n  return (\r\n    <div\r\n      {...domProps}\r\n      onPointerDown={e => {\r\n        if (e.pointerType === 'mouse') {\r\n          e.preventDefault();\r\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\r\n          if (!res) {\r\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\r\n          }\r\n        }\r\n      }}\r\n      aria-hidden\r\n      className=\"min-w-4 cursor-default select-none\"\r\n    >\r\n      {segment.text}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  DateValue,\r\n  getMinimumDayInMonth,\r\n  getMinimumMonthInYear,\r\n} from '@internationalized/date';\r\n\r\nexport function getSegmentLimits(\r\n  date: DateValue,\r\n  type: string,\r\n  options: Intl.ResolvedDateTimeFormatOptions\r\n) {\r\n  switch (type) {\r\n    case 'year':\r\n      return {\r\n        value: date.year,\r\n        placeholder: 'yyyy',\r\n        minValue: 1,\r\n        maxValue: date.calendar.getYearsInEra(date),\r\n      };\r\n    case 'month':\r\n      return {\r\n        value: date.month,\r\n        placeholder: 'mm',\r\n        minValue: getMinimumMonthInYear(date),\r\n        maxValue: date.calendar.getMonthsInYear(date),\r\n      };\r\n    case 'day':\r\n      return {\r\n        value: date.day,\r\n        minValue: getMinimumDayInMonth(date),\r\n        maxValue: date.calendar.getDaysInMonth(date),\r\n        placeholder: 'dd',\r\n      };\r\n  }\r\n\r\n  if ('hour' in date) {\r\n    switch (type) {\r\n      case 'dayPeriod':\r\n        return {\r\n          value: date.hour >= 12 ? 12 : 0,\r\n          minValue: 0,\r\n          maxValue: 12,\r\n          placeholder: '--',\r\n        };\r\n      case 'hour':\r\n        if (options.hour12) {\r\n          const isPM = date.hour >= 12;\r\n          return {\r\n            value: date.hour,\r\n            minValue: isPM ? 12 : 0,\r\n            maxValue: isPM ? 23 : 11,\r\n            placeholder: '--',\r\n          };\r\n        }\r\n\r\n        return {\r\n          value: date.hour,\r\n          minValue: 0,\r\n          maxValue: 23,\r\n          placeholder: '--',\r\n        };\r\n      case 'minute':\r\n        return {\r\n          value: date.minute,\r\n          minValue: 0,\r\n          maxValue: 59,\r\n          placeholder: '--',\r\n        };\r\n    }\r\n  }\r\n\r\n  return {};\r\n}\r\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\r\nimport {ZonedDateTime} from '@internationalized/date';\r\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\r\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\r\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {getSegmentLimits} from './utils/get-segment-limits';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\ninterface DateSegmentListProps {\r\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\r\n  state: DatePickerState | DateRangePickerState;\r\n  value: ZonedDateTime;\r\n  onChange: (newValue: ZonedDateTime) => void;\r\n  isPlaceholder?: boolean;\r\n}\r\nexport function DateSegmentList({\r\n  segmentProps,\r\n  state,\r\n  value,\r\n  onChange,\r\n  isPlaceholder,\r\n}: DateSegmentListProps) {\r\n  const {granularity} = state;\r\n  const options = useMemo(() => {\r\n    const memoOptions: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n    };\r\n    if (granularity === 'minute') {\r\n      memoOptions.hour = 'numeric';\r\n      memoOptions.minute = 'numeric';\r\n    }\r\n    return memoOptions;\r\n  }, [granularity]);\r\n\r\n  const formatter = useDateFormatter(options);\r\n\r\n  const dateValue = useMemo(() => value.toDate(), [value]);\r\n  const segments = useMemo(() => {\r\n    return formatter.formatToParts(dateValue).map(segment => {\r\n      const limits = getSegmentLimits(\r\n        value,\r\n        segment.type,\r\n        formatter.resolvedOptions(),\r\n      );\r\n      const textValue =\r\n        isPlaceholder && segment.type !== 'literal'\r\n          ? limits.placeholder\r\n          : segment.value;\r\n      return {\r\n        type: segment.type,\r\n        text: segment.value === ', ' ? ' ' : textValue,\r\n        ...limits,\r\n        minLength:\r\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\r\n      } as LiteralSegment | EditableSegment;\r\n    });\r\n  }, [dateValue, formatter, isPlaceholder, value]);\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      {segments.map((segment, index) => {\r\n        if (segment.type === 'literal') {\r\n          return (\r\n            <LiteralDateSegment\r\n              domProps={segmentProps}\r\n              key={index}\r\n              segment={segment}\r\n            />\r\n          );\r\n        }\r\n        return (\r\n          <EditableDateSegment\r\n            isPlaceholder={isPlaceholder}\r\n            domProps={segmentProps}\r\n            state={state}\r\n            value={value}\r\n            onChange={onChange}\r\n            segment={segment}\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n  CalendarDate,\r\n  DateValue,\r\n  getDayOfWeek,\r\n  isSameMonth,\r\n  isToday,\r\n} from '@internationalized/date';\r\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {dateIsInvalid} from '../utils';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\ninterface CalendarCellProps {\r\n  date: CalendarDate;\r\n  currentMonth: DateValue;\r\n  state: DatePickerState | DateRangePickerState;\r\n}\r\nexport function CalendarCell({\r\n  date,\r\n  currentMonth,\r\n  state: {\r\n    dayIsActive,\r\n    dayIsHighlighted,\r\n    dayIsRangeStart,\r\n    dayIsRangeEnd,\r\n    getCellProps,\r\n    timezone,\r\n    min,\r\n    max,\r\n  },\r\n}: CalendarCellProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const dayOfWeek = getDayOfWeek(date, localeCode);\r\n  const isActive = dayIsActive(date);\r\n  const isHighlighted = dayIsHighlighted(date);\r\n  const isRangeStart = dayIsRangeStart(date);\r\n  const isRangeEnd = dayIsRangeEnd(date);\r\n  const dayIsToday = isToday(date, timezone);\r\n  const sameMonth = isSameMonth(date, currentMonth);\r\n  const isDisabled = dateIsInvalid(date, min, max);\r\n\r\n  return (\r\n    <div\r\n      role=\"button\"\r\n      aria-disabled={isDisabled}\r\n      className={clsx(\r\n        'w-40 h-40 text-sm relative isolate flex-shrink-0',\r\n        isDisabled && 'text-disabled pointer-events-none',\r\n        !sameMonth && 'invisible pointer-events-none'\r\n      )}\r\n      {...getCellProps(date, sameMonth)}\r\n    >\r\n      <span\r\n        className={clsx(\r\n          'absolute inset-0 flex items-center justify-center rounded-full w-full h-full select-none z-10 cursor-pointer',\r\n          !isActive && !dayIsToday && 'hover:bg-hover',\r\n          isActive && 'bg-primary text-on-primary font-semibold',\r\n          dayIsToday && !isActive && 'bg-chip'\r\n        )}\r\n      >\r\n        {date.day}\r\n      </span>\r\n      {isHighlighted && sameMonth && (\r\n        <span\r\n          className={clsx(\r\n            'absolute w-full h-full inset-0 bg-primary/focus',\r\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\r\n              'rounded-l-full',\r\n            (isRangeEnd ||\r\n              dayOfWeek === 6 ||\r\n              date.day ===\r\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\r\n              'rounded-r-full'\r\n          )}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {m} from 'framer-motion';\r\nimport {\r\n  CalendarDate,\r\n  endOfMonth,\r\n  getWeeksInMonth,\r\n  startOfMonth,\r\n  startOfWeek,\r\n} from '@internationalized/date';\r\nimport {KeyboardArrowLeftIcon} from '../../../../../icons/material/KeyboardArrowLeft';\r\nimport {IconButton} from '../../../../buttons/icon-button';\r\nimport {KeyboardArrowRightIcon} from '../../../../../icons/material/KeyboardArrowRight';\r\nimport {CalendarCell} from './calendar-cell';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {useDateFormatter} from '../../../../../i18n/use-date-formatter';\r\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\r\nimport {dateIsInvalid} from '../utils';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\nexport interface CalendarMonthProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  startDate: CalendarDate;\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n}\r\nexport function CalendarMonth({\r\n  startDate,\r\n  state,\r\n  isFirst,\r\n  isLast,\r\n}: CalendarMonthProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\r\n  const monthStart = startOfWeek(startDate, localeCode);\r\n\r\n  return (\r\n    <div className=\"w-280 flex-shrink-0\">\r\n      <CalendarMonthHeader\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        state={state}\r\n        currentMonth={startDate}\r\n      />\r\n      <div className=\"block\" role=\"grid\">\r\n        <WeekdayHeader state={state} startDate={startDate} />\r\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\r\n          <m.div className=\"flex mb-6\" key={weekIndex}>\r\n            {[...new Array(7).keys()].map(dayIndex => (\r\n              <CalendarCell\r\n                key={dayIndex}\r\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\r\n                currentMonth={startDate}\r\n                state={state}\r\n              />\r\n            ))}\r\n          </m.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CalendarMonthHeaderProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  currentMonth: CalendarDate;\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n}\r\nfunction CalendarMonthHeader({\r\n  currentMonth,\r\n  isFirst,\r\n  isLast,\r\n  state: {calendarDates, setCalendarDates, timezone, min, max},\r\n}: CalendarMonthHeaderProps) {\r\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\r\n    const count = calendarDates.length;\r\n    let newDates: CalendarDate[];\r\n    if (direction === 'forward') {\r\n      newDates = calendarDates.map(date =>\r\n        endOfMonth(date.add({months: count}))\r\n      );\r\n    } else {\r\n      newDates = calendarDates.map(date =>\r\n        endOfMonth(date.subtract({months: count}))\r\n      );\r\n    }\r\n    setCalendarDates(newDates);\r\n  };\r\n\r\n  const monthFormatter = useDateFormatter({\r\n    month: 'long',\r\n    year: 'numeric',\r\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\r\n    calendar: currentMonth.calendar.identifier,\r\n  });\r\n\r\n  const isBackwardDisabled = dateIsInvalid(\r\n    currentMonth.subtract({days: 1}),\r\n    min,\r\n    max\r\n  );\r\n  const isForwardDisabled = dateIsInvalid(\r\n    startOfMonth(currentMonth.add({months: 1})),\r\n    min,\r\n    max\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between gap-10\">\r\n      <IconButton\r\n        size=\"md\"\r\n        className={clsx('text-muted', !isFirst && 'invisible')}\r\n        disabled={!isFirst || isBackwardDisabled}\r\n        aria-hidden={!isFirst}\r\n        onClick={() => {\r\n          shiftCalendars('backward');\r\n        }}\r\n      >\r\n        <KeyboardArrowLeftIcon />\r\n      </IconButton>\r\n      <div className=\"text-sm font-semibold select-none\">\r\n        {monthFormatter.format(currentMonth.toDate(timezone))}\r\n      </div>\r\n      <IconButton\r\n        size=\"md\"\r\n        className={clsx('text-muted', !isLast && 'invisible')}\r\n        disabled={!isLast || isForwardDisabled}\r\n        aria-hidden={!isLast}\r\n        onClick={() => {\r\n          shiftCalendars('forward');\r\n        }}\r\n      >\r\n        <KeyboardArrowRightIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface WeekdayHeaderProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  startDate: CalendarDate;\r\n}\r\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const dayFormatter = useDateFormatter({weekday: 'short'});\r\n\r\n  const monthStart = startOfWeek(startDate, localeCode);\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      {[...new Array(7).keys()].map(index => {\r\n        const date = monthStart.add({days: index});\r\n        const dateDay = date.toDate(timezone);\r\n        const weekday = dayFormatter.format(dateDay);\r\n        return (\r\n          <div\r\n            className=\"w-40 h-40 text-sm font-semibold relative flex-shrink-0\"\r\n            key={index}\r\n          >\r\n            <div className=\"absolute flex items-center justify-center w-full h-full select-none\">\r\n              {weekday}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {CalendarMonth} from './calendar-month';\r\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\r\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\r\n\r\ninterface CalendarProps {\r\n  state: DatePickerState | DateRangePickerState;\r\n  visibleMonths?: 1 | 2;\r\n}\r\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  if (isMobile) {\r\n    visibleMonths = 1;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {[...new Array(visibleMonths).keys()].map(index => {\r\n        const startDate = toCalendarDate(\r\n          startOfMonth(state.calendarDates[index])\r\n        );\r\n        const isFirst = index === 0;\r\n        const isLast = index === visibleMonths - 1;\r\n        return (\r\n          <CalendarMonth\r\n            key={index}\r\n            state={state}\r\n            startDate={startDate}\r\n            isFirst={isFirst}\r\n            isLast={isLast}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {DateValue, parseAbsolute} from '@internationalized/date';\r\nimport {Fragment, memo} from 'react';\r\nimport {useDateFormatter} from './use-date-formatter';\r\nimport {useSettings} from '../core/settings/use-settings';\r\nimport {shallowEqual} from '../utils/shallow-equal';\r\nimport {useUserTimezone} from './use-user-timezone';\r\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\r\n\r\ninterface FormattedDateTimeRangeProps {\r\n  start?: string | DateValue | Date;\r\n  end?: string | DateValue | Date;\r\n  options?: Intl.DateTimeFormatOptions;\r\n  preset?: keyof typeof DateFormatPresets;\r\n}\r\nexport const FormattedDateTimeRange = memo(\r\n  ({start, end, options, preset}: FormattedDateTimeRangeProps) => {\r\n    const {dates} = useSettings();\r\n    const timezone = useUserTimezone();\r\n    const formatter = useDateFormatter(\r\n      options ||\r\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\r\n          preset || dates?.format\r\n        ]\r\n    );\r\n\r\n    if (!start || !end) {\r\n      return null;\r\n    }\r\n\r\n    let value: string;\r\n\r\n    try {\r\n      value = formatter.formatRange(\r\n        castToDate(start, timezone),\r\n        castToDate(end, timezone)\r\n      );\r\n    } catch (e) {\r\n      value = '';\r\n    }\r\n\r\n    return <Fragment>{value}</Fragment>;\r\n  },\r\n  shallowEqual\r\n);\r\n\r\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\r\n  if (typeof date === 'string') {\r\n    return parseAbsolute(date, timezone).toDate();\r\n  }\r\n  if ('toDate' in date) {\r\n    return date.toDate(timezone);\r\n  }\r\n  return date;\r\n}\r\n","import {List, ListItem} from '@common/ui/list/list';\r\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\n\r\ninterface DateRangePresetList {\r\n  onPresetSelected: (value: DateRangeValue) => void;\r\n  selectedValue?: DateRangeValue | null;\r\n}\r\nexport function DatePresetList({\r\n  onPresetSelected,\r\n  selectedValue,\r\n}: DateRangePresetList) {\r\n  return (\r\n    <List>\r\n      {DateRangePresets.map(preset => (\r\n        <ListItem\r\n          borderRadius=\"rounded-none\"\r\n          capitalizeFirst\r\n          key={preset.key}\r\n          isSelected={selectedValue?.preset === preset.key}\r\n          onSelected={() => {\r\n            const newValue = preset.getRangeValue();\r\n            onPresetSelected(newValue);\r\n          }}\r\n        >\r\n          <Trans {...preset.label} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import {message} from '@common/i18n/message';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\n\r\nexport interface DateRangeComparePreset {\r\n  key: number;\r\n  label: MessageDescriptor;\r\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\r\n}\r\n\r\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\r\n  {\r\n    key: 0,\r\n    label: message('Preceding period'),\r\n    getRangeValue: (range: DateRangeValue) => {\r\n      const startDate = range.start;\r\n      const endDate = range.end;\r\n\r\n      const diffInMilliseconds =\r\n        endDate.toDate().getTime() - startDate.toDate().getTime();\r\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\r\n      const newStart = startDate.subtract({minutes: diffInMinutes});\r\n      return {\r\n        preset: 0,\r\n        start: newStart,\r\n        end: startDate,\r\n      };\r\n    },\r\n  },\r\n  {\r\n    key: 1,\r\n    label: message('Same period last year'),\r\n    getRangeValue: (range: DateRangeValue) => {\r\n      return {\r\n        start: range.start.subtract({years: 1}),\r\n        end: range.end.subtract({years: 1}),\r\n        preset: 1,\r\n      };\r\n    },\r\n  },\r\n  {\r\n    key: 2,\r\n    label: message('Custom'),\r\n    getRangeValue: (range: DateRangeValue) => {\r\n      return {\r\n        start: range.start.subtract({weeks: 1}),\r\n        end: range.end.subtract({weeks: 1}),\r\n        preset: 2,\r\n      };\r\n    },\r\n  },\r\n];\r\n","import {List, ListItem} from '@common/ui/list/list';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\r\n\r\ninterface DateRangePresetList {\r\n  originalRangeValue: DateRangeValue;\r\n  onPresetSelected: (value: DateRangeValue) => void;\r\n  selectedValue?: DateRangeValue | null;\r\n}\r\nexport function DateRangeComparePresetList({\r\n  originalRangeValue,\r\n  onPresetSelected,\r\n  selectedValue,\r\n}: DateRangePresetList) {\r\n  return (\r\n    <List>\r\n      {DateRangeComparePresets.map(preset => (\r\n        <ListItem\r\n          borderRadius=\"rounded-none\"\r\n          capitalizeFirst\r\n          key={preset.key}\r\n          isSelected={selectedValue?.preset === preset.key}\r\n          onSelected={() => {\r\n            const newValue = preset.getRangeValue(originalRangeValue);\r\n            onPresetSelected(newValue);\r\n          }}\r\n        >\r\n          <Trans {...preset.label} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {DatePickerField} from '../date-picker-field';\r\nimport {DateRangePickerState} from '../use-date-range-picker-state';\r\nimport {Calendar} from '../../calendar/calendar';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {ArrowRightAltIcon} from '@common/icons/material/ArrowRightAlt';\r\nimport {DateSegmentList} from '../../segments/date-segment-list';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\r\nimport {DatePresetList} from './date-range-preset-list';\r\nimport {useIsTabletMediaQuery} from '@common/utils/hooks/is-tablet-media-query';\r\nimport {Switch} from '@common/ui/forms/toggle/switch';\r\nimport {DateRangeComparePresetList} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\r\n\r\ninterface DateRangeDialogProps {\r\n  state: DateRangePickerState;\r\n  compareState?: DateRangePickerState;\r\n  compareVisibleDefault?: boolean;\r\n  showInlineDatePickerField?: boolean;\r\n}\r\nexport function DateRangeDialog({\r\n  state,\r\n  compareState,\r\n  showInlineDatePickerField = false,\r\n  compareVisibleDefault = false,\r\n}: DateRangeDialogProps) {\r\n  const isTablet = useIsTabletMediaQuery();\r\n  const {close} = useDialogContext();\r\n  const initialStateRef = useRef<DateRangePickerState>(state);\r\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\r\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\r\n\r\n  const footer = (\r\n    <DialogFooter\r\n      dividerTop\r\n      startAction={\r\n        !hasPlaceholder && !isTablet ? (\r\n          <div className=\"text-xs\">\r\n            <FormattedDateTimeRange\r\n              start={state.selectedValue.start.toDate()}\r\n              end={state.selectedValue.end.toDate()}\r\n              options={{dateStyle: 'medium'}}\r\n            />\r\n          </div>\r\n        ) : undefined\r\n      }\r\n    >\r\n      <Button\r\n        variant=\"text\"\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          state.setSelectedValue(initialStateRef.current.selectedValue);\r\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\r\n          close();\r\n        }}\r\n      >\r\n        <Trans message=\"Cancel\" />\r\n      </Button>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          const value = state.selectedValue;\r\n          if (compareState && compareVisible) {\r\n            value.compareStart = compareState.selectedValue.start;\r\n            value.compareEnd = compareState.selectedValue.end;\r\n          }\r\n          close(value);\r\n        }}\r\n      >\r\n        <Trans message=\"Select\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n\r\n  return (\r\n    <Dialog size=\"auto\">\r\n      <DialogBody className=\"flex\" padding=\"p-0\">\r\n        {!isTablet && (\r\n          <div className=\"min-w-192 py-14\">\r\n            <DatePresetList\r\n              selectedValue={state.selectedValue}\r\n              onPresetSelected={preset => {\r\n                state.setSelectedValue(preset);\r\n                if (state.closeDialogOnSelection) {\r\n                  close(preset);\r\n                }\r\n              }}\r\n            />\r\n            {!!compareState && (\r\n              <Fragment>\r\n                <Switch\r\n                  className=\"mx-20 mb-10 mt-14\"\r\n                  checked={compareVisible}\r\n                  onChange={e => setCompareVisible(e.target.checked)}\r\n                >\r\n                  <Trans message=\"Compare\" />\r\n                </Switch>\r\n                {compareVisible && (\r\n                  <DateRangeComparePresetList\r\n                    originalRangeValue={state.selectedValue}\r\n                    selectedValue={compareState.selectedValue}\r\n                    onPresetSelected={preset => {\r\n                      compareState.setSelectedValue(preset);\r\n                    }}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        )}\r\n        <AnimatePresence initial={false}>\r\n          <Calendars\r\n            state={state}\r\n            compareState={compareState}\r\n            showInlineDatePickerField={showInlineDatePickerField}\r\n            compareVisible={compareVisible}\r\n          />\r\n        </AnimatePresence>\r\n      </DialogBody>\r\n      {!state.closeDialogOnSelection && footer}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface CustomRangePanelProps {\r\n  state: DateRangePickerState;\r\n  compareState?: DateRangePickerState;\r\n  showInlineDatePickerField?: boolean;\r\n  compareVisible: boolean;\r\n}\r\nfunction Calendars({\r\n  state,\r\n  compareState,\r\n  showInlineDatePickerField,\r\n  compareVisible,\r\n}: CustomRangePanelProps) {\r\n  return (\r\n    <m.div\r\n      initial={{width: 0, overflow: 'hidden'}}\r\n      animate={{width: 'auto'}}\r\n      exit={{width: 0, overflow: 'hidden'}}\r\n      transition={{type: 'tween', duration: 0.125}}\r\n      className=\"border-l px-20 pb-20 pt-10\"\r\n    >\r\n      {showInlineDatePickerField && (\r\n        <div>\r\n          <InlineDatePickerField state={state} />\r\n          {!!compareState && compareVisible && (\r\n            <InlineDatePickerField\r\n              state={compareState}\r\n              label={<Trans message=\"Compare\" />}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"flex items-start gap-36\">\r\n        <Calendar state={state} visibleMonths={2} />\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface InlineDatePickerFieldProps {\r\n  state: DateRangePickerState;\r\n  label?: ReactNode;\r\n}\r\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\r\n  const {selectedValue, setSelectedValue} = state;\r\n  return (\r\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\r\n      <DateSegmentList\r\n        state={state}\r\n        value={selectedValue.start}\r\n        onChange={newValue => {\r\n          setSelectedValue({...selectedValue, start: newValue});\r\n        }}\r\n      />\r\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\r\n      <DateSegmentList\r\n        state={state}\r\n        value={selectedValue.end}\r\n        onChange={newValue => {\r\n          setSelectedValue({...selectedValue, end: newValue});\r\n        }}\r\n      />\r\n    </DatePickerField>\r\n  );\r\n}\r\n","import {\r\n  keepPreviousData,\r\n  useQuery,\r\n  UseQueryOptions,\r\n} from '@tanstack/react-query';\r\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\r\nimport {apiClient} from '../../http/query-client';\r\n\r\nexport interface GetDatatableDataParams {\r\n  orderBy?: string;\r\n  orderDir?: 'asc' | 'desc';\r\n  filters?: string | null;\r\n  query?: string;\r\n  with?: string;\r\n  perPage?: number | string | null;\r\n  page?: number | string;\r\n  [key: string]: string | number | boolean | undefined | null;\r\n}\r\n\r\nexport const DatatableDataQueryKey = (\r\n  endpoint: string,\r\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\r\n) => {\r\n  // split endpoint by slash, so we can clear cache from the root later,\r\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\r\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\r\n  if (params) {\r\n    key.push(params);\r\n  }\r\n  return key;\r\n};\r\n\r\nexport function useDatatableData<T = object>(\r\n  endpoint: string,\r\n  params: GetDatatableDataParams,\r\n  options?: Omit<\r\n    UseQueryOptions<\r\n      PaginatedBackendResponse<T>,\r\n      unknown,\r\n      PaginatedBackendResponse<T>,\r\n      any[]\r\n    >,\r\n    'queryKey' | 'queryFn'\r\n  >,\r\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\r\n) {\r\n  return useQuery({\r\n    queryKey: DatatableDataQueryKey(endpoint, params),\r\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\r\n    placeholderData: keepPreviousData,\r\n    ...options,\r\n  });\r\n}\r\n\r\nasync function paginate<T>(\r\n  endpoint: string,\r\n  params: GetDatatableDataParams,\r\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\r\n  signal?: AbortSignal,\r\n): Promise<PaginatedBackendResponse<T>> {\r\n  if (params.query) {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n  }\r\n  const response = await apiClient\r\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\r\n    .then(response => response.data);\r\n  onLoad?.(response);\r\n  return response;\r\n}\r\n","import {\r\n  keepPreviousData,\r\n  useQuery,\r\n  UseQueryOptions,\r\n} from '@tanstack/react-query';\r\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\n\r\ninterface Response extends BackendResponse {\r\n  results: NormalizedModel[];\r\n}\r\n\r\ninterface Params {\r\n  query?: string;\r\n  perPage?: number;\r\n  with?: string;\r\n}\r\n\r\nexport function useNormalizedModels(\r\n  endpoint: string,\r\n  queryParams: Params,\r\n  queryOptions?: Omit<\r\n    UseQueryOptions<Response, unknown, Response, [string, Params]>,\r\n    'queryKey' | 'queryFn'\r\n  > | null,\r\n) {\r\n  return useQuery({\r\n    queryKey: [endpoint, queryParams],\r\n    queryFn: () => fetchModels(endpoint, queryParams),\r\n    placeholderData: keepPreviousData,\r\n    ...queryOptions,\r\n  });\r\n}\r\n\r\nasync function fetchModels(endpoint: string, params: Params) {\r\n  return apiClient.get<Response>(endpoint, {params}).then(r => r.data);\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\n\r\ninterface Response extends BackendResponse {\r\n  model: NormalizedModel;\r\n}\r\n\r\nexport function useNormalizedModel(\r\n  endpoint: string,\r\n  queryParams?: Record<string, string>,\r\n  queryOptions?: {enabled?: boolean},\r\n) {\r\n  return useQuery({\r\n    queryKey: [endpoint, queryParams],\r\n    queryFn: () => fetchModel(endpoint, queryParams),\r\n    ...queryOptions,\r\n  });\r\n}\r\n\r\nasync function fetchModel(\r\n  endpoint: string,\r\n  params?: Record<string, string>,\r\n): Promise<Response> {\r\n  return apiClient.get(endpoint, {params}).then(r => r.data);\r\n}\r\n","import React, {ReactNode, useRef, useState} from 'react';\r\nimport {useTrans} from '../../i18n/use-trans';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Avatar} from '../images/avatar';\r\nimport {Tooltip} from '../tooltip/tooltip';\r\nimport {IconButton} from '../buttons/icon-button';\r\nimport {EditIcon} from '../../icons/material/Edit';\r\nimport {message} from '../../i18n/message';\r\nimport {Item} from './listbox/item';\r\nimport {useController, useFormContext} from 'react-hook-form';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {getInputFieldClassNames} from './input-field/get-input-field-class-names';\r\nimport clsx from 'clsx';\r\nimport {Skeleton} from '../skeleton/skeleton';\r\nimport {useNormalizedModels} from '../../users/queries/use-normalized-models';\r\nimport {useNormalizedModel} from '../../users/queries/use-normalized-model';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '../animation/opacity-animation';\r\nimport {Select} from '@common/ui/forms/select/select';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\nimport {BaseFieldProps} from '@common/ui/forms/input-field/base-field-props';\r\n\r\ninterface NormalizedModelFieldProps {\r\n  label?: ReactNode;\r\n  className?: string;\r\n  background?: BaseFieldProps['background'];\r\n  value?: string | number;\r\n  placeholder?: MessageDescriptor;\r\n  searchPlaceholder?: MessageDescriptor;\r\n  defaultValue?: string | number;\r\n  onChange?: (value: string | number) => void;\r\n  invalid?: boolean;\r\n  errorMessage?: string;\r\n  description?: ReactNode;\r\n  autoFocus?: boolean;\r\n  queryParams?: Record<string, string>;\r\n  endpoint: string;\r\n  disabled?: boolean;\r\n  required?: boolean;\r\n}\r\nexport function NormalizedModelField({\r\n  label,\r\n  className,\r\n  background,\r\n  value,\r\n  defaultValue = '',\r\n  placeholder = message('Select item...'),\r\n  searchPlaceholder = message('Find an item...'),\r\n  onChange,\r\n  description,\r\n  errorMessage,\r\n  invalid,\r\n  autoFocus,\r\n  queryParams,\r\n  endpoint,\r\n  disabled,\r\n  required,\r\n}: NormalizedModelFieldProps) {\r\n  const inputRef = useRef<HTMLButtonElement>(null);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [selectedValue, setSelectedValue] = useControlledState(\r\n    value,\r\n    defaultValue,\r\n    onChange,\r\n  );\r\n  const query = useNormalizedModels(endpoint, {\r\n    query: inputValue,\r\n    ...queryParams,\r\n  });\r\n  const {trans} = useTrans();\r\n\r\n  const fieldClassNames = getInputFieldClassNames({size: 'md'});\r\n\r\n  if (selectedValue) {\r\n    return (\r\n      <div className={className}>\r\n        <div className={fieldClassNames.label}>{label}</div>\r\n        <div\r\n          className={clsx(\r\n            'rounded-input border p-8',\r\n            background,\r\n            invalid && 'border-danger',\r\n          )}\r\n        >\r\n          <AnimatePresence initial={false} mode=\"wait\">\r\n            <SelectedModelPreview\r\n              disabled={disabled}\r\n              endpoint={endpoint}\r\n              modelId={selectedValue}\r\n              queryParams={queryParams}\r\n              onEditClick={() => {\r\n                setSelectedValue('');\r\n                setInputValue('');\r\n                requestAnimationFrame(() => {\r\n                  inputRef.current?.focus();\r\n                  inputRef.current?.click();\r\n                });\r\n              }}\r\n            />\r\n          </AnimatePresence>\r\n        </div>\r\n        {description && !errorMessage && (\r\n          <div className={fieldClassNames.description}>{description}</div>\r\n        )}\r\n        {errorMessage && (\r\n          <div className={fieldClassNames.error}>{errorMessage}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      className={className}\r\n      showSearchField\r\n      invalid={invalid}\r\n      errorMessage={errorMessage}\r\n      description={description}\r\n      color=\"white\"\r\n      isAsync\r\n      background={background}\r\n      placeholder={trans(placeholder)}\r\n      searchPlaceholder={trans(searchPlaceholder)}\r\n      label={label}\r\n      isLoading={query.isFetching}\r\n      items={query.data?.results}\r\n      inputValue={inputValue}\r\n      onInputValueChange={setInputValue}\r\n      selectionMode=\"single\"\r\n      selectedValue={selectedValue}\r\n      onSelectionChange={setSelectedValue}\r\n      ref={inputRef}\r\n      autoFocus={autoFocus}\r\n      disabled={disabled}\r\n      required={required}\r\n    >\r\n      {model => (\r\n        <Item\r\n          value={model.id}\r\n          key={model.id}\r\n          description={model.description}\r\n          startIcon={<Avatar src={model.image} />}\r\n        >\r\n          {model.name}\r\n        </Item>\r\n      )}\r\n    </Select>\r\n  );\r\n}\r\n\r\ninterface SelectedModelPreviewProps {\r\n  modelId: string | number;\r\n  selectedValue?: number | string;\r\n  onEditClick?: () => void;\r\n  endpoint?: string;\r\n  disabled?: boolean;\r\n  queryParams?: NormalizedModelFieldProps['queryParams'];\r\n}\r\nfunction SelectedModelPreview({\r\n  modelId,\r\n  onEditClick,\r\n  endpoint,\r\n  disabled,\r\n  queryParams,\r\n}: SelectedModelPreviewProps) {\r\n  const {data, isLoading} = useNormalizedModel(\r\n    `${endpoint}/${modelId}`,\r\n    queryParams,\r\n  );\r\n\r\n  if (isLoading || !data?.model) {\r\n    return <LoadingSkeleton key=\"skeleton\" />;\r\n  }\r\n\r\n  return (\r\n    <m.div\r\n      className={clsx(\r\n        'flex items-center gap-10',\r\n        disabled && 'pointer-events-none cursor-not-allowed text-disabled',\r\n      )}\r\n      key=\"preview\"\r\n      {...opacityAnimation}\r\n    >\r\n      {data.model.image && <Avatar src={data.model.image} />}\r\n      <div>\r\n        <div className=\"text-sm leading-4\">{data.model.name}</div>\r\n        <div className=\"text-xs text-muted\">{data.model.description}</div>\r\n      </div>\r\n      <Tooltip label={<Trans message=\"Change item\" />}>\r\n        <IconButton\r\n          className=\"ml-auto text-muted\"\r\n          size=\"sm\"\r\n          onClick={onEditClick}\r\n          disabled={disabled}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </m.div>\r\n  );\r\n}\r\n\r\nfunction LoadingSkeleton() {\r\n  return (\r\n    <m.div className=\"flex items-center gap-10\" {...opacityAnimation}>\r\n      <Skeleton variant=\"rect\" size=\"w-32 h-32\" />\r\n      <div className=\"max-h-[36px] flex-auto\">\r\n        <Skeleton className=\"text-xs\" />\r\n        <Skeleton className=\"max-h-8 text-xs\" />\r\n      </div>\r\n      <Skeleton variant=\"icon\" size=\"w-24 h-24\" />\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface FormNormalizedModelFieldProps extends NormalizedModelFieldProps {\r\n  name: string;\r\n}\r\nexport function FormNormalizedModelField({\r\n  name,\r\n  ...fieldProps\r\n}: FormNormalizedModelFieldProps) {\r\n  const {clearErrors} = useFormContext();\r\n  const {\r\n    field: {onChange, value = ''},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  return (\r\n    <NormalizedModelField\r\n      value={value}\r\n      onChange={value => {\r\n        onChange(value);\r\n        clearErrors(name);\r\n      }}\r\n      invalid={invalid}\r\n      errorMessage={error?.message}\r\n      {...fieldProps}\r\n    />\r\n  );\r\n}\r\n","import {ChipValue} from './chip-field';\r\n\r\nexport function stringToChipValue(value: string | number): ChipValue {\r\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\r\n  return {id: value, name: `${value}`, description: `${value}`};\r\n}\r\n","import React, {\r\n  HTMLAttributes,\r\n  Key,\r\n  ReactElement,\r\n  ReactNode,\r\n  Ref,\r\n  RefObject,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {useFocusManager} from '@react-aria/focus';\r\nimport clsx from 'clsx';\r\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {ChipList} from './chip-list';\r\nimport {Field, FieldProps} from '../field';\r\nimport {Input} from '../input';\r\nimport {Chip, ChipProps} from './chip';\r\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\r\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\r\nimport {ProgressCircle} from '../../../progress/progress-circle';\r\nimport {useField} from '../use-field';\r\nimport {Avatar} from '../../../images/avatar';\r\nimport {Listbox} from '../../listbox/listbox';\r\nimport {useListbox} from '../../listbox/use-listbox';\r\nimport {BaseFieldPropsWithDom} from '../base-field-props';\r\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\r\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\r\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\r\nimport {stringToChipValue} from './string-to-chip-value';\r\nimport {Popover} from '../../../overlays/popover';\r\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\r\n\r\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\r\n  invalid?: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nexport type ChipFieldProps<T> = Omit<\r\n  ListboxProps,\r\n  'selectionMode' | 'displayWith'\r\n> &\r\n  Omit<\r\n    BaseFieldPropsWithDom<HTMLInputElement>,\r\n    'value' | 'onChange' | 'defaultValue'\r\n  > & {\r\n    value?: (ChipValue | string)[];\r\n    defaultValue?: (ChipValue | string)[];\r\n    displayWith?: (value: ChipValue) => ReactNode;\r\n    validateWith?: (value: ChipValue) => ChipValue;\r\n    allowCustomValue?: boolean;\r\n    showDropdownArrow?: boolean;\r\n    onChange?: (value: ChipValue[]) => void;\r\n    suggestions?: T[];\r\n    children?: ListBoxChildren<T>['children'];\r\n    placeholder?: string;\r\n    chipSize?: ChipProps['size'];\r\n    openMenuOnFocus?: boolean;\r\n    valueKey?: 'id' | 'name';\r\n    onChipClick?: (value: ChipValue) => void;\r\n  };\r\n\r\nfunction ChipFieldInner<T>(\r\n  props: ChipFieldProps<T>,\r\n  ref: Ref<HTMLInputElement>,\r\n) {\r\n  const fieldRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useObjectRef(ref);\r\n  const {\r\n    displayWith = v => v.name,\r\n    validateWith,\r\n    children,\r\n    suggestions,\r\n    isLoading,\r\n    inputValue,\r\n    onInputValueChange,\r\n    onItemSelected,\r\n    placeholder,\r\n    onOpenChange,\r\n    chipSize = 'sm',\r\n    openMenuOnFocus = true,\r\n    showEmptyMessage,\r\n    value: propsValue,\r\n    defaultValue,\r\n    onChange: propsOnChange,\r\n    valueKey,\r\n    isAsync,\r\n    allowCustomValue = true,\r\n    showDropdownArrow,\r\n    onChipClick,\r\n    ...inputFieldProps\r\n  } = props;\r\n  const fieldClassNames = getInputFieldClassNames({\r\n    ...props,\r\n    flexibleHeight: true,\r\n  });\r\n\r\n  const [value, onChange] = useChipFieldValueState(props);\r\n\r\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\r\n\r\n  const loadingIndicator = (\r\n    <ProgressCircle isIndeterminate size=\"sm\" aria-label=\"loading...\" />\r\n  );\r\n\r\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\r\n\r\n  const {fieldProps, inputProps} = useField({\r\n    ...inputFieldProps,\r\n    focusRef: inputRef,\r\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\r\n  });\r\n\r\n  return (\r\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\r\n      <Input\r\n        ref={fieldRef}\r\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\r\n        onClick={() => {\r\n          // refocus input when clicking outside it, but while still inside chip field\r\n          inputRef.current?.focus();\r\n        }}\r\n      >\r\n        <ListWrapper\r\n          displayChipUsing={displayWith}\r\n          onChipClick={onChipClick}\r\n          items={value}\r\n          setItems={onChange}\r\n          chipSize={chipSize}\r\n        />\r\n        <ChipInput\r\n          size={props.size}\r\n          showEmptyMessage={showEmptyMessage}\r\n          inputProps={inputProps}\r\n          inputValue={inputValue}\r\n          onInputValueChange={onInputValueChange}\r\n          fieldRef={fieldRef}\r\n          inputRef={inputRef}\r\n          chips={value}\r\n          setChips={onChange}\r\n          validateWith={validateWith}\r\n          isLoading={isLoading}\r\n          suggestions={suggestions}\r\n          placeholder={placeholder}\r\n          openMenuOnFocus={openMenuOnFocus}\r\n          listboxIsOpen={listboxIsOpen}\r\n          setListboxIsOpen={setListboxIsOpen}\r\n          allowCustomValue={allowCustomValue}\r\n        >\r\n          {children}\r\n        </ChipInput>\r\n      </Input>\r\n    </Field>\r\n  );\r\n}\r\n\r\ninterface ListWrapperProps {\r\n  items: ChipValue[];\r\n  setItems: (items: ChipValue[]) => void;\r\n  displayChipUsing: (value: ChipValue) => ReactNode;\r\n  chipSize?: ChipProps['size'];\r\n  onChipClick?: (value: ChipValue) => void;\r\n}\r\nfunction ListWrapper({\r\n  items,\r\n  setItems,\r\n  displayChipUsing,\r\n  chipSize,\r\n  onChipClick,\r\n}: ListWrapperProps) {\r\n  const manager = useFocusManager();\r\n  const removeItem = useCallback(\r\n    (key: Key) => {\r\n      const i = items.findIndex(cr => cr.id === key);\r\n      const newItems = [...items];\r\n      if (i > -1) {\r\n        newItems.splice(i, 1);\r\n        setItems(newItems);\r\n      }\r\n      return newItems;\r\n    },\r\n    [items, setItems],\r\n  );\r\n\r\n  return (\r\n    <ChipList\r\n      className={clsx(\r\n        'max-w-full flex-shrink-0 flex-wrap',\r\n        chipSize === 'xs' ? 'my-6' : 'my-8',\r\n      )}\r\n      size={chipSize}\r\n      selectable\r\n    >\r\n      {items.map(item => (\r\n        <Chip\r\n          key={item.id}\r\n          errorMessage={item.errorMessage}\r\n          adornment={item.image ? <Avatar circle src={item.image} /> : null}\r\n          onClick={() => onChipClick?.(item)}\r\n          onRemove={() => {\r\n            const newItems = removeItem(item.id);\r\n            if (newItems.length) {\r\n              // focus previous chip\r\n              manager?.focusPrevious({tabbable: true});\r\n            } else {\r\n              // focus input\r\n              manager?.focusLast();\r\n            }\r\n          }}\r\n        >\r\n          {displayChipUsing(item)}\r\n        </Chip>\r\n      ))}\r\n    </ChipList>\r\n  );\r\n}\r\n\r\ninterface ChipInputProps<T> {\r\n  showEmptyMessage?: boolean;\r\n  inputProps: ReturnType<typeof useField>['inputProps'];\r\n  inputValue?: string;\r\n  onInputValueChange?: (value: string) => void;\r\n  fieldRef: RefObject<HTMLDivElement>;\r\n  inputRef: RefObject<HTMLInputElement>;\r\n  chips: ChipValue[];\r\n  setChips: (items: ChipValue[]) => void;\r\n  validateWith?: (value: ChipValue) => ChipValue;\r\n  isLoading?: boolean;\r\n  suggestions?: T[];\r\n  placeholder?: string;\r\n  openMenuOnFocus?: boolean;\r\n  listboxIsOpen: boolean;\r\n  setListboxIsOpen: (value: boolean) => void;\r\n  allowCustomValue: boolean;\r\n  children: ListBoxChildren<T>['children'];\r\n  size: FieldProps['size'];\r\n}\r\nfunction ChipInput<T>(props: ChipInputProps<T>) {\r\n  const {\r\n    inputRef,\r\n    fieldRef,\r\n    validateWith,\r\n    setChips,\r\n    chips,\r\n    suggestions,\r\n    inputProps,\r\n    placeholder,\r\n    openMenuOnFocus,\r\n    listboxIsOpen,\r\n    setListboxIsOpen,\r\n    allowCustomValue,\r\n    isLoading,\r\n    size,\r\n  } = props;\r\n  const manager = useFocusManager();\r\n\r\n  const addItems = useCallback(\r\n    (items?: ChipValue[]) => {\r\n      items = (items || []).filter(item => {\r\n        const invalid = !item || !item.id || !item.name;\r\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\r\n        return !alreadyExists && !invalid;\r\n      });\r\n      if (!items.length) return;\r\n\r\n      if (validateWith) {\r\n        items = items.map(item => validateWith(item));\r\n      }\r\n      setChips([...chips, ...items]);\r\n    },\r\n    [chips, setChips, validateWith],\r\n  );\r\n\r\n  const listbox = useListbox<T>({\r\n    ...props,\r\n    clearInputOnItemSelection: true,\r\n    isOpen: listboxIsOpen,\r\n    onOpenChange: setListboxIsOpen,\r\n    items: suggestions,\r\n    selectionMode: 'none',\r\n    role: 'listbox',\r\n    virtualFocus: true,\r\n    onItemSelected: value => {\r\n      handleItemSelection(value as string);\r\n    },\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      activeIndex,\r\n      setActiveIndex,\r\n      isOpen,\r\n      setIsOpen,\r\n      inputValue,\r\n      setInputValue,\r\n    },\r\n    refs,\r\n    listboxId,\r\n    collection,\r\n    onInputChange,\r\n  } = listbox;\r\n\r\n  const handleItemSelection = (textValue: string) => {\r\n    const option =\r\n      collection.size && activeIndex != null\r\n        ? [...collection.values()][activeIndex]\r\n        : null;\r\n    if (option?.item) {\r\n      addItems([option.item]);\r\n    } else if (allowCustomValue) {\r\n      addItems([stringToChipValue(option ? option.value : textValue)]);\r\n    }\r\n\r\n    setInputValue('');\r\n    setActiveIndex(null);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // position dropdown relative to whole chip field, not the input\r\n  useLayoutEffect(() => {\r\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\r\n      listbox.reference(fieldRef.current);\r\n    }\r\n  }, [fieldRef, listbox, refs]);\r\n\r\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\r\n    useListboxKeyboardNavigation(listbox);\r\n\r\n  const handleFocusAndClick = createEventHandler(() => {\r\n    if (openMenuOnFocus && !isOpen) {\r\n      setIsOpen(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Listbox\r\n      listbox={listbox}\r\n      mobileOverlay={Popover}\r\n      isLoading={isLoading}\r\n      onPointerDown={e => {\r\n        // prevent focus from leaving input when scrolling listbox via mouse\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        className={clsx(\r\n          'mx-8 my-4 min-w-30 flex-[1_1_60px] bg-transparent text-sm outline-none',\r\n          size === 'xs' ? 'h-20' : 'h-30',\r\n        )}\r\n        placeholder={placeholder}\r\n        {...mergeProps(inputProps, {\r\n          ref: inputRef,\r\n          value: inputValue,\r\n          onChange: onInputChange,\r\n          onPaste: e => {\r\n            const paste = e.clipboardData.getData('text');\r\n            const emails = paste.match(\r\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\r\n            );\r\n            if (emails) {\r\n              e.preventDefault();\r\n              const selection = window.getSelection();\r\n              if (selection?.rangeCount) {\r\n                selection.deleteFromDocument();\r\n                addItems(emails.map(email => stringToChipValue(email)));\r\n              }\r\n            }\r\n          },\r\n          'aria-autocomplete': 'list',\r\n          'aria-controls': isOpen ? listboxId : undefined,\r\n          autoComplete: 'off',\r\n          autoCorrect: 'off',\r\n          spellCheck: 'false',\r\n          onKeyDown: e => {\r\n            const input = e.target as HTMLInputElement;\r\n\r\n            if (e.key === 'Enter') {\r\n              // prevent form submitting\r\n              e.preventDefault();\r\n              // add chip from selected listbox option or current input text value\r\n              handleItemSelection(input.value);\r\n              return;\r\n            }\r\n\r\n            // on escape, clear input and close dropdown\r\n            if (e.key === 'Escape' && isOpen) {\r\n              setIsOpen(false);\r\n              setInputValue('');\r\n            }\r\n\r\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\r\n            if (\r\n              e.key === 'ArrowUp' &&\r\n              isOpen &&\r\n              (activeIndex === 0 || activeIndex == null)\r\n            ) {\r\n              setActiveIndex(null);\r\n              return;\r\n            }\r\n\r\n            // block left and right arrows from navigating in input, if focus is on listbox\r\n            if (\r\n              activeIndex != null &&\r\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\r\n            ) {\r\n              e.preventDefault();\r\n              return;\r\n            }\r\n\r\n            // move focus on the last chip, if focus is at the  start of input\r\n            if (\r\n              (e.key === 'ArrowLeft' ||\r\n                e.key === 'Backspace' ||\r\n                e.key === 'Delete') &&\r\n              input.selectionStart === 0 &&\r\n              activeIndex == null &&\r\n              chips.length\r\n            ) {\r\n              manager?.focusPrevious({tabbable: true});\r\n              return;\r\n            }\r\n\r\n            // fallthrough to listbox navigation handlers for arrow keys\r\n            const handled = handleTriggerKeyDown(e);\r\n            if (!handled) {\r\n              handleListboxKeyboardNavigation(e);\r\n            }\r\n          },\r\n          onFocus: handleFocusAndClick,\r\n          onClick: handleFocusAndClick,\r\n        } as HTMLAttributes<HTMLInputElement>)}\r\n      />\r\n    </Listbox>\r\n  );\r\n}\r\n\r\nfunction useChipFieldValueState({\r\n  onChange,\r\n  value,\r\n  defaultValue,\r\n  valueKey,\r\n}: ChipFieldProps<any>) {\r\n  // convert value from string[] to ChipValue[], if needed\r\n  const propsValue = useMemo(() => {\r\n    return mixedValueToChipValue(value);\r\n  }, [value]);\r\n\r\n  // convert defaultValue from string[] to ChipValue[], if needed\r\n  const propsDefaultValue = useMemo(() => {\r\n    return mixedValueToChipValue(defaultValue);\r\n  }, [defaultValue]);\r\n\r\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\r\n  const handleChange = useCallback(\r\n    (value: ChipValue[]) => {\r\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\r\n      onChange?.(newValue as any);\r\n    },\r\n    [onChange, valueKey],\r\n  );\r\n\r\n  return useControlledState<ChipValue[]>(\r\n    !propsValue ? undefined : propsValue,\r\n    propsDefaultValue || [],\r\n    handleChange,\r\n  );\r\n}\r\n\r\nfunction mixedValueToChipValue(\r\n  value?: (string | number | ChipValue)[] | null,\r\n): ChipValue[] | undefined {\r\n  if (value == null) {\r\n    return undefined;\r\n  }\r\n\r\n  return value.map(v => {\r\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\r\n  });\r\n}\r\n\r\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\r\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\r\n) => ReactElement;\r\n","import {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport React from 'react';\r\nimport {ChipField, ChipFieldProps} from './chip-field';\r\n\r\nexport type FormChipFieldProps<T> = ChipFieldProps<T> & {\r\n  name: string;\r\n};\r\n\r\nexport function FormChipField<T>({children, ...props}: FormChipFieldProps<T>) {\r\n  const {\r\n    field: {onChange, onBlur, value = [], ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name: props.name,\r\n  });\r\n\r\n  const formProps: Partial<ChipFieldProps<T>> = {\r\n    onChange,\r\n    onBlur,\r\n    value,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n  };\r\n\r\n  return (\r\n    <ChipField ref={ref} {...mergeProps(formProps, props)}>\r\n      {children}\r\n    </ChipField>\r\n  );\r\n}\r\n","import {useControlledState} from '@react-stately/utils';\r\nimport {HTMLAttributes, useCallback, useState} from 'react';\r\nimport {\r\n  CalendarDate,\r\n  DateValue,\r\n  isSameDay,\r\n  toCalendarDate,\r\n  toZoned,\r\n  ZonedDateTime,\r\n} from '@internationalized/date';\r\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\r\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\r\n\r\nexport type Granularity = 'day' | 'minute';\r\n\r\nexport type DatePickerState = BaseDatePickerState;\r\n\r\nexport interface BaseDatePickerState<T = ZonedDateTime, P = boolean> {\r\n  timezone: string;\r\n  granularity: Granularity;\r\n  selectedValue: T;\r\n  setSelectedValue: (value: T) => void;\r\n  calendarIsOpen: boolean;\r\n  setCalendarIsOpen: (isOpen: boolean) => void;\r\n  calendarDates: CalendarDate[];\r\n  setCalendarDates: (dates: CalendarDate[]) => void;\r\n  dayIsActive: (day: CalendarDate) => boolean;\r\n  dayIsHighlighted: (day: CalendarDate) => boolean;\r\n  dayIsRangeStart: (day: CalendarDate) => boolean;\r\n  dayIsRangeEnd: (day: CalendarDate) => boolean;\r\n  isPlaceholder: P;\r\n  setIsPlaceholder: (value: P) => void;\r\n  clear: () => void;\r\n  min?: ZonedDateTime;\r\n  max?: ZonedDateTime;\r\n  closeDialogOnSelection: boolean;\r\n  getCellProps: (\r\n    date: CalendarDate,\r\n    isSameMonth: boolean,\r\n  ) => HTMLAttributes<HTMLElement>;\r\n}\r\n\r\nexport interface DatePickerValueProps<V, CV = V> {\r\n  value?: V | null | '';\r\n  defaultValue?: V | null;\r\n  onChange?: (value: CV | null) => void;\r\n  min?: DateValue;\r\n  max?: DateValue;\r\n  granularity?: Granularity;\r\n  closeDialogOnSelection?: boolean;\r\n}\r\nexport function useDatePickerState(\r\n  props: DatePickerValueProps<ZonedDateTime>,\r\n): BaseDatePickerState {\r\n  const now = useCurrentDateTime();\r\n  const [isPlaceholder, setIsPlaceholder] = useState(\r\n    !props.value && !props.defaultValue,\r\n  );\r\n\r\n  // if user clears the date, we will want to still keep an\r\n  // instance internally, but return null via \"onChange\" callback\r\n  const setStateValue = props.onChange;\r\n  const [internalValue, setInternalValue] = useControlledState(\r\n    props.value || now,\r\n    props.defaultValue || now,\r\n    value => {\r\n      setIsPlaceholder(false);\r\n      setStateValue?.(value);\r\n    },\r\n  );\r\n\r\n  const {\r\n    min,\r\n    max,\r\n    granularity,\r\n    timezone,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    closeDialogOnSelection,\r\n  } = useBaseDatePickerState(internalValue, props);\r\n\r\n  const clear = useCallback(() => {\r\n    setIsPlaceholder(true);\r\n    setInternalValue(now);\r\n    setStateValue?.(null);\r\n    setCalendarIsOpen(false);\r\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\r\n\r\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\r\n    return [toCalendarDate(internalValue)];\r\n  });\r\n\r\n  const setSelectedValue = useCallback(\r\n    (newValue: DateValue) => {\r\n      if (min && newValue.compare(min) < 0) {\r\n        newValue = min;\r\n      } else if (max && newValue.compare(max) > 0) {\r\n        newValue = max;\r\n      }\r\n\r\n      // preserve time\r\n      const value = internalValue\r\n        ? internalValue.set(newValue)\r\n        : toZoned(newValue, timezone);\r\n      setInternalValue(value);\r\n      setCalendarDates([toCalendarDate(value)]);\r\n      setIsPlaceholder(false);\r\n    },\r\n    [setInternalValue, min, max, internalValue, timezone],\r\n  );\r\n\r\n  const dayIsActive = useCallback(\r\n    (day: DateValue) => !isPlaceholder && isSameDay(internalValue, day),\r\n    [internalValue, isPlaceholder],\r\n  );\r\n\r\n  const getCellProps = useCallback(\r\n    (date: DateValue): HTMLAttributes<HTMLElement> => {\r\n      return {\r\n        onClick: () => {\r\n          setSelectedValue?.(date);\r\n          if (closeDialogOnSelection) {\r\n            setCalendarIsOpen?.(false);\r\n          }\r\n        },\r\n      };\r\n    },\r\n    [setSelectedValue, setCalendarIsOpen, closeDialogOnSelection],\r\n  );\r\n\r\n  return {\r\n    selectedValue: internalValue,\r\n    setSelectedValue: setInternalValue,\r\n    calendarIsOpen,\r\n    setCalendarIsOpen,\r\n    dayIsActive,\r\n    dayIsHighlighted: () => false,\r\n    dayIsRangeStart: () => false,\r\n    dayIsRangeEnd: () => false,\r\n    getCellProps,\r\n    calendarDates,\r\n    setCalendarDates,\r\n    isPlaceholder,\r\n    clear,\r\n    setIsPlaceholder,\r\n    min,\r\n    max,\r\n    granularity,\r\n    timezone,\r\n    closeDialogOnSelection,\r\n  };\r\n}\r\n","import React, {\r\n  ComponentPropsWithoutRef,\r\n  Fragment,\r\n  MouseEvent,\r\n  useRef,\r\n} from 'react';\r\nimport {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\r\nimport {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {\r\n  DatePickerValueProps,\r\n  useDatePickerState,\r\n} from './use-date-picker-state';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Calendar} from '../calendar/calendar';\r\nimport {\r\n  DatePickerField,\r\n  DatePickerFieldProps,\r\n} from '../date-range-picker/date-picker-field';\r\nimport {DateSegmentList} from '../segments/date-segment-list';\r\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport clsx from 'clsx';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\r\n\r\nexport interface DatePickerProps\r\n  extends Omit<DatePickerFieldProps, 'children'>,\r\n    DatePickerValueProps<ZonedDateTime> {}\r\nexport function DatePicker({showCalendarFooter, ...props}: DatePickerProps) {\r\n  const state = useDatePickerState(props);\r\n  const inputRef = useRef<HTMLDivElement>(null);\r\n  const now = useCurrentDateTime();\r\n\r\n  const footer = showCalendarFooter && (\r\n    <DialogFooter\r\n      padding=\"px-14 pb-14\"\r\n      startAction={\r\n        <Button\r\n          disabled={state.isPlaceholder}\r\n          variant=\"text\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            state.clear();\r\n          }}\r\n        >\r\n          <Trans message=\"Clear\" />\r\n        </Button>\r\n      }\r\n    >\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          state.setSelectedValue(now);\r\n          state.setCalendarIsOpen(false);\r\n        }}\r\n      >\r\n        <Trans message=\"Today\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n\r\n  const dialog = (\r\n    <DialogTrigger\r\n      offset={8}\r\n      placement=\"bottom-start\"\r\n      isOpen={state.calendarIsOpen}\r\n      onOpenChange={state.setCalendarIsOpen}\r\n      type=\"popover\"\r\n      triggerRef={inputRef}\r\n      returnFocusToTrigger={false}\r\n      moveFocusToDialog={false}\r\n    >\r\n      <Dialog size=\"auto\">\r\n        <DialogBody\r\n          className=\"flex items-start gap-40\"\r\n          padding={showCalendarFooter ? 'px-24 pt-20 pb-10' : null}\r\n        >\r\n          <Calendar state={state} visibleMonths={1} />\r\n        </DialogBody>\r\n        {footer}\r\n      </Dialog>\r\n    </DialogTrigger>\r\n  );\r\n\r\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\r\n    onClick: e => {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      if (!isHourSegment(e)) {\r\n        state.setCalendarIsOpen(true);\r\n      } else {\r\n        state.setCalendarIsOpen(false);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <DatePickerField\r\n        ref={inputRef}\r\n        wrapperProps={openOnClick}\r\n        endAdornment={\r\n          <DateRangeIcon className={clsx(props.disabled && 'text-disabled')} />\r\n        }\r\n        {...props}\r\n      >\r\n        <DateSegmentList\r\n          segmentProps={openOnClick}\r\n          state={state}\r\n          value={state.selectedValue}\r\n          onChange={state.setSelectedValue}\r\n          isPlaceholder={state.isPlaceholder}\r\n        />\r\n      </DatePickerField>\r\n      {dialog}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface FormDatePickerProps extends DatePickerProps {\r\n  name: string;\r\n}\r\nexport function FormDatePicker(props: FormDatePickerProps) {\r\n  const {min, max} = props;\r\n  const {trans} = useTrans();\r\n  const {format} = useDateFormatter();\r\n  const {\r\n    field: {onChange, onBlur, value = null, ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name: props.name,\r\n    rules: {\r\n      validate: v => {\r\n        if (!v) return;\r\n        const date = parseAbsoluteToLocal(v);\r\n        if (min && date.compare(min) < 0) {\r\n          return trans({\r\n            message: 'Enter a date after :date',\r\n            values: {date: format(v)},\r\n          });\r\n        }\r\n        if (max && date.compare(max) > 0) {\r\n          return trans({\r\n            message: 'Enter a date before :date',\r\n            values: {date: format(v)},\r\n          });\r\n        }\r\n      },\r\n    },\r\n  });\r\n\r\n  const parsedValue: null | ZonedDateTime = value\r\n    ? parseAbsoluteToLocal(value)\r\n    : null;\r\n\r\n  const formProps: Partial<DatePickerProps> = {\r\n    onChange: e => {\r\n      onChange(e ? e.toAbsoluteString() : e);\r\n    },\r\n    onBlur,\r\n    value: parsedValue,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n    inputRef: ref,\r\n  };\r\n\r\n  return <DatePicker {...mergeProps(formProps, props)} />;\r\n}\r\n\r\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\r\n  return ['hour', 'minute', 'dayPeriod'].includes(\r\n    (e.currentTarget as HTMLElement).ariaLabel || ''\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DragHandleIcon = createSvgIcon(\r\n  <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" />\r\n, 'DragHandleOutlined');\r\n","import {useCallback, useRef, useState} from 'react';\r\n\r\nexport function useStickySentinel() {\r\n  const [isSticky, setIsSticky] = useState(false);\r\n\r\n  const observerRef = useRef<IntersectionObserver>();\r\n\r\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\r\n    if (sentinel) {\r\n      const observer = new IntersectionObserver(\r\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\r\n        {threshold: [1]}\r\n      );\r\n      observerRef.current = observer;\r\n      observer.observe(sentinel);\r\n    } else if (observerRef.current) {\r\n      observerRef.current?.disconnect();\r\n    }\r\n  }, []);\r\n\r\n  return {isSticky, sentinelRef};\r\n}\r\n","import {FieldValues, SubmitHandler, UseFormReturn} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport React, {ReactNode} from 'react';\r\nimport {useStickySentinel} from '../utils/hooks/sticky-sentinel';\r\nimport {Form} from '../ui/forms/form';\r\nimport {Button} from '../ui/buttons/button';\r\nimport {Trans} from '../i18n/trans';\r\n\r\ninterface Props<T extends FieldValues> {\r\n  onSubmit: SubmitHandler<T>;\r\n  form: UseFormReturn<T>;\r\n  title: ReactNode;\r\n  subTitle?: ReactNode;\r\n  isLoading: boolean;\r\n  children: ReactNode;\r\n  actions?: ReactNode;\r\n  backButton?: ReactNode;\r\n  disableSaveWhenNotDirty?: boolean;\r\n  wrapInContainer?: boolean;\r\n}\r\nexport function CrupdateResourceLayout<T extends FieldValues>({\r\n  onSubmit,\r\n  form,\r\n  title,\r\n  subTitle,\r\n  children,\r\n  actions,\r\n  backButton,\r\n  isLoading = false,\r\n  disableSaveWhenNotDirty = false,\r\n  wrapInContainer = true,\r\n}: Props<T>) {\r\n  const {isSticky, sentinelRef} = useStickySentinel();\r\n  const isDirty = !disableSaveWhenNotDirty\r\n    ? true\r\n    : Object.keys(form.formState.dirtyFields).length;\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      onBeforeSubmit={() => form.clearErrors()}\r\n      form={form}\r\n    >\r\n      <div ref={sentinelRef} />\r\n      <div\r\n        className={clsx(\r\n          'sticky top-0 z-10 my-12 transition-shadow md:my-24',\r\n          isSticky && 'bg shadow',\r\n        )}\r\n      >\r\n        <div\r\n          className={clsx(\r\n            'flex items-center gap-24 py-14 md:items-start',\r\n            wrapInContainer && 'container mx-auto px-24',\r\n          )}\r\n        >\r\n          {backButton}\r\n          <div className=\"overflow-hidden overflow-ellipsis md:mr-64\">\r\n            <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\r\n              {title}\r\n            </h1>\r\n            {subTitle && <div className=\"mt-4\">{subTitle}</div>}\r\n          </div>\r\n          <div className=\"mr-auto\"></div>\r\n          {actions}\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={isLoading || !isDirty}\r\n          >\r\n            <Trans message=\"Save\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={\r\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\r\n        }\r\n      >\r\n        <div className=\"rounded\">{children}</div>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__be0c7262__\"","import {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\ninterface Response extends BackendResponse {\r\n  results: NormalizedModel[];\r\n}\r\n\r\ninterface Params {\r\n  query?: string;\r\n  perPage?: number;\r\n}\r\n\r\nexport function useArtistPickerSuggestions(queryParams: Params) {\r\n  return useQuery({\r\n    queryKey: ['artists', 'search-suggestions', queryParams],\r\n    queryFn: () => fetchArtists(queryParams),\r\n    placeholderData: keepPreviousData,\r\n  });\r\n}\r\n\r\nasync function fetchArtists(params: Params) {\r\n  return apiClient\r\n    .get<Response>('search/suggestions/artist', {params})\r\n    .then(r => r.data);\r\n}\r\n","import {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React, {useState} from 'react';\r\nimport {useArtistPickerSuggestions} from '@app/web-player/artists/artist-picker/use-artist-picker-suggestions';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\n\r\ninterface FormArtistPickerProps {\r\n  name: string;\r\n  className?: string;\r\n}\r\nexport function FormArtistPicker({name, className}: FormArtistPickerProps) {\r\n  const {trans} = useTrans();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const {data, isLoading} = useArtistPickerSuggestions({query: inputValue});\r\n\r\n  return (\r\n    <FormChipField\r\n      className={className}\r\n      name={name}\r\n      label={<Trans message=\"Artists\" />}\r\n      isAsync\r\n      inputValue={inputValue}\r\n      onInputValueChange={setInputValue}\r\n      suggestions={data?.results}\r\n      placeholder={trans(message('+Add artist'))}\r\n      isLoading={isLoading}\r\n      allowCustomValue={false}\r\n    >\r\n      {data?.results.map(result => (\r\n        <Item\r\n          value={result}\r\n          key={result.id}\r\n          startIcon={\r\n            result.image ? (\r\n              <img\r\n                className=\"rounded-full object-cover w-24 h-24\"\r\n                src={result.image}\r\n                alt=\"\"\r\n              />\r\n            ) : undefined\r\n          }\r\n        >\r\n          {result.name}\r\n        </Item>\r\n      ))}\r\n    </FormChipField>\r\n  );\r\n}\r\n","import {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\r\nimport React, {ReactNode, useState} from 'react';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {useNormalizedModels} from '@common/users/queries/use-normalized-models';\r\n\r\ninterface Props {\r\n  model: string;\r\n  name: string;\r\n  className?: string;\r\n  label?: ReactNode;\r\n  placeholder?: string;\r\n  allowCustomValue?: boolean;\r\n}\r\nexport function FormNormalizedModelChipField({\r\n  name,\r\n  label,\r\n  placeholder,\r\n  model,\r\n  className,\r\n  allowCustomValue = false,\r\n}: Props) {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const {data, isLoading} = useNormalizedModels(`normalized-models/${model}`, {\r\n    query: inputValue,\r\n  });\r\n  return (\r\n    <FormChipField\r\n      className={className}\r\n      name={name}\r\n      label={label}\r\n      isAsync\r\n      inputValue={inputValue}\r\n      onInputValueChange={setInputValue}\r\n      suggestions={data?.results}\r\n      placeholder={placeholder}\r\n      isLoading={isLoading}\r\n      allowCustomValue={allowCustomValue}\r\n    >\r\n      {data?.results.map(result => (\r\n        <Item\r\n          value={result}\r\n          key={result.id}\r\n          startIcon={\r\n            result.image ? (\r\n              <img\r\n                className=\"h-24 w-24 rounded-full object-cover\"\r\n                src={result.image}\r\n                alt=\"\"\r\n              />\r\n            ) : undefined\r\n          }\r\n        >\r\n          {result.name}\r\n        </Item>\r\n      ))}\r\n    </FormChipField>\r\n  );\r\n}\r\n","export const TAG_MODEL = 'tag';\r\n\r\nexport interface Tag {\r\n  id: number;\r\n  name: string;\r\n  display_name: string;\r\n  type: string;\r\n  updated_at: string;\r\n  created_at: string;\r\n  model_type: typeof TAG_MODEL;\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FileUploadIcon = createSvgIcon(\r\n  <path d=\"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5-5 5z\" />\r\n, 'FileUploadOutlined');\r\n","import React, {ReactElement, useMemo} from 'react';\r\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FileUpload} from '@common/uploads/uploader/file-upload-store';\r\nimport {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  fileUpload: FileUpload;\r\n  status: TrackUploadStatus;\r\n  className?: string;\r\n}\r\nexport function TrackUploadStatusText({fileUpload, status, className}: Props) {\r\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\r\n  const totalBytes = useMemo(\r\n    () => prettyBytes(fileUpload.file.size),\r\n    [fileUpload.file.size]\r\n  );\r\n  const uploadedBytes = useMemo(\r\n    () => prettyBytes(bytesUploaded),\r\n    [bytesUploaded]\r\n  );\r\n\r\n  let statusMessage: ReactElement;\r\n  if (status === 'completed') {\r\n    statusMessage = <Trans message=\"Upload complete\" />;\r\n  } else if (status === 'aborted') {\r\n    statusMessage = <Trans message=\"Upload cancelled\" />;\r\n  } else if (status === 'failed') {\r\n    statusMessage = <Trans message=\"Upload failed\" />;\r\n  } else if (status === 'processing') {\r\n    statusMessage = <Trans message=\"Processing upload...\" />;\r\n  } else if (status === 'pending') {\r\n    statusMessage = <Trans message=\"Waiting to start...\" />;\r\n  } else {\r\n    statusMessage = (\r\n      <Trans\r\n        message=\":bytesUploaded of :totalBytes uploaded\"\r\n        values={{\r\n          bytesUploaded: uploadedBytes,\r\n          totalBytes,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={clsx('text-muted text-xs', className)}>{statusMessage}</div>\r\n  );\r\n}\r\n","import {FileUpload} from '@common/uploads/uploader/file-upload-store';\r\nimport {ProgressBar} from '@common/ui/progress/progress-bar';\r\nimport React, {ComponentPropsWithoutRef, ReactElement} from 'react';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {message} from '@common/i18n/message';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {MixedText} from '@common/i18n/mixed-text';\r\nimport {ErrorIcon} from '@common/icons/material/Error';\r\nimport {WarningIcon} from '@common/icons/material/Warning';\r\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\r\n\r\nexport type TrackUploadStatus = FileUpload['status'] | 'processing' | undefined;\r\n\r\ninterface UploadProgressProps {\r\n  fileUpload: FileUpload;\r\n  status: TrackUploadStatus;\r\n  onAbort?: (uploadId: string) => void;\r\n  size?: 'sm' | 'md';\r\n  className?: string;\r\n}\r\nexport function TrackUploadProgress({\r\n  fileUpload,\r\n  status,\r\n  onAbort,\r\n  size = 'md',\r\n  className,\r\n}: UploadProgressProps) {\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"flex items-center gap-24 justify-between\">\r\n        <TrackUploadStatusText fileUpload={fileUpload} status={status} />\r\n        <UploadStatusButton\r\n          fileUpload={fileUpload}\r\n          status={status}\r\n          onAbort={onAbort}\r\n        />\r\n      </div>\r\n      <ProgressBar\r\n        size={size === 'sm' ? 'xs' : 'sm'}\r\n        radius=\"rounded-sm\"\r\n        value={fileUpload.percentage}\r\n        isIndeterminate={status === 'processing' || status === 'pending'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UploadStatusButton({\r\n  fileUpload,\r\n  status,\r\n  onAbort,\r\n}: UploadProgressProps) {\r\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\r\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\r\n  const errorMessage = fileUpload.errorMessage;\r\n\r\n  let statusButton: ReactElement;\r\n  if (status === 'failed') {\r\n    const errMessage =\r\n      errorMessage || message('This file could not be uploaded');\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\r\n          <ErrorIcon className=\"text-danger\" size=\"sm\" />\r\n        </Tooltip>\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'aborted') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <WarningIcon className=\"text-warning\" size=\"sm\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'completed' || status === 'processing') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <CheckCircleIcon size=\"sm\" className=\"text-primary\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (onAbort) {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <IconButton size=\"xs\" onClick={() => onAbort(fileUpload.file.id)}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </AnimatedStatus>\r\n    );\r\n  } else {\r\n    // keep the spacing, even if status button is hidden\r\n    statusButton = <div className=\"w-30 h-30\" />;\r\n  }\r\n\r\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\r\n}\r\n\r\ninterface AnimatedStatusProps\r\n  extends Omit<\r\n    ComponentPropsWithoutRef<'div'>,\r\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\r\n  > {\r\n  children: ReactElement;\r\n}\r\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\r\n  return (\r\n    <m.div\r\n      className=\"flex w-30 h-30 items-center justify-center\"\r\n      {...domProps}\r\n      initial={{scale: 0, opacity: 0}}\r\n      animate={{scale: 1, opacity: 1}}\r\n      exit={{scale: 0, opacity: 0}}\r\n    >\r\n      {children}\r\n    </m.div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {CreateAlbumPayload} from '@app/admin/albums-datatable-page/requests/use-create-album';\r\n\r\nexport type ExtractedTrackMetadata = Partial<CreateTrackPayload> & {\r\n  release_date?: string;\r\n  album_name?: string;\r\n};\r\n\r\ninterface Response extends BackendResponse {\r\n  metadata: {\r\n    title?: string;\r\n    album?: Album;\r\n    album_name?: string;\r\n    artist?: Artist;\r\n    artist_name?: string;\r\n    genres?: string[];\r\n    duration?: number;\r\n    release_date?: string;\r\n    comment?: string;\r\n    image?: FileEntry;\r\n    lyrics?: string;\r\n  };\r\n}\r\n\r\ninterface Payload {\r\n  fileEntryId: number;\r\n  autoMatchAlbum?: boolean;\r\n}\r\n\r\nexport function useExtractTackFileMetadata() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => extractMeta(payload),\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction extractMeta(payload: Payload): Promise<ExtractedTrackMetadata> {\r\n  return apiClient\r\n    .post<Response>(`tracks/${payload.fileEntryId}/extract-metadata`, payload)\r\n    .then(r => metadataToFormValues(r.data));\r\n}\r\n\r\nfunction metadataToFormValues(response: Response): ExtractedTrackMetadata {\r\n  const values: ExtractedTrackMetadata = {\r\n    name: response.metadata.title,\r\n    duration: response.metadata.duration,\r\n    genres: response.metadata.genres || [],\r\n    description: response.metadata.comment,\r\n    lyric: response.metadata.lyrics,\r\n    release_date: response.metadata.release_date,\r\n    album_name: response.metadata.album_name,\r\n  };\r\n  if (response.metadata.album) {\r\n    values.album_id = response.metadata.album.id;\r\n  }\r\n  if (response.metadata.artist) {\r\n    values.artists = [response.metadata.artist];\r\n  }\r\n  if (response.metadata.image) {\r\n    values.image = response.metadata.image.url;\r\n  }\r\n  return values;\r\n}\r\n\r\nexport function hydrateAlbumForm(\r\n  form: UseFormReturn<CreateAlbumPayload>,\r\n  data: ExtractedTrackMetadata,\r\n) {\r\n  if (!form.getValues('artists')?.length && data.artists) {\r\n    form.setValue('artists', data.artists);\r\n  }\r\n  if (!form.getValues('image') && data.image) {\r\n    form.setValue('image', data.image);\r\n  }\r\n  if (data.release_date) {\r\n    form.setValue('release_date', data.release_date);\r\n  }\r\n  if (data.genres?.length) {\r\n    form.setValue(\r\n      'genres',\r\n      // @ts-ignore\r\n      mergeArraysWithoutDuplicates(form.getValues('genres'), data.genres),\r\n    );\r\n  }\r\n  if (!form.getValues('name') && data.album_name) {\r\n    form.setValue('name', data.album_name);\r\n  }\r\n}\r\n\r\ntype Values = Partial<CreateTrackPayload>;\r\nexport function mergeTrackFormValues<\r\n  T extends Values = Values,\r\n  E extends Values = Values,\r\n>(newValues: T, oldValues: E): T & E {\r\n  return {\r\n    ...oldValues,\r\n    ...newValues,\r\n    artists: mergeArraysWithoutDuplicates(oldValues.artists, newValues.artists),\r\n    genres: mergeArraysWithoutDuplicates(\r\n      oldValues.genres as NormalizedModel[],\r\n      newValues.genres as NormalizedModel[],\r\n      'name',\r\n    ),\r\n    tags: mergeArraysWithoutDuplicates(oldValues.tags, newValues.tags, 'name'),\r\n  };\r\n}\r\n\r\nfunction mergeArraysWithoutDuplicates(\r\n  oldValues: NormalizedModel[] = [],\r\n  newValues: NormalizedModel[] = [],\r\n  key: keyof NormalizedModel = 'id',\r\n) {\r\n  newValues = newValues.filter(\r\n    nv => !oldValues.find(ov => ov[key] === nv[key]),\r\n  );\r\n  return [...oldValues, ...newValues];\r\n}\r\n","import {useSettings} from '@common/core/settings/use-settings';\r\nimport {\r\n  ExtractedTrackMetadata,\r\n  useExtractTackFileMetadata,\r\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\r\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\r\nimport {useCallback, useMemo, useRef} from 'react';\r\nimport {UploadInputType} from '@common/uploads/types/upload-input-config';\r\nimport {Disk} from '@common/uploads/types/backend-metadata';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\r\nimport {generateWaveformData} from '@app/web-player/tracks/waveform/generate-waveform-data';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\nimport {validateUpload} from '@common/uploads/uploader/validate-upload';\r\nimport {message} from '@common/i18n/message';\r\n\r\nconst FiftyMB = 50 * 1024 * 1024;\r\n\r\nexport interface TrackUploadMeta {\r\n  isGeneratingWave?: boolean;\r\n  isExtractingMetadata?: boolean;\r\n}\r\n\r\nexport type TrackUploadPayload = CreateTrackPayload & {uploadId: string};\r\n\r\ninterface Options {\r\n  autoMatchAlbum?: boolean;\r\n  onUploadStart?: (data: TrackUploadPayload) => void;\r\n  onMetadataChange: (\r\n    file: UploadedFile,\r\n    newData: ExtractedTrackMetadata & {waveData?: number[][]},\r\n  ) => void;\r\n}\r\nexport function useTrackUploader(options: Options) {\r\n  const {uploads} = useSettings();\r\n  const restrictions = useMemo(\r\n    () => ({\r\n      allowedFileTypes: [UploadInputType.audio, UploadInputType.video],\r\n      maxFileSize: uploads.max_size || FiftyMB,\r\n    }),\r\n    [uploads.max_size],\r\n  );\r\n\r\n  const extractMetadata = useExtractTackFileMetadata();\r\n  const optionsRef = useRef<Options>(options);\r\n  optionsRef.current = options;\r\n\r\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\r\n  const updateFileUpload = useFileUploadStore(s => s.updateFileUpload);\r\n  const getUpload = useFileUploadStore(s => s.getUpload);\r\n  const updateUpload = useCallback(\r\n    (uploadId: string, newMeta: TrackUploadMeta) => {\r\n      updateFileUpload(uploadId, {\r\n        meta: {\r\n          // @ts-ignore\r\n          ...(getUpload(uploadId)?.meta || {}),\r\n          ...newMeta,\r\n        },\r\n      });\r\n    },\r\n    [updateFileUpload, getUpload],\r\n  );\r\n\r\n  // todo: playback source is not set if extract metadata request errors out\r\n  const uploadOptions: UploadStrategyConfig = useMemo(() => {\r\n    return {\r\n      metadata: {\r\n        diskPrefix: 'track_media',\r\n        disk: Disk.public,\r\n      },\r\n      restrictions,\r\n      onSuccess: (entry: FileEntry, file) => {\r\n        updateUpload(file.id, {isExtractingMetadata: true});\r\n        extractMetadata.mutate(\r\n          {\r\n            fileEntryId: entry.id,\r\n            autoMatchAlbum: optionsRef.current.autoMatchAlbum,\r\n          },\r\n          {\r\n            onSuccess: formValues => {\r\n              updateUpload(file.id, {isExtractingMetadata: false});\r\n              const newValues: ExtractedTrackMetadata = {\r\n                ...formValues,\r\n                src: entry.url,\r\n              };\r\n              optionsRef.current.onMetadataChange(file, newValues);\r\n            },\r\n            onError: () => {\r\n              updateUpload(file.id, {isExtractingMetadata: false});\r\n            },\r\n          },\r\n        );\r\n      },\r\n      onError: message => {\r\n        if (message) {\r\n          toast.danger(message);\r\n        }\r\n      },\r\n    };\r\n  }, [extractMetadata, updateUpload, restrictions]);\r\n\r\n  const validateUploads = useCallback(\r\n    (files: UploadedFile[]) => {\r\n      const validFiles = files.filter(\r\n        file => !validateUpload(file, restrictions),\r\n      );\r\n      // show error message, if some files did not pass validation\r\n      if (files.length !== validFiles.length) {\r\n        toast.danger(\r\n          message(':count of your files is not supported.', {\r\n            values: {count: files.length - validFiles.length},\r\n          }),\r\n        );\r\n      }\r\n      return validFiles;\r\n    },\r\n    [restrictions],\r\n  );\r\n\r\n  const uploadTracks = useCallback(\r\n    async (files: UploadedFile[]) => {\r\n      const validFiles = validateUploads(files);\r\n      if (!validFiles.length) return;\r\n      files.forEach(file => {\r\n        optionsRef.current.onUploadStart?.({\r\n          name: file.name,\r\n          uploadId: file.id,\r\n        });\r\n      });\r\n      uploadMultiple(files, uploadOptions);\r\n      for (const file of files) {\r\n        updateUpload(file.id, {isGeneratingWave: true});\r\n        const waveData = await generateWaveformData(file.native);\r\n        if (waveData) {\r\n          optionsRef.current.onMetadataChange(file, {waveData});\r\n        }\r\n        updateUpload(file.id, {isGeneratingWave: false});\r\n      }\r\n    },\r\n    [uploadOptions, uploadMultiple, updateUpload, validateUploads],\r\n  );\r\n\r\n  const openFilePicker = useCallback(async () => {\r\n    const files = await openUploadWindow({\r\n      multiple: true,\r\n      types: restrictions.allowedFileTypes,\r\n    });\r\n    await uploadTracks(files);\r\n  }, [uploadTracks, restrictions]);\r\n\r\n  return {openFilePicker, uploadTracks, validateUploads};\r\n}\r\n","import {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {TrackUploadMeta} from '@app/web-player/backstage/upload-page/use-track-uploader';\r\n\r\nexport function useTrackUpload(uploadId: string | undefined) {\r\n  const upload = useFileUploadStore(s =>\r\n    uploadId ? s.fileUploads.get(uploadId) : null\r\n  );\r\n\r\n  let isUploading = false;\r\n  let status: TrackUploadStatus;\r\n\r\n  if (upload) {\r\n    const meta = upload.meta as TrackUploadMeta | undefined;\r\n    const isProcessing = meta?.isExtractingMetadata || meta?.isGeneratingWave;\r\n\r\n    isUploading =\r\n      upload?.status === 'pending' ||\r\n      upload?.status === 'inProgress' ||\r\n      !!isProcessing;\r\n\r\n    status =\r\n      upload?.status === 'completed' && isProcessing\r\n        ? 'processing'\r\n        : upload?.status;\r\n  }\r\n\r\n  return {isUploading, status, activeUpload: upload};\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\r\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\r\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\r\n\r\nexport function TrackFormUploadButton() {\r\n  const [uploadId, setUploadId] = useState<string>();\r\n  const {setValue, watch, getValues} = useFormContext<CreateTrackPayload>();\r\n  const {openFilePicker} = useTrackUploader({\r\n    onUploadStart: ({uploadId}) => setUploadId(uploadId),\r\n    onMetadataChange: (file, newData) => {\r\n      const mergedValues = mergeTrackFormValues(newData, getValues());\r\n      Object.entries(mergedValues).forEach(([key, value]) =>\r\n        setValue(key as keyof CreateTrackPayload, value, {shouldDirty: true})\r\n      );\r\n    },\r\n  });\r\n  const {status, isUploading, activeUpload} = useTrackUpload(uploadId);\r\n  const {abortUpload, clearInactive} = useFileUploadStore();\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"w-full\"\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        startIcon={<FileUploadIcon />}\r\n        disabled={isUploading}\r\n        onClick={() => openFilePicker()}\r\n      >\r\n        {watch('src') ? (\r\n          <Trans message=\"Replace file\" />\r\n        ) : (\r\n          <Trans message=\"Upload file\" />\r\n        )}\r\n      </Button>\r\n      {activeUpload && (\r\n        <TrackUploadProgress\r\n          fileUpload={activeUpload}\r\n          status={status}\r\n          className=\"mt-24\"\r\n          onAbort={uploadId => {\r\n            abortUpload(uploadId);\r\n            clearInactive();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\r\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\r\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {TAG_MODEL} from '@common/tags/tag';\r\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {TrackFormUploadButton} from '@app/admin/tracks-datatable-page/track-form/track-form-upload-button';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\ninterface TrackFormProps {\r\n  showExternalIdFields?: boolean;\r\n  showAlbumField?: boolean;\r\n  uploadButton?: ReactNode;\r\n}\r\nexport function TrackForm({\r\n  showExternalIdFields,\r\n  showAlbumField = true,\r\n  uploadButton,\r\n}: TrackFormProps) {\r\n  const {trans} = useTrans();\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  return (\r\n    <div className=\"gap-24 md:flex\">\r\n      <div className=\"flex-shrink-0\">\r\n        <FormImageSelector\r\n          name=\"image\"\r\n          diskPrefix=\"track_image\"\r\n          variant={isMobile ? 'input' : 'square'}\r\n          label={isMobile ? <Trans message=\"Image\" /> : null}\r\n          previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\r\n          stretchPreview\r\n        />\r\n        <div className=\"mt-24\">\r\n          {uploadButton ? uploadButton : <TrackFormUploadButton />}\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-24 flex-auto md:mt-0\">\r\n        <FormTextField\r\n          name=\"name\"\r\n          label={<Trans message=\"Name\" />}\r\n          className=\"mb-24\"\r\n          required\r\n          autoFocus\r\n        />\r\n        {showAlbumField && (\r\n          <FormNormalizedModelField\r\n            className=\"mb-24\"\r\n            label={<Trans message=\"Album\" />}\r\n            name=\"album_id\"\r\n            endpoint=\"search/suggestions/album\"\r\n          />\r\n        )}\r\n        <FormArtistPicker name=\"artists\" className=\"mb-24\" />\r\n        <FormNormalizedModelChipField\r\n          label={<Trans message=\"Genres\" />}\r\n          placeholder={trans(message('+Add genre'))}\r\n          model={GENRE_MODEL}\r\n          name=\"genres\"\r\n          allowCustomValue\r\n          className=\"mb-24\"\r\n        />\r\n        <FormNormalizedModelChipField\r\n          label={<Trans message=\"Tags\" />}\r\n          placeholder={trans(message('+Add tag'))}\r\n          model={TAG_MODEL}\r\n          name=\"tags\"\r\n          allowCustomValue\r\n          className=\"mb-24\"\r\n        />\r\n        <FormTextField\r\n          name=\"description\"\r\n          label={<Trans message=\"Description\" />}\r\n          inputElementType=\"textarea\"\r\n          rows={5}\r\n          className=\"mb-24\"\r\n        />\r\n        <DurationField />\r\n        {showExternalIdFields && <SourceField />}\r\n        {showExternalIdFields && <SpotifyIdField />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SourceField() {\r\n  return (\r\n    <FormTextField\r\n      name=\"src\"\r\n      label={<Trans message=\"Playback source\" />}\r\n      className=\"mb-24\"\r\n      minLength={1}\r\n      maxLength={230}\r\n      description={\r\n        <Trans message=\"Supports audio, video, hls/dash stream and youtube video url. If left empty, best matching youtube video will be found automatically.\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction SpotifyIdField() {\r\n  const {spotify_is_setup} = useSettings();\r\n  if (!spotify_is_setup) {\r\n    return null;\r\n  }\r\n  return (\r\n    <FormTextField\r\n      name=\"spotify_id\"\r\n      label={<Trans message=\"Spotify ID\" />}\r\n      className=\"mb-24\"\r\n      minLength={22}\r\n      maxLength={22}\r\n    />\r\n  );\r\n}\r\n\r\nfunction DurationField() {\r\n  const {watch} = useFormContext<CreateTrackPayload>();\r\n  return (\r\n    <FormTextField\r\n      required\r\n      name=\"duration\"\r\n      label={<Trans message=\"Duration (in milliseconds)\" />}\r\n      className=\"mb-24\"\r\n      type=\"number\"\r\n      min={1}\r\n      max={86400000}\r\n      description={\r\n        <Trans\r\n          message=\"Will appear on the site as: :preview\"\r\n          values={{preview: <FormattedDuration ms={watch('duration')} />}}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {message} from '@common/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\r\nimport {TrackUploadPayload} from '@app/web-player/backstage/upload-page/use-track-uploader';\r\n\r\nconst endpoint = 'tracks';\r\n\r\nexport interface CreateTrackResponse extends BackendResponse {\r\n  track: Track;\r\n}\r\n\r\nexport interface CreateTrackPayload\r\n  extends Omit<\r\n    Track,\r\n    'genres' | 'artists' | 'tags' | 'id' | 'model_type' | 'album' | 'lyric'\r\n  > {\r\n  album_id?: number;\r\n  artists?: NormalizedModel[];\r\n  waveData?: number[][];\r\n  genres?: NormalizedModel[] | string[];\r\n  tags?: NormalizedModel[];\r\n  lyric?: string;\r\n}\r\n\r\ninterface Options {\r\n  onSuccess?: (response: CreateTrackResponse) => void;\r\n}\r\n\r\nexport function useCreateTrack(\r\n  form: UseFormReturn<CreateTrackPayload> | UseFormReturn<TrackUploadPayload>,\r\n  {onSuccess}: Options = {},\r\n) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: CreateTrackPayload) => createTrack(payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Track created')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint),\r\n      });\r\n      onSuccess?.(response);\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createTrack(payload: CreateTrackPayload) {\r\n  return apiClient\r\n    .post<CreateTrackResponse>(endpoint, prepareTrackPayload(payload))\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function prepareTrackPayload(payload: CreateTrackPayload) {\r\n  return {\r\n    ...payload,\r\n    album_id: payload.album_id ? payload.album_id : null,\r\n    artists: payload.artists?.map(artist => artist.id),\r\n  };\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {\r\n  CreateTrackPayload,\r\n  CreateTrackResponse,\r\n  useCreateTrack,\r\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\n\r\ninterface Props {\r\n  onTrackCreated?: (response: CreateTrackResponse) => void;\r\n  defaultValues?: Partial<CreateTrackPayload>;\r\n}\r\n\r\nexport function useCreateTrackForm({\r\n  onTrackCreated,\r\n  defaultValues,\r\n}: Props = {}) {\r\n  const form = useForm<CreateTrackPayload>({\r\n    defaultValues,\r\n  });\r\n  const createTrack = useCreateTrack(form, {onSuccess: onTrackCreated});\r\n  return {form, createTrack};\r\n}\r\n","import React from 'react';\r\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\r\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\r\n\r\ninterface Props {\r\n  wrapInContainer?: boolean;\r\n}\r\nexport function CreateTrackPage({wrapInContainer}: Props) {\r\n  const navigate = useNavigate();\r\n  const {pathname} = useLocation();\r\n  const {form, createTrack} = useCreateTrackForm({\r\n    onTrackCreated: response => {\r\n      if (pathname.includes('admin')) {\r\n        navigate(`/admin/tracks/${response.track.id}/edit`);\r\n      } else {\r\n        navigate(getTrackLink(response.track));\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        createTrack.mutate(values);\r\n      }}\r\n      title={<Trans message=\"Add new track\" />}\r\n      isLoading={createTrack.isPending}\r\n      disableSaveWhenNotDirty\r\n      wrapInContainer={wrapInContainer}\r\n    >\r\n      <FileUploadProvider>\r\n        <TrackForm showExternalIdFields />\r\n      </FileUploadProvider>\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {\r\n  CreateTrackPayload,\r\n  prepareTrackPayload,\r\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\n\r\nexport interface UpdateTrackResponse extends BackendResponse {\r\n  track: Track;\r\n}\r\n\r\nexport interface UpdateTrackPayload extends CreateTrackPayload {\r\n  id: number;\r\n}\r\n\r\nconst Endpoint = (id: number) => `tracks/${id}`;\r\n\r\ninterface Options {\r\n  onSuccess?: (response: UpdateTrackResponse) => void;\r\n}\r\n\r\nexport function useUpdateTrack(\r\n  form: UseFormReturn<UpdateTrackPayload>,\r\n  options: Options = {},\r\n) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateTrackPayload) => updateChannel(payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Track updated')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('tracks'),\r\n      });\r\n      options.onSuccess?.(response);\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateChannel({\r\n  id,\r\n  ...payload\r\n}: UpdateTrackPayload): Promise<UpdateTrackResponse> {\r\n  return apiClient\r\n    .put(Endpoint(id), prepareTrackPayload(payload as CreateTrackPayload))\r\n    .then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {\r\n  UpdateTrackPayload,\r\n  UpdateTrackResponse,\r\n  useUpdateTrack,\r\n} from '@app/admin/tracks-datatable-page/requests/use-update-track';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\n\r\ninterface Options {\r\n  onTrackUpdated?: (response: UpdateTrackResponse) => void;\r\n}\r\n\r\nexport function useUpdateTrackForm(\r\n  track: UpdateTrackPayload | CreateTrackPayload | Omit<Track, 'lyric'>,\r\n  options: Options = {}\r\n) {\r\n  const form = useForm<UpdateTrackPayload>({\r\n    defaultValues: {\r\n      ...track,\r\n      image: track.image || (track as Track).album?.image,\r\n    },\r\n  });\r\n  const updateTrack = useUpdateTrack(form, {onSuccess: options.onTrackUpdated});\r\n  return {form, updateTrack};\r\n}\r\n","import React from 'react';\r\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\r\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {Navigate, useLocation} from 'react-router-dom';\r\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\r\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\r\n\r\ninterface Props {\r\n  wrapInContainer?: boolean;\r\n}\r\nexport function UpdateTrackPage({wrapInContainer}: Props) {\r\n  const query = useTrack({loader: 'editTrackPage'});\r\n  if (query.data) {\r\n    return (\r\n      <PageContent track={query.data.track} wrapInContainer={wrapInContainer} />\r\n    );\r\n  }\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n      loaderIsScreen={false}\r\n    />\r\n  );\r\n}\r\n\r\ninterface PageContentProps {\r\n  track: Track;\r\n  wrapInContainer?: boolean;\r\n}\r\nfunction PageContent({track, wrapInContainer}: PageContentProps) {\r\n  const {canEdit} = useTrackPermissions([track]);\r\n  const navigate = useNavigate();\r\n  const {pathname} = useLocation();\r\n  const {form, updateTrack} = useUpdateTrackForm(track, {\r\n    onTrackUpdated: response => {\r\n      if (pathname.includes('admin')) {\r\n        navigate('/admin/tracks');\r\n      } else {\r\n        navigate(getTrackLink(response.track));\r\n      }\r\n    },\r\n  });\r\n\r\n  if (!canEdit) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        updateTrack.mutate(values);\r\n      }}\r\n      title={<Trans message=\"Edit “:name“ track\" values={{name: track.name}} />}\r\n      isLoading={updateTrack.isPending}\r\n      disableSaveWhenNotDirty\r\n      wrapInContainer={wrapInContainer}\r\n    >\r\n      <FileUploadProvider>\r\n        <TrackForm showExternalIdFields />\r\n      </FileUploadProvider>\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {message} from '@common/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {\r\n  CreateTrackPayload,\r\n  prepareTrackPayload,\r\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\n\r\nconst endpoint = 'albums';\r\n\r\ninterface Response extends BackendResponse {\r\n  album: Album;\r\n}\r\n\r\nexport type CreateAlbumPayloadTrack = Omit<\r\n  CreateTrackPayload,\r\n  'album' | 'artists' | 'lyric'\r\n> & {\r\n  uploadId: string;\r\n};\r\n\r\nexport interface CreateAlbumPayload\r\n  extends Omit<Album, 'genres' | 'tags' | 'tracks' | 'artists'> {\r\n  artists: NormalizedModel[];\r\n  genres?: NormalizedModel[] | string[];\r\n  tags?: NormalizedModel[];\r\n  tracks: CreateAlbumPayloadTrack[];\r\n}\r\n\r\nexport function useCreateAlbum(form: UseFormReturn<CreateAlbumPayload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: CreateAlbumPayload) => createAlbum(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Album created')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint),\r\n      });\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createAlbum(payload: CreateAlbumPayload) {\r\n  return apiClient\r\n    .post<Response>(endpoint, prepareAlbumPayload(payload))\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function prepareAlbumPayload(payload: CreateAlbumPayload) {\r\n  return {\r\n    ...payload,\r\n    artists: payload.artists?.map(artist => artist.id),\r\n    tracks: payload.tracks?.map(track => prepareTrackPayload(track)),\r\n  };\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {\r\n  CreateAlbumPayload,\r\n  prepareAlbumPayload,\r\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\r\n\r\ninterface Response extends BackendResponse {\r\n  album: Album;\r\n}\r\n\r\nexport interface UpdateAlbumPayload extends CreateAlbumPayload {\r\n  id: number;\r\n}\r\n\r\nconst Endpoint = (id: number) => `albums/${id}`;\r\n\r\nexport function useUpdateAlbum(\r\n  form: UseFormReturn<UpdateAlbumPayload>,\r\n  albumId: number,\r\n) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const {pathname} = useLocation();\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateAlbumPayload) => updateAlbum(albumId, payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Album updated')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('albums'),\r\n      });\r\n      if (pathname.includes('admin')) {\r\n        navigate('/admin/albums');\r\n      } else {\r\n        navigate(getAlbumLink(response.album));\r\n      }\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateAlbum(\r\n  id: number,\r\n  payload: UpdateAlbumPayload,\r\n): Promise<Response> {\r\n  return apiClient\r\n    .put(Endpoint(id), prepareAlbumPayload(payload))\r\n    .then(r => r.data);\r\n}\r\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\n\r\ninterface Props {\r\n  track: UpdateTrackPayload | CreateTrackPayload;\r\n  hideAlbumField?: boolean;\r\n}\r\nexport function UpdateTrackDialog({track, hideAlbumField}: Props) {\r\n  const {formId, close} = useDialogContext();\r\n  const {form} = useUpdateTrackForm(track);\r\n  return (\r\n    <Dialog size=\"fullscreen\">\r\n      <DialogHeader>\r\n        <Trans message=\"Edit “:name“ track\" values={{name: track.name}} />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={values => {\r\n            close(values);\r\n          }}\r\n          onBeforeSubmit={() => {\r\n            form.clearErrors();\r\n          }}\r\n        >\r\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"text\" onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\r\n          <Trans message=\"Update\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\n\r\ninterface Props {\r\n  defaultValues?: Partial<CreateTrackPayload>;\r\n  hideAlbumField?: boolean;\r\n}\r\nexport function CreateTrackDialog({defaultValues, hideAlbumField}: Props) {\r\n  const {formId, close} = useDialogContext();\r\n  const {form} = useCreateTrackForm({defaultValues});\r\n  return (\r\n    <Dialog size=\"fullscreen\">\r\n      <DialogHeader>\r\n        <Trans message=\"Add new track\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={values => {\r\n            close(values);\r\n          }}\r\n          onBeforeSubmit={() => {\r\n            form.clearErrors();\r\n          }}\r\n        >\r\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"text\" onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\r\n          <Trans message=\"Create\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useFieldArray, useFormContext} from 'react-hook-form';\r\nimport {\r\n  CreateAlbumPayload,\r\n  CreateAlbumPayloadTrack,\r\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\r\nimport React, {useRef} from 'react';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\nimport {DragHandleIcon} from '@common/icons/material/DragHandle';\r\nimport {EditIcon} from '@common/icons/material/Edit';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\r\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {UpdateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/update-track-dialog';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {CreateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/create-track-dialog';\r\nimport {DragPreviewRenderer} from '@common/ui/interactions/dnd/use-draggable';\r\nimport {DragPreview} from '@common/ui/interactions/dnd/drag-preview';\r\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\nimport {\r\n  hydrateAlbumForm,\r\n  mergeTrackFormValues,\r\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\r\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\r\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\r\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\r\nimport {useSortable} from '@common/ui/interactions/dnd/sortable/use-sortable';\r\n\r\nexport function AlbumTracksForm() {\r\n  const form = useFormContext<CreateAlbumPayload>();\r\n  const {watch, setValue, getValues} = form;\r\n  const {fields, remove, prepend, move} = useFieldArray({\r\n    name: 'tracks',\r\n  });\r\n\r\n  const updateTrack = (\r\n    uploadId: string,\r\n    newValues: Partial<CreateTrackPayload>,\r\n  ) => {\r\n    const index = getValues('tracks')?.findIndex(f => f.uploadId === uploadId);\r\n    if (index != null) {\r\n      setValue(\r\n        `tracks.${index}`,\r\n        mergeTrackFormValues(newValues, getValues(`tracks.${index}`)),\r\n        {shouldDirty: true},\r\n      );\r\n    }\r\n  };\r\n\r\n  const {openFilePicker} = useTrackUploader({\r\n    onUploadStart: data =>\r\n      prepend(\r\n        // newly uploaded track should inherit album artists, genres and tags\r\n        mergeTrackFormValues(data, {\r\n          artists: form.getValues('artists'),\r\n          genres: form.getValues('genres'),\r\n          tags: form.getValues('tags'),\r\n        }),\r\n      ),\r\n    onMetadataChange: (file, newData) => {\r\n      hydrateAlbumForm(form, newData);\r\n      updateTrack(file.id, newData);\r\n    },\r\n  });\r\n\r\n  const tracks = watch('tracks') || [];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center gap-12\">\r\n        <h2 className=\"my-24 text-xl font-semibold\">\r\n          <Trans message=\"Tracks\" />\r\n        </h2>\r\n        <Button\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          size=\"xs\"\r\n          className=\"ml-auto\"\r\n          startIcon={<FileUploadIcon />}\r\n          onClick={() => openFilePicker()}\r\n        >\r\n          <Trans message=\"Upload tracks\" />\r\n        </Button>\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={newTrack => {\r\n            if (newTrack) {\r\n              prepend(newTrack);\r\n            }\r\n          }}\r\n        >\r\n          <Tooltip label={<Trans message=\"Create track\" />}>\r\n            <IconButton variant=\"outline\" color=\"primary\" size=\"xs\">\r\n              <AddIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <CreateTrackDialog\r\n            hideAlbumField\r\n            defaultValues={{\r\n              artists: watch('artists'),\r\n              tags: watch('tags'),\r\n              genres: watch('genres'),\r\n            }}\r\n          />\r\n        </DialogTrigger>\r\n      </div>\r\n      {fields.map((field, index) => {\r\n        const track = tracks[index];\r\n        return (\r\n          <TrackItem\r\n            key={field.id}\r\n            track={track}\r\n            onRemove={() => remove(index)}\r\n            onSort={(oldIndex, newIndex) => move(oldIndex, newIndex)}\r\n            tracks={tracks}\r\n            onUpdate={newValues => {\r\n              updateTrack(track.uploadId, newValues);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {!fields.length ? (\r\n        <IllustratedMessage\r\n          className=\"mt-40\"\r\n          image={<SvgImage src={musicImage} />}\r\n          title={<Trans message=\"This album does not have any tracks yet\" />}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface TrackItemProps {\r\n  track: CreateAlbumPayloadTrack;\r\n  tracks: CreateAlbumPayloadTrack[];\r\n  onRemove: () => void;\r\n  onUpdate: (updatedTrack: UpdateTrackPayload | CreateTrackPayload) => void;\r\n  onSort: (oldIndex: number, newIndex: number) => void;\r\n}\r\nfunction TrackItem({\r\n  track,\r\n  tracks,\r\n  onRemove,\r\n  onUpdate,\r\n  onSort,\r\n}: TrackItemProps) {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const previewRef = useRef<DragPreviewRenderer>(null);\r\n\r\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\r\n  const activeUpload = useFileUploadStore(s => {\r\n    return track.uploadId ? s.fileUploads.get(track.uploadId) : null;\r\n  });\r\n  const {isUploading, status} = useTrackUpload(track.uploadId);\r\n\r\n  const {sortableProps} = useSortable({\r\n    disabled: isUploading,\r\n    ref,\r\n    item: track,\r\n    items: tracks,\r\n    type: 'albumFormTrack',\r\n    preview: previewRef,\r\n    strategy: 'line',\r\n    onSortEnd: (oldIndex, newIndex) => {\r\n      onSort(oldIndex, newIndex);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"border-b border-t border-t-transparent py-4\"\r\n      ref={ref}\r\n      {...sortableProps}\r\n    >\r\n      <div className=\"flex items-center text-sm\">\r\n        <IconButton className=\"mr-14 flex-shrink-0\" disabled={isUploading}>\r\n          <DragHandleIcon />\r\n        </IconButton>\r\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap\">\r\n          {track.name}\r\n        </div>\r\n        {activeUpload && (\r\n          <div className=\"mr-10 flex items-center\">\r\n            <TrackUploadStatusText\r\n              fileUpload={activeUpload}\r\n              status={status}\r\n              className=\"mr-10\"\r\n            />\r\n            <ProgressCircle\r\n              isIndeterminate={status === 'processing'}\r\n              value={activeUpload.percentage}\r\n              size=\"sm\"\r\n            />\r\n          </div>\r\n        )}\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={updatedTrack => {\r\n            if (updatedTrack) {\r\n              onUpdate(updatedTrack);\r\n            }\r\n          }}\r\n        >\r\n          <Tooltip label={<Trans message=\"Edit track\" />}>\r\n            <IconButton\r\n              className=\"ml-auto flex-shrink-0 text-muted\"\r\n              disabled={isUploading}\r\n            >\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <UpdateTrackDialog track={track} hideAlbumField={true} />\r\n        </DialogTrigger>\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={isConfirmed => {\r\n            if (isConfirmed) {\r\n              if (track.uploadId) {\r\n                abortUpload(track.uploadId);\r\n              }\r\n              onRemove();\r\n            }\r\n          }}\r\n        >\r\n          <Tooltip label={<Trans message=\"Remove track\" />}>\r\n            <IconButton className=\"flex-shrink-0 text-muted\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <ConfirmationDialog\r\n            isDanger\r\n            title={<Trans message=\"Remove track\" />}\r\n            body={\r\n              <Trans message=\"Are you sure you want to remove this track from the album?\" />\r\n            }\r\n            confirm={<Trans message=\"Remove\" />}\r\n          />\r\n        </DialogTrigger>\r\n      </div>\r\n      <RowDragPreview track={track} ref={previewRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface DragPreviewProps {\r\n  track: CreateTrackPayload;\r\n}\r\nconst RowDragPreview = React.forwardRef<DragPreviewRenderer, DragPreviewProps>(\r\n  ({track}, ref) => {\r\n    let content = track.name;\r\n    if (track.artists?.length) {\r\n      content += `- ${track.artists?.[0].name}`;\r\n    }\r\n    return (\r\n      <DragPreview ref={ref}>\r\n        {() => (\r\n          <div className=\"rounded bg-chip p-8 text-sm shadow\">{content}</div>\r\n        )}\r\n      </DragPreview>\r\n    );\r\n  },\r\n);\r\n","import React, {Fragment} from 'react';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\r\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {TAG_MODEL} from '@common/tags/tag';\r\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\r\nimport {AlbumTracksForm} from '@app/admin/albums-datatable-page/album-form/album-tracks-form';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\n// AlbumForm will be wrapped in FileUploadProvider by parent component\r\n\r\ninterface AlbumFormProps {\r\n  showExternalIdFields?: boolean;\r\n}\r\nexport function AlbumForm({showExternalIdFields}: AlbumFormProps) {\r\n  const {trans} = useTrans();\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <Fragment>\r\n      <div className=\"gap-24 md:flex\">\r\n        <div className=\"flex-shrink-0\">\r\n          <FormImageSelector\r\n            name=\"image\"\r\n            diskPrefix=\"album_images\"\r\n            label={isMobile ? <Trans message=\"Image\" /> : null}\r\n            variant={isMobile ? 'input' : 'square'}\r\n            previewSize=\"md:w-full md:w-224 md:aspect-square\"\r\n            stretchPreview\r\n          />\r\n        </div>\r\n        <div className=\"mt-24 flex-auto md:mt-0\">\r\n          <FormTextField\r\n            name=\"name\"\r\n            label={<Trans message=\"Name\" />}\r\n            className=\"mb-24\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <FormDatePicker\r\n            name=\"release_date\"\r\n            label={<Trans message=\"Release date\" />}\r\n            className=\"mb-24\"\r\n            granularity=\"day\"\r\n          />\r\n          <FormArtistPicker name=\"artists\" className=\"mb-24\" />\r\n          <FormNormalizedModelChipField\r\n            label={<Trans message=\"Genres\" />}\r\n            placeholder={trans(message('+Add genre'))}\r\n            model={GENRE_MODEL}\r\n            name=\"genres\"\r\n            allowCustomValue\r\n            className=\"mb-24\"\r\n          />\r\n          <FormNormalizedModelChipField\r\n            label={<Trans message=\"Tags\" />}\r\n            placeholder={trans(message('+Add tag'))}\r\n            model={TAG_MODEL}\r\n            name=\"tags\"\r\n            allowCustomValue\r\n            className=\"mb-24\"\r\n          />\r\n          <FormTextField\r\n            name=\"description\"\r\n            label={<Trans message=\"Description\" />}\r\n            inputElementType=\"textarea\"\r\n            rows={5}\r\n            className=\"mb-24\"\r\n          />\r\n          {showExternalIdFields && <SpotifyIdField />}\r\n        </div>\r\n      </div>\r\n      <AlbumTracksForm />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction SpotifyIdField() {\r\n  const {spotify_is_setup} = useSettings();\r\n  if (!spotify_is_setup) {\r\n    return null;\r\n  }\r\n  return (\r\n    <FormTextField\r\n      name=\"spotify_id\"\r\n      label={<Trans message=\"Spotify ID\" />}\r\n      className=\"mb-24\"\r\n      minLength={22}\r\n      maxLength={22}\r\n    />\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport React from 'react';\r\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {\r\n  UpdateAlbumPayload,\r\n  useUpdateAlbum,\r\n} from '@app/admin/albums-datatable-page/requests/use-update-album';\r\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {\r\n  FileUploadProvider,\r\n  useFileUploadStore,\r\n} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\r\n\r\ninterface Props {\r\n  wrapInContainer?: boolean;\r\n}\r\nexport function UpdateAlbumPage({wrapInContainer}: Props) {\r\n  const query = useAlbum({loader: 'editAlbumPage'});\r\n\r\n  if (query.data) {\r\n    return (\r\n      <FileUploadProvider>\r\n        <PageContent\r\n          album={query.data.album}\r\n          wrapInContainer={wrapInContainer}\r\n        />\r\n      </FileUploadProvider>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageStatus\r\n      query={query}\r\n      loaderIsScreen={false}\r\n      loaderClassName=\"absolute inset-0 m-auto\"\r\n    />\r\n  );\r\n}\r\n\r\ninterface PageContentProps {\r\n  album: Album;\r\n  wrapInContainer?: boolean;\r\n}\r\nfunction PageContent({album, wrapInContainer}: PageContentProps) {\r\n  const {canEdit} = useAlbumPermissions(album);\r\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\r\n  const form = useForm<UpdateAlbumPayload>({\r\n    defaultValues: {\r\n      image: album.image,\r\n      name: album.name,\r\n      release_date: album.release_date,\r\n      artists: album.artists,\r\n      genres: album.genres,\r\n      tags: album.tags,\r\n      description: album.description,\r\n      spotify_id: album.spotify_id,\r\n      tracks: album.tracks,\r\n    },\r\n  });\r\n  const updateAlbum = useUpdateAlbum(form, album.id);\r\n\r\n  if (!canEdit) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        updateAlbum.mutate(values);\r\n      }}\r\n      title={<Trans message=\"Edit “:name“ album\" values={{name: album.name}} />}\r\n      isLoading={updateAlbum.isPending || uploadIsInProgress}\r\n      disableSaveWhenNotDirty\r\n      wrapInContainer={wrapInContainer}\r\n    >\r\n      <AlbumForm showExternalIdFields />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {forwardRef, useImperativeHandle, useState} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {\r\n  CreateAlbumPayload,\r\n  useCreateAlbum,\r\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\r\nimport {\r\n  hydrateAlbumForm,\r\n  mergeTrackFormValues,\r\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport type {\r\n  UploaderActions,\r\n  UploaderProps,\r\n} from '@app/web-player/backstage/upload-page/upload-page';\r\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\r\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\r\n\r\nexport const AlbumUploader = forwardRef<UploaderActions, UploaderProps>(\r\n  ({onUploadStart, onCancel, onCreate}, ref) => {\r\n    const userArtist = usePrimaryArtistForCurrentUser();\r\n    const now = useCurrentDateTime();\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const form = useForm<CreateAlbumPayload>({\r\n      defaultValues: {\r\n        tracks: [],\r\n        artists: userArtist ? [userArtist] : [],\r\n        release_date: now.toAbsoluteString(),\r\n      },\r\n    });\r\n    const tracks = form.watch('tracks') || [];\r\n\r\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\r\n    const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\r\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\r\n      onUploadStart: data => {\r\n        setIsVisible(true);\r\n        form.setValue('tracks', [...form.getValues('tracks'), data]);\r\n        onUploadStart();\r\n      },\r\n      onMetadataChange: (file, newData) => {\r\n        hydrateAlbumForm(form, newData);\r\n        form.setValue(\r\n          'tracks',\r\n          form.getValues('tracks').map(track => {\r\n            return track.uploadId === file.id\r\n              ? mergeTrackFormValues(newData, track)\r\n              : track;\r\n          }),\r\n        );\r\n      },\r\n    });\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        openFilePicker,\r\n        uploadTracks,\r\n        validateUploads,\r\n      }),\r\n      [openFilePicker, uploadTracks, validateUploads],\r\n    );\r\n\r\n    const createAlbum = useCreateAlbum(form);\r\n    return isVisible ? (\r\n      <Form\r\n        className=\"rounded border p-14 md:p-24 mb-30 bg-background\"\r\n        form={form}\r\n        onSubmit={newValues =>\r\n          createAlbum.mutate(newValues, {\r\n            onSuccess: response => {\r\n              setIsVisible(false);\r\n              form.reset();\r\n              onCreate(response.album);\r\n            },\r\n          })\r\n        }\r\n      >\r\n        <AlbumForm showExternalIdFields={false} />\r\n        <div className=\"mt-24\">\r\n          <Button\r\n            variant=\"text\"\r\n            onClick={() => {\r\n              tracks.forEach(track => {\r\n                abortUpload(track.uploadId);\r\n              });\r\n              form.reset();\r\n              setIsVisible(false);\r\n              onCancel();\r\n            }}\r\n            className=\"mr-10\"\r\n          >\r\n            <Trans message=\"Cancel\" />\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            disabled={uploadIsInProgress || createAlbum.isPending}\r\n          >\r\n            <Trans message=\"Save\" />\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    ) : null;\r\n  },\r\n);\r\n","import {\r\n  forwardRef,\r\n  memo,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useState,\r\n} from 'react';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {\r\n  TrackUploadPayload,\r\n  useTrackUploader,\r\n} from '@app/web-player/backstage/upload-page/use-track-uploader';\r\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\r\nimport {\r\n  UploaderActions,\r\n  UploaderProps,\r\n} from '@app/web-player/backstage/upload-page/upload-page';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useCreateTrack} from '@app/admin/tracks-datatable-page/requests/use-create-track';\r\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\r\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\r\n\r\nexport const TracksUploader = forwardRef<UploaderActions, UploaderProps>(\r\n  ({onUploadStart, onCancel, onCreate}, ref) => {\r\n    const userArtist = usePrimaryArtistForCurrentUser();\r\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\r\n    const [tracks, setTracks] = useState<TrackUploadPayload[]>([]);\r\n\r\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\r\n      onUploadStart: data => {\r\n        setTracks(prev => {\r\n          if (userArtist) {\r\n            return [...prev, {...data, artists: [userArtist]}];\r\n          }\r\n          return [...prev, data];\r\n        });\r\n        onUploadStart();\r\n      },\r\n      onMetadataChange: (file, newData) => {\r\n        setTracks(allTracks => {\r\n          return allTracks.map(track => {\r\n            return track.uploadId === file.id\r\n              ? mergeTrackFormValues(newData, track)\r\n              : track;\r\n          });\r\n        });\r\n      },\r\n    });\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        openFilePicker,\r\n        uploadTracks,\r\n        validateUploads,\r\n      }),\r\n      [openFilePicker, uploadTracks, validateUploads],\r\n    );\r\n\r\n    return (\r\n      <div className=\"w-full\">\r\n        {tracks.map(track => (\r\n          <TrackUploadItem\r\n            key={track.uploadId}\r\n            track={track}\r\n            onCreate={createdTrack => {\r\n              // hide upload form for this track\r\n              setTracks(prev =>\r\n                prev.filter(t => t.uploadId !== track.uploadId),\r\n              );\r\n              onCreate(createdTrack);\r\n            }}\r\n            onRemove={() => {\r\n              setTracks(prev => {\r\n                const newTracks = prev.filter(\r\n                  t => t.uploadId !== track.uploadId,\r\n                );\r\n                // only invoke \"onCancel\" if every uploaded track has been removed, so upload mode can be unlocked\r\n                if (!newTracks.length) {\r\n                  onCancel();\r\n                }\r\n                return newTracks;\r\n              });\r\n              abortUpload(track.uploadId);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface TrackUploadItemProps {\r\n  track: TrackUploadPayload;\r\n  onRemove: () => void;\r\n  onCreate: (track: Track) => void;\r\n}\r\nconst TrackUploadItem = memo(\r\n  ({track, onRemove, onCreate}: TrackUploadItemProps) => {\r\n    const form = useForm<TrackUploadPayload>({\r\n      defaultValues: track,\r\n    });\r\n    const createTrack = useCreateTrack(form);\r\n    const activeUpload = useFileUploadStore(s =>\r\n      s.fileUploads.get(track.uploadId),\r\n    );\r\n    const {isUploading, status} = useTrackUpload(track.uploadId);\r\n\r\n    useEffect(() => {\r\n      form.reset(track);\r\n    }, [track, form]);\r\n\r\n    const uploadProgress =\r\n      isUploading && activeUpload ? (\r\n        <TrackUploadProgress fileUpload={activeUpload} status={status} />\r\n      ) : null;\r\n\r\n    return (\r\n      <Form\r\n        form={form}\r\n        onSubmit={values => {\r\n          createTrack.mutate(values, {\r\n            onSuccess: response => onCreate(response.track),\r\n          });\r\n        }}\r\n        className=\"rounded border p-14 md:p-24 mb-30 bg-background\"\r\n      >\r\n        <TrackForm uploadButton={uploadProgress} showExternalIdFields={false} />\r\n        <Button variant=\"text\" onClick={() => onRemove()} className=\"mr-10\">\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={createTrack.isPending || !form.watch('src')}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </Form>\r\n    );\r\n  },\r\n);\r\n","export default \"__VITE_ASSET__19ef062e__\"","import {Track} from '@app/web-player/tracks/track';\r\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Link} from 'react-router-dom';\r\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\r\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\r\nimport {LinkStyle} from '@common/ui/buttons/external-link';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport clsx from 'clsx';\r\nimport albumBorderImage from './album-border.png';\r\nimport {ShareMediaButtons} from '@app/web-player/sharing/share-media-buttons';\r\n\r\ninterface UploadedMediaPreviewProps {\r\n  media: Track | Album;\r\n}\r\nexport function UploadedMediaPreview({media}: UploadedMediaPreviewProps) {\r\n  const isAlbum = media.model_type === ALBUM_MODEL;\r\n  const absoluteLink = isAlbum\r\n    ? getAlbumLink(media, {absolute: true})\r\n    : getTrackLink(media, {absolute: true});\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-28 border rounded bg-background p-20 my-20 mx-auto w-780 max-w-full\">\r\n      <div className={clsx(isAlbum && 'relative isolate my-14 mx-18')}>\r\n        {isAlbum ? (\r\n          <AlbumImage\r\n            album={media}\r\n            className=\"rounded flex-shrink-0 z-20 relative\"\r\n            size=\"w-132 h-132\"\r\n          />\r\n        ) : (\r\n          <TrackImage\r\n            track={media}\r\n            className=\"rounded flex-shrink-0 z-20 relative\"\r\n            size=\"w-132 h-132\"\r\n          />\r\n        )}\r\n        {isAlbum && (\r\n          <img\r\n            className=\"absolute block w-160 h-160 max-w-160 -top-14 -left-14 z-10\"\r\n            src={albumBorderImage}\r\n            alt=\"\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"flex-auto\">\r\n        <div className=\"text-base font-bold\">{media.name}</div>\r\n        <div className=\"text-muted text-sm mb-14\">\r\n          <ArtistLinks artists={media.artists} />\r\n        </div>\r\n        {media.genres?.length ? (\r\n          <ChipList selectable={false} size=\"sm\" className=\"mb-14\">\r\n            {media.genres?.map(genre => {\r\n              return (\r\n                <Chip key={genre.id}>{genre.display_name || genre.name}</Chip>\r\n              );\r\n            })}\r\n          </ChipList>\r\n        ) : null}\r\n        <div className=\"text-sm\">\r\n          <Trans\r\n            message=\"Upload complete. <a>Go to your track</a>\"\r\n            values={{\r\n              a: parts => (\r\n                <Link\r\n                  className={LinkStyle}\r\n                  to={isAlbum ? getAlbumLink(media) : getTrackLink(media)}\r\n                >\r\n                  {parts}\r\n                </Link>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"ml-auto flex-auto max-w-300\">\r\n        <div className=\"text-muted text-sm\">\r\n          <Trans message=\"Share your new track\" />\r\n          <ShareMediaButtons\r\n            name={media.name}\r\n            image={media.image}\r\n            link={absoluteLink}\r\n          />\r\n          <TextField\r\n            value={absoluteLink}\r\n            readOnly\r\n            className=\"mt-24 w-full\"\r\n            size=\"sm\"\r\n            onClick={e => {\r\n              (e.target as HTMLInputElement).select();\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\ninterface DropTargetMaskProps {\r\n  isVisible: boolean;\r\n}\r\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\r\n  const mask = (\r\n    <m.div\r\n      key=\"dragTargetMask\"\r\n      {...opacityAnimation}\r\n      transition={{duration: 0.3}}\r\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\r\n    >\r\n      <m.div\r\n        initial={{y: '100%', opacity: 0}}\r\n        animate={{y: '-10px', opacity: 1}}\r\n        exit={{y: '100%', opacity: 0}}\r\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\r\n      >\r\n        <Trans message=\"Drop your files anywhere on the page to upload\" />\r\n      </m.div>\r\n    </m.div>\r\n  );\r\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\ninterface Response extends BackendResponse {\r\n  minutesLeft: number | null;\r\n}\r\n\r\nexport function resetMinutesLimitQuery() {\r\n  const {user} = getBootstrapData();\r\n  if (user?.id) {\r\n    queryClient.resetQueries({queryKey: ['minutesLimit', user.id]});\r\n  }\r\n}\r\n\r\nexport function useUserMinutesLimit() {\r\n  const {user} = useAuth();\r\n  const userId = user?.id!;\r\n  return useQuery({\r\n    queryKey: ['minutesLimit', userId],\r\n    queryFn: () => fetchLimit(userId),\r\n    enabled: userId != null,\r\n  });\r\n}\r\n\r\nfunction fetchLimit(userId: number): Promise<Response> {\r\n  return apiClient\r\n    .get(`users/${userId}/minutes-left`)\r\n    .then(response => response.data);\r\n}\r\n","import {Footer} from '@common/ui/footer/footer';\r\nimport lightBgImage from './images/light-bg.svg';\r\nimport darkBgImage from './images/dark-bg.svg';\r\nimport {useIsDarkMode} from '@common/ui/themes/use-is-dark-mode';\r\nimport {ComponentPropsWithoutRef, ReactNode} from 'react';\r\n\r\nimport {PlayerNavbarLayout} from '@app/web-player/layout/player-navbar-layout';\r\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\r\nimport {SidedavFrontend} from '@app/web-player/layout/sidenav-frontend';\r\nimport {Sidenav} from '@app/web-player/layout/sidenav';\r\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\ninterface Props extends ComponentPropsWithoutRef<'div'> {\r\n  children: ReactNode;\r\n}\r\nexport function BackstageLayout({children, ...domProps}: Props) {\r\n  const isDarkMode = useIsDarkMode();\r\n  const {player} = useSettings();\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col\" {...domProps}>\r\n      <DashboardLayout\r\n        name=\"web-player\"\r\n        initialRightSidenavStatus={player?.hide_queue ? 'closed' : 'open'}\r\n      >\r\n        <PlayerNavbarLayout\r\n          size=\"sm\"\r\n          menuPosition=\"pricing-table-page\"\r\n          className=\"flex-shrink-0\"\r\n        />\r\n        <SidedavFrontend position=\"left\" display=\"block\">\r\n          <Sidenav />\r\n        </SidedavFrontend>\r\n        <DashboardContent>\r\n          <div\r\n            className=\"relative flex-auto overflow-y-auto\"\r\n          >\r\n            <div className=\"container mx-auto flex min-h-full flex-col p-14 md:p-24\">\r\n              <div className=\"flex-auto\">{children}</div>\r\n            </div>\r\n          </div>\r\n        </DashboardContent>\r\n      </DashboardLayout>\r\n    </div>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Switch} from '@common/ui/forms/toggle/switch';\r\nimport {ComponentPropsWithoutRef, ReactNode, useRef, useState} from 'react';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Link} from 'react-router-dom';\r\nimport {LinkStyle} from '@common/ui/buttons/external-link';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {AlbumUploader} from '@app/web-player/backstage/upload-page/album-uploader';\r\nimport {TracksUploader} from '@app/web-player/backstage/upload-page/tracks-uploader';\r\nimport {UploadedMediaPreview} from '@app/web-player/backstage/upload-page/uploaded-media-preview';\r\nimport {\r\n  NativeFileDraggable,\r\n  useDroppable,\r\n} from '@common/ui/interactions/dnd/use-droppable';\r\nimport {DropTargetMask} from '@app/web-player/backstage/upload-page/drop-tarket-mask';\r\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\r\nimport {\r\n  resetMinutesLimitQuery,\r\n  useUserMinutesLimit,\r\n} from '@app/web-player/backstage/upload-page/use-user-minutes-limit';\r\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\r\n\r\ntype UploadMode = 'album' | 'tracks';\r\n\r\nexport interface UploaderProps {\r\n  onUploadStart: () => void;\r\n  onCancel: () => void;\r\n  onCreate: (item: Track | Album) => void;\r\n}\r\n\r\nexport type UploaderActions = ReturnType<typeof useTrackUploader>;\r\n\r\ninterface Props {\r\n  backstageLayout?: boolean;\r\n}\r\nexport function UploadPage({backstageLayout = true}: Props) {\r\n  return (\r\n    <FileUploadProvider>\r\n      <Content backstageLayout={backstageLayout} />\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n\r\nfunction Content({backstageLayout}: Props) {\r\n  const [uploadMode, setUploadMode] = useState<UploadMode>('tracks');\r\n  const [modeIsLocked, setModeIsLocked] = useState(false);\r\n\r\n  const uploaderRef = useRef<UploaderActions>(null);\r\n  const Uploader = uploadMode === 'tracks' ? TracksUploader : AlbumUploader;\r\n\r\n  const [createdItems, setCreatedItems] = useState<(Album | Track)[]>([]);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const {droppableProps} = useDroppable({\r\n    id: 'uploadPageRoot',\r\n    ref,\r\n    types: ['nativeFile'],\r\n    onDragEnter: () => setIsDragOver(true),\r\n    onDragLeave: () => setIsDragOver(false),\r\n    onDrop: async draggable => {\r\n      if (draggable.type === 'nativeFile') {\r\n        const files = await (draggable as NativeFileDraggable).getData();\r\n        const validFiles = uploaderRef.current?.validateUploads(files);\r\n        if (validFiles?.length) {\r\n          uploaderRef.current?.uploadTracks(validFiles);\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  const Wrapper = backstageLayout ? BackstageLayout : DefaultWrapper;\r\n\r\n  return (\r\n    <Wrapper {...droppableProps}>\r\n      {!modeIsLocked && (\r\n        <UploadPanel\r\n          onUpload={() => uploaderRef.current?.openFilePicker()}\r\n          uploadMode={uploadMode}\r\n          onUploadModeChange={setUploadMode}\r\n        />\r\n      )}\r\n      {createdItems.map(item => (\r\n        <UploadedMediaPreview key={item.id} media={item} />\r\n      ))}\r\n      <Uploader\r\n        ref={uploaderRef}\r\n        onUploadStart={() => setModeIsLocked(true)}\r\n        onCreate={item => {\r\n          setCreatedItems(prev => [...prev, item]);\r\n          resetMinutesLimitQuery();\r\n        }}\r\n        onCancel={() => {\r\n          setModeIsLocked(false);\r\n        }}\r\n      />\r\n      <DropTargetMask isVisible={isDragOver} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\ninterface UploadPanelProps {\r\n  onUpload: () => void;\r\n  uploadMode: UploadMode;\r\n  onUploadModeChange: (newMode: UploadMode) => void;\r\n}\r\nfunction UploadPanel({\r\n  onUpload,\r\n  uploadMode,\r\n  onUploadModeChange,\r\n}: UploadPanelProps) {\r\n  const {data} = useUserMinutesLimit();\r\n  return (\r\n    <div className=\"pt-40\">\r\n      <div className=\"border rounded p-20 md:p-48 flex flex-col items-center max-w-580 mx-auto bg-background\">\r\n        <h1 className=\"text-base md:text-[22px] md:font-light\">\r\n          <Trans message=\"Drag and drop your tracks, videos & albums here.\" />\r\n        </h1>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          className=\"mt-20 w-min\"\r\n          onClick={() => onUpload()}\r\n        >\r\n          <Trans message=\"Or choose files to upload\" />\r\n        </Button>\r\n        <div className=\"border-t pt-20 mt-20\">\r\n          <Switch\r\n            checked={uploadMode === 'album'}\r\n            onChange={e =>\r\n              onUploadModeChange(e.target.checked ? 'album' : 'tracks')\r\n            }\r\n          >\r\n            <Trans message=\"Make an album when multiple files are selected\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-muted mt-20 text-sm text-center min-h-20\">\r\n        {data?.minutesLeft != null && (\r\n          <Trans\r\n            message=\"You have :count minutes left. Try <a>Pro accounts</a> to get more time and access to advanced features.\"\r\n            values={{\r\n              count: data.minutesLeft,\r\n              a: parts => (\r\n                <Link className={LinkStyle} to=\"/pricing\">\r\n                  {parts}\r\n                </Link>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface DefaultWrapperProps extends ComponentPropsWithoutRef<'div'> {\r\n  children: ReactNode;\r\n}\r\nfunction DefaultWrapper({children, ...domProps}: DefaultWrapperProps) {\r\n  return (\r\n    <div {...domProps} className=\"min-h-full relative\">\r\n      <div className=\"container mx-auto p-14 md:p-24\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport React, {useEffect} from 'react';\r\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\r\nimport {\r\n  CreateAlbumPayload,\r\n  useCreateAlbum,\r\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useLocation, useSearchParams} from 'react-router-dom';\r\nimport {useNormalizedModel} from '@common/users/queries/use-normalized-model';\r\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\r\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\r\nimport {\r\n  FileUploadProvider,\r\n  useFileUploadStore,\r\n} from '@common/uploads/uploader/file-upload-provider';\r\n\r\ninterface Props {\r\n  wrapInContainer?: boolean;\r\n}\r\nexport function CreateAlbumPage({wrapInContainer}: Props) {\r\n  return (\r\n    <FileUploadProvider>\r\n      <PageContent wrapInContainer={wrapInContainer} />\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n\r\nfunction PageContent({wrapInContainer}: Props) {\r\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\r\n  const now = useCurrentDateTime();\r\n  const navigate = useNavigate();\r\n  const {pathname} = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n  const {data} = useNormalizedModel(\r\n    `normalized-models/artist/${searchParams.get('artistId')}`,\r\n    undefined,\r\n    {enabled: !!searchParams.get('artistId')},\r\n  );\r\n  const artist = data?.model;\r\n  const form = useForm<CreateAlbumPayload>({\r\n    defaultValues: {\r\n      release_date: now.toAbsoluteString(),\r\n    },\r\n  });\r\n  const createAlbum = useCreateAlbum(form);\r\n\r\n  useEffect(() => {\r\n    if (artist) {\r\n      form.reset({\r\n        artists: [artist],\r\n      });\r\n    }\r\n  }, [artist, form]);\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        createAlbum.mutate(values, {\r\n          onSuccess: response => {\r\n            if (pathname.includes('admin')) {\r\n              if (artist) {\r\n                navigate(`/admin/artists/${artist.id}/edit`);\r\n              } else {\r\n                navigate('/admin/albums');\r\n              }\r\n            } else {\r\n              navigate(getAlbumLink(response.album));\r\n            }\r\n          },\r\n        });\r\n      }}\r\n      title={<Trans message=\"Add new album\" />}\r\n      isLoading={createAlbum.isPending || uploadIsInProgress}\r\n      disableSaveWhenNotDirty\r\n      wrapInContainer={wrapInContainer}\r\n    >\r\n      <AlbumForm showExternalIdFields />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useParams} from 'react-router-dom';\r\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\r\n\r\ninterface Response extends BackendResponse {\r\n  request: BackstageRequest;\r\n}\r\n\r\nexport function useBackstageRequest() {\r\n  const {requestId} = useParams();\r\n  return useQuery({\r\n    queryKey: ['backstage-request', +requestId!],\r\n    queryFn: () => fetchBackstageRequest(requestId!),\r\n  });\r\n}\r\n\r\nfunction fetchBackstageRequest(trackId: number | string) {\r\n  return apiClient\r\n    .get<Response>(`backstage-request/${trackId}`)\r\n    .then(response => response.data);\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DocumentScannerIcon = createSvgIcon(\r\n  <path d=\"M7 3H4v3H2V1h5v2zm15 3V1h-5v2h3v3h2zM7 21H4v-3H2v5h5v-2zm13-3v3h-3v2h5v-5h-2zM17 6H7v12h10V6zm2 12c0 1.1-.9 2-2 2H7c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v12zM15 8H9v2h6V8zm0 3H9v2h6v-2zm0 3H9v2h6v-2z\" />\r\n, 'DocumentScannerOutlined');\r\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\r\n\r\nexport const InfoDialogTriggerIcon = createSvgIcon(\r\n  <path d=\"M9 8a1 1 0 0 0-1-1H5.5a1 1 0 1 0 0 2H7v4a1 1 0 0 0 2 0zM4 0h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4zm4 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />,\r\n  'InfoDialogTrigger'\r\n);\r\n","import {useFormContext} from 'react-hook-form';\r\nimport React from 'react';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\nimport {EditIcon} from '@common/icons/material/Edit';\r\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {Link} from 'react-router-dom';\r\nimport {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {AlbumLink} from '@app/web-player/albums/album-link';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {Table} from '@common/ui/tables/table';\r\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\r\nimport {UpdateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-update-artist';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {useDeleteAlbum} from '@app/web-player/albums/requests/use-delete-album';\r\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\r\n\r\nconst Columns: ColumnConfig<Album>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Name\" />,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3',\r\n    body: album => (\r\n      <div className=\"flex items-center gap-12\">\r\n        <AlbumImage\r\n          album={album}\r\n          className=\"flex-shrink-0\"\r\n          size=\"w-34 h-34 rounded\"\r\n        />\r\n        <AlbumLink album={album} target=\"_blank\" />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    key: 'release_date',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Release date\" />,\r\n    body: album =>\r\n      album.release_date ? <FormattedDate date={album.release_date} /> : null,\r\n  },\r\n  {\r\n    key: 'track_count',\r\n    allowsSorting: false,\r\n    header: () => <Trans message=\"Track count\" />,\r\n    body: album =>\r\n      album.tracks_count ? (\r\n        <FormattedNumber value={album.tracks_count} />\r\n      ) : null,\r\n  },\r\n  {\r\n    key: 'plays',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Plays\" />,\r\n    body: album =>\r\n      album.plays ? <FormattedNumber value={album.plays} /> : null,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    width: 'w-84 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    hideHeader: true,\r\n    align: 'end',\r\n    body: album => <RowActions album={album} />,\r\n  },\r\n];\r\n\r\ninterface Props {\r\n  albums?: Album[];\r\n}\r\nexport function ArtistAlbumsTable({albums = []}: Props) {\r\n  const {watch} = useFormContext<UpdateArtistPayload>();\r\n  const artistId = watch('id');\r\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(albums);\r\n  return (\r\n    <div>\r\n      <div className=\"my-24\">\r\n        <div className=\"flex items-center gap-12\">\r\n          <h2 className=\"text-xl font-semibold\">\r\n            <Trans message=\"Albums\" />\r\n          </h2>\r\n          <Button\r\n            variant=\"outline\"\r\n            color=\"primary\"\r\n            size=\"xs\"\r\n            className=\"ml-auto\"\r\n            startIcon={<AddIcon />}\r\n            elementType={artistId ? Link : undefined}\r\n            to={`../../../albums/new?artistId=${artistId}`}\r\n            relative=\"path\"\r\n            disabled={!artistId}\r\n          >\r\n            <Trans message=\"Add album\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {!artistId && (\r\n          <div className=\"flex items-center gap-6 text-sm\">\r\n            <InfoDialogTriggerIcon\r\n              viewBox=\"0 0 16 16\"\r\n              size=\"xs\"\r\n              className=\"text-muted\"\r\n            />\r\n            <Trans message=\"Save changes to enable album creation.\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Table\r\n        columns={Columns}\r\n        data={albums}\r\n        sortDescriptor={sortDescriptor}\r\n        onSortChange={onSortChange}\r\n        enableSelection={false}\r\n      />\r\n\r\n      {!data.length ? (\r\n        <IllustratedMessage\r\n          className=\"mt-40\"\r\n          image={<SvgImage src={musicImage} />}\r\n          title={<Trans message=\"This artist does not have any albums yet\" />}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface RowActionsProps {\r\n  album: Album;\r\n}\r\nfunction RowActions({album}: RowActionsProps) {\r\n  const deleteAlbum = useDeleteAlbum();\r\n  return (\r\n    <div className=\"text-muted\">\r\n      <Link to={`../../../albums/${album.id}/edit`} relative=\"path\">\r\n        <IconButton size=\"md\">\r\n          <EditIcon />\r\n        </IconButton>\r\n      </Link>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        onClose={isConfirmed => {\r\n          if (isConfirmed) {\r\n            deleteAlbum.mutate({albumId: album.id});\r\n          }\r\n        }}\r\n      >\r\n        <IconButton size=\"md\" disabled={deleteAlbum.isPending}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <ConfirmationDialog\r\n          isDanger\r\n          title={<Trans message=\"Delete album\" />}\r\n          body={<Trans message=\"Are you sure you want to delete this album?\" />}\r\n          confirm={<Trans message=\"Delete\" />}\r\n        />\r\n      </DialogTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\r\nimport {ArtistAlbumsTable} from '@app/admin/artist-datatable-page/artist-form/artist-albums-table';\r\nimport {Album} from '@app/web-player/albums/album';\r\nimport {TabList} from '@common/ui/tabs/tab-list';\r\nimport {Tab} from '@common/ui/tabs/tab';\r\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\r\nimport {Tabs} from '@common/ui/tabs/tabs';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\r\nimport {ProfileLinksForm} from '@app/admin/artist-datatable-page/artist-form/profile-links-form';\r\n\r\ninterface Props {\r\n  albums?: Album[];\r\n  showExternalFields?: boolean;\r\n}\r\nexport function CrupdateArtistForm({albums, showExternalFields}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <FileUploadProvider>\r\n      <div className=\"md:flex gap-24\">\r\n        <div className=\"flex-shrink-0\">\r\n          <FormImageSelector\r\n            name=\"image_small\"\r\n            diskPrefix=\"artist_images\"\r\n            label={isMobile ? <Trans message=\"Image\" /> : null}\r\n            variant={isMobile ? 'input' : 'square'}\r\n            previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\r\n            stretchPreview\r\n          />\r\n          {showExternalFields && (\r\n            <FormSwitch name=\"verified\" className=\"mt-14\">\r\n              <Trans message=\"Verified\" />\r\n            </FormSwitch>\r\n          )}\r\n        </div>\r\n        <div className=\"flex-auto mt-24 md:mt-0\">\r\n          <Tabs isLazy>\r\n            <TabList>\r\n              <Tab>\r\n                <Trans message=\"Details\" />\r\n              </Tab>\r\n              <Tab>\r\n                <Trans message=\"Links\" />\r\n              </Tab>\r\n              <Tab>\r\n                <Trans message=\"Biography\" />\r\n              </Tab>\r\n              <Tab>\r\n                <Trans message=\"Images\" />\r\n              </Tab>\r\n            </TabList>\r\n            <TabPanels className=\"pt-20\">\r\n              <TabPanel>\r\n                <DetailsPanel showExternalFields={showExternalFields} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <ProfileLinksForm />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <BiographyPanel />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <ImagesPanel />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n      <ArtistAlbumsTable albums={albums} />\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n\r\ninterface DetailsPanelProps {\r\n  showExternalFields?: boolean;\r\n}\r\nfunction DetailsPanel({showExternalFields}: DetailsPanelProps) {\r\n  const {trans} = useTrans();\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        name=\"name\"\r\n        label={<Trans message=\"Name\" />}\r\n        className=\"mb-24\"\r\n        required\r\n        autoFocus\r\n        disabled={!showExternalFields}\r\n      />\r\n      <FormNormalizedModelChipField\r\n        label={<Trans message=\"Genres\" />}\r\n        placeholder={trans(message('+Add genre'))}\r\n        model={GENRE_MODEL}\r\n        name=\"genres\"\r\n        allowCustomValue\r\n        className=\"mb-24\"\r\n      />\r\n      {showExternalFields && <SpotifyIdField />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction BiographyPanel() {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        name=\"profile.country\"\r\n        label={<Trans message=\"Country\" />}\r\n        className=\"mb-24\"\r\n      />\r\n      <FormTextField\r\n        name=\"profile.city\"\r\n        label={<Trans message=\"City\" />}\r\n        className=\"mb-24\"\r\n      />\r\n      <FormTextField\r\n        inputElementType=\"textarea\"\r\n        rows={5}\r\n        name=\"profile.description\"\r\n        label={<Trans message=\"Description\" />}\r\n        className=\"mb-24\"\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction ImagesPanel() {\r\n  const {fields, append, remove} = useFieldArray<CreateArtistPayload>({\r\n    name: 'profile_images',\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex gap-12 flex-wrap mb-24\">\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <FormImageSelector\r\n              key={field.id}\r\n              name={`profile_images.${index}.url`}\r\n              diskPrefix=\"artist_images\"\r\n              variant=\"square\"\r\n              previewSize=\"w-160 h-160\"\r\n              stretchPreview\r\n              showRemoveButton\r\n              onChange={value => {\r\n                if (!value) {\r\n                  remove(index);\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          append({url: ''});\r\n        }}\r\n      >\r\n        <Trans message=\"Add another image\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SpotifyIdField() {\r\n  const {spotify_is_setup} = useSettings();\r\n  if (!spotify_is_setup) {\r\n    return null;\r\n  }\r\n  return (\r\n    <FormTextField\r\n      name=\"spotify_id\"\r\n      label={<Trans message=\"Spotify ID\" />}\r\n      className=\"mb-24\"\r\n      minLength={22}\r\n      maxLength={22}\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\r\n\r\ninterface Response extends BackendResponse {\r\n  artist: Artist;\r\n}\r\n\r\nexport interface UpdateArtistPayload extends CreateArtistPayload {\r\n  id: number;\r\n}\r\n\r\nconst Endpoint = (id: number) => `artists/${id}`;\r\n\r\nexport function useUpdateArtist(form: UseFormReturn<UpdateArtistPayload>) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const {pathname} = useLocation();\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateArtistPayload) => updateAlbum(payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Artist updated')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('artists'),\r\n      });\r\n      if (pathname.includes('admin')) {\r\n        navigate('/admin/artists');\r\n      } else {\r\n        navigate(getArtistLink(response.artist));\r\n      }\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateAlbum({id, ...payload}: UpdateArtistPayload): Promise<Response> {\r\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport React from 'react';\r\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {\r\n  useArtist,\r\n  UseArtistResponse,\r\n} from '@app/web-player/artists/requests/use-artist';\r\nimport {\r\n  UpdateArtistPayload,\r\n  useUpdateArtist,\r\n} from '@app/admin/artist-datatable-page/requests/use-update-artist';\r\nimport {CrupdateArtistForm} from '@app/admin/artist-datatable-page/artist-form/crupdate-artist-form';\r\nimport {useArtistPermissions} from '@app/web-player/artists/use-artist-permissions';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\ninterface Props {\r\n  wrapInContainer?: boolean;\r\n  showExternalFields?: boolean;\r\n}\r\nexport function UpdateArtistPage({wrapInContainer, showExternalFields}: Props) {\r\n  const query = useArtist({\r\n    loader: 'editArtistPage',\r\n  });\r\n\r\n  if (query.data) {\r\n    return (\r\n      <PageContent\r\n        response={query.data}\r\n        wrapInContainer={wrapInContainer}\r\n        showExternalFields={showExternalFields}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\r\n}\r\n\r\ninterface PageContentProps {\r\n  response: UseArtistResponse;\r\n  wrapInContainer?: boolean;\r\n  showExternalFields?: boolean;\r\n}\r\nfunction PageContent({\r\n  response,\r\n  wrapInContainer,\r\n  showExternalFields,\r\n}: PageContentProps) {\r\n  const {canEdit} = useArtistPermissions(response.artist);\r\n  const form = useForm<UpdateArtistPayload>({\r\n    defaultValues: {\r\n      id: response.artist.id,\r\n      name: response.artist.name,\r\n      verified: response.artist.verified,\r\n      spotify_id: response.artist.spotify_id,\r\n      genres: response.artist.genres,\r\n      image_small: response.artist.image_small,\r\n      links: response.artist.links,\r\n      profile: response.artist.profile,\r\n      profile_images: response.artist.profile_images,\r\n    },\r\n  });\r\n  const updateArtist = useUpdateArtist(form);\r\n\r\n  if (!canEdit) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        updateArtist.mutate(values);\r\n      }}\r\n      title={\r\n        <Trans\r\n          message=\"Edit “:name“ artist\"\r\n          values={{name: response.artist.name}}\r\n        />\r\n      }\r\n      isLoading={updateArtist.isPending}\r\n      disableSaveWhenNotDirty\r\n      wrapInContainer={wrapInContainer}\r\n    >\r\n      <CrupdateArtistForm\r\n        albums={response.albums?.data}\r\n        showExternalFields={showExternalFields}\r\n      />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {useDateRangePickerState} from '@common/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\r\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\r\nimport {DateRangeDialog} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\r\nimport React from 'react';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\r\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\r\nimport {Granularity} from '@common/ui/forms/input-field/date/date-picker/use-date-picker-state';\r\n\r\nconst monthDayFormat: Intl.DateTimeFormatOptions = {\r\n  month: 'short',\r\n  day: '2-digit',\r\n};\r\n\r\ninterface ReportDataSelectorProps {\r\n  value: DateRangeValue;\r\n  disabled?: boolean;\r\n  onChange: (value: DateRangeValue) => void;\r\n  compactOnMobile?: boolean;\r\n  enableCompare?: boolean;\r\n  granularity?: Granularity;\r\n}\r\nexport function ReportDateSelector({\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  compactOnMobile = true,\r\n  enableCompare = false,\r\n  granularity = 'minute',\r\n}: ReportDataSelectorProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"popover\"\r\n      onClose={value => {\r\n        if (value) {\r\n          onChange(value);\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"chip\"\r\n        endIcon={<DateRangeIcon />}\r\n        disabled={disabled}\r\n      >\r\n        <FormattedDateTimeRange\r\n          start={value.start}\r\n          end={value.end}\r\n          options={\r\n            isMobile && compactOnMobile\r\n              ? monthDayFormat\r\n              : DateFormatPresets.short\r\n          }\r\n        />\r\n      </Button>\r\n      <DateSelectorDialog\r\n        value={value}\r\n        enableCompare={enableCompare}\r\n        granularity={granularity}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface DateSelectorDialogProps {\r\n  value: DateRangeValue;\r\n  enableCompare: boolean;\r\n  granularity: Granularity;\r\n}\r\nfunction DateSelectorDialog({\r\n  value,\r\n  enableCompare,\r\n  granularity,\r\n}: DateSelectorDialogProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const state = useDateRangePickerState({\r\n    granularity,\r\n    defaultValue: {\r\n      start: value.start,\r\n      end: value.end,\r\n      preset: value.preset,\r\n    },\r\n    closeDialogOnSelection: false,\r\n  });\r\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\r\n  const compareState = useDateRangePickerState({\r\n    granularity,\r\n    defaultValue: compareHasInitialValue\r\n      ? {\r\n          start: value.compareStart,\r\n          end: value.compareEnd,\r\n          preset: value.comparePreset,\r\n        }\r\n      : DateRangeComparePresets[0].getRangeValue(state.selectedValue),\r\n  });\r\n  return (\r\n    <DateRangeDialog\r\n      state={state}\r\n      compareState={enableCompare ? compareState : undefined}\r\n      compareVisibleDefault={compareHasInitialValue}\r\n      showInlineDatePickerField={!isMobile}\r\n    />\r\n  );\r\n}\r\n","import {ReactNode, Ref} from 'react';\r\nimport clsx from 'clsx';\r\n\r\nexport interface ChartLayoutProps {\r\n  title: ReactNode;\r\n  description?: ReactNode;\r\n  className?: string;\r\n  children: ReactNode;\r\n  contentIsFlex?: boolean;\r\n  contentClassName?: string;\r\n  minHeight?: string;\r\n  contentRef?: Ref<HTMLDivElement>;\r\n  isLoading?: boolean;\r\n}\r\nexport function ChartLayout(props: ChartLayoutProps) {\r\n  const {\r\n    title,\r\n    description,\r\n    children,\r\n    className,\r\n    contentIsFlex = true,\r\n    contentClassName,\r\n    contentRef,\r\n    minHeight = 'min-h-440',\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'rounded-panel flex h-full flex-auto flex-col border bg',\r\n        minHeight,\r\n        className,\r\n      )}\r\n    >\r\n      <div className=\"flex flex-shrink-0 items-center justify-between p-14 text-xs\">\r\n        <div className=\"text-sm font-semibold\">{title}</div>\r\n        {description && <div className=\"text-muted\">{description}</div>}\r\n      </div>\r\n      <div\r\n        ref={contentRef}\r\n        className={clsx(\r\n          'relative p-14',\r\n          contentIsFlex && 'flex flex-auto items-center justify-center',\r\n          contentClassName,\r\n        )}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {ProgressCircle} from '@common/ui/progress/progress-circle';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function ChartLoadingIndicator() {\r\n  return (\r\n    <div className=\"flex items-center gap-10 text-sm absolute mx-auto\">\r\n      <ProgressCircle isIndeterminate size=\"sm\" />\r\n      <Trans message=\"Chart loading\" />\r\n    </div>\r\n  );\r\n}\r\n","import type {ChartData, ChartOptions, ChartType} from 'chart.js';\r\nimport {lazy, Suspense} from 'react';\r\nimport {ChartLayout, ChartLayoutProps} from './chart-layout';\r\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\r\n\r\nconst LazyChart = lazy(() => import('./lazy-chart'));\r\n\r\nexport interface BaseChartProps<Type extends ChartType = ChartType>\r\n  extends Omit<ChartLayoutProps, 'children'> {\r\n  type: Type;\r\n  data: ChartData<Type, unknown>;\r\n  options?: ChartOptions<Type>;\r\n  hideLegend?: boolean;\r\n}\r\nexport function BaseChart<Type extends ChartType = ChartType>(\r\n  props: BaseChartProps<Type>\r\n) {\r\n  const {title, description, className, contentRef, isLoading} = props;\r\n\r\n  return (\r\n    <ChartLayout\r\n      title={title}\r\n      description={description}\r\n      className={className}\r\n      contentRef={contentRef}\r\n    >\r\n      <Suspense fallback={<ChartLoadingIndicator />}>\r\n        <LazyChart {...props} />\r\n        {isLoading && <ChartLoadingIndicator />}\r\n      </Suspense>\r\n    </ChartLayout>\r\n  );\r\n}\r\n","import {DateFormatter, parseAbsoluteToLocal} from '@internationalized/date';\r\nimport memoize from 'nano-memoize';\r\nimport {ChartType} from 'chart.js';\r\nimport {\r\n  FormattedDatasetItem,\r\n  FormattedReportData,\r\n} from './formatted-dataset-item';\r\nimport {\r\n  DatasetItem,\r\n  RangedDatasetGranularity,\r\n  ReportMetric,\r\n} from '../../admin/analytics/report-metric';\r\nimport {shallowEqual} from '../../utils/shallow-equal';\r\n\r\ninterface Options {\r\n  localeCode: string;\r\n  shareFirstDatasetLabels?: boolean;\r\n}\r\n\r\ntype FormattedDatasetLabels = Omit<FormattedDatasetItem, 'value'>;\r\n\r\nexport function formatReportData(\r\n  report: ReportMetric<DatasetItem> | undefined,\r\n  {localeCode = 'en', shareFirstDatasetLabels = true}: Options,\r\n): FormattedReportData {\r\n  if (!report) return {datasets: []};\r\n\r\n  const firstDatasetLabels: FormattedDatasetLabels[] = [];\r\n\r\n  return {\r\n    ...report,\r\n    datasets: report.datasets.map((dataset, datasetIndex) => {\r\n      const data = dataset.data.map((datasetItem, itemIndex) => {\r\n        let label: FormattedDatasetLabels;\r\n        // when there are multiple datasets, we'll need to use labels from the first dataset, so charts are\r\n        // overlapped over one another, otherwise they will be side by side, if labels in all datasets are not identical.\r\n        if (datasetIndex === 0 || !shareFirstDatasetLabels) {\r\n          label = generateDatasetLabels(\r\n            datasetItem,\r\n            report.granularity,\r\n            localeCode,\r\n          );\r\n          firstDatasetLabels[itemIndex] = label;\r\n        } else {\r\n          label = firstDatasetLabels[itemIndex];\r\n        }\r\n        return {\r\n          ...label,\r\n          value: datasetItem.value,\r\n        };\r\n      });\r\n\r\n      return {...dataset, data};\r\n    }),\r\n  };\r\n}\r\n\r\nfunction generateDatasetLabels<T extends ChartType = ChartType>(\r\n  datum: DatasetItem,\r\n  granularity: RangedDatasetGranularity | undefined,\r\n  locale: string,\r\n): FormattedDatasetLabels {\r\n  if (datum.label) {\r\n    return {label: datum.label};\r\n  }\r\n\r\n  if (!datum.date) {\r\n    return {label: ''};\r\n  }\r\n\r\n  return generateTimeLabels(datum, granularity, locale);\r\n}\r\n\r\nfunction generateTimeLabels(\r\n  {date: isoDate, endDate: isoEndDate}: DatasetItem,\r\n  granularity: RangedDatasetGranularity | undefined = 'day',\r\n  locale: string,\r\n): Omit<FormattedDatasetItem, 'value'> {\r\n  const date = parseAbsoluteToLocal(isoDate!).toDate();\r\n  const endDate = isoEndDate ? parseAbsoluteToLocal(isoEndDate).toDate() : null;\r\n\r\n  switch (granularity) {\r\n    case 'minute':\r\n      return {\r\n        label: getFormatter(locale, {\r\n          second: '2-digit',\r\n        }).format(date),\r\n        tooltipTitle: getFormatter(locale, {\r\n          day: '2-digit',\r\n          hour: 'numeric',\r\n          minute: 'numeric',\r\n          second: '2-digit',\r\n        }).format(date),\r\n      };\r\n    case 'hour':\r\n      return {\r\n        label: getFormatter(locale, {\r\n          hour: 'numeric',\r\n          minute: 'numeric',\r\n        }).format(date),\r\n        tooltipTitle: getFormatter(locale, {\r\n          month: 'short',\r\n          day: '2-digit',\r\n          hour: 'numeric',\r\n          minute: 'numeric',\r\n        }).format(date),\r\n      };\r\n    case 'day':\r\n      return {\r\n        label: getFormatter(locale, {\r\n          day: '2-digit',\r\n          weekday: 'short',\r\n        }).format(date),\r\n        tooltipTitle: getFormatter(locale, {\r\n          day: '2-digit',\r\n          weekday: 'short',\r\n          month: 'short',\r\n        }).format(date),\r\n      };\r\n    case 'week':\r\n      return {\r\n        label: getFormatter(locale, {\r\n          month: 'short',\r\n          day: '2-digit',\r\n        }).format(date),\r\n        tooltipTitle: getFormatter(locale, {\r\n          day: '2-digit',\r\n          month: 'long',\r\n          year: 'numeric',\r\n        }).formatRange(date, endDate as Date),\r\n      };\r\n    case 'month':\r\n      return {\r\n        label: getFormatter(locale, {\r\n          month: 'short',\r\n          year: 'numeric',\r\n        }).format(date),\r\n        tooltipTitle: getFormatter(locale, {\r\n          month: 'long',\r\n          year: 'numeric',\r\n        }).format(date),\r\n      };\r\n    case 'year':\r\n      return {\r\n        label: getFormatter(locale, {\r\n          year: 'numeric',\r\n        }).format(date),\r\n        tooltipTitle: getFormatter(locale, {\r\n          year: 'numeric',\r\n        }).format(date),\r\n      };\r\n  }\r\n}\r\n\r\nconst getFormatter = memoize(\r\n  (locale, options: Intl.DateTimeFormatOptions) => {\r\n    return new DateFormatter(locale, options);\r\n  },\r\n  {\r\n    equals: (a, b) => {\r\n      return shallowEqual(a, b);\r\n    },\r\n    callTimeout: undefined as any,\r\n  },\r\n);\r\n","import {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nconst primaryColor = getBootstrapData().themes.all[0].values['--be-primary'];\r\nexport const ChartColors = [\r\n  [\r\n    `rgb(${primaryColor.replaceAll(' ', ',')})`,\r\n    `rgba(${primaryColor.replaceAll(' ', ',')},0.2)`,\r\n  ],\r\n  ['rgb(255,112,67)', 'rgb(255,112,67,0.2)'],\r\n  ['rgb(255,167,38)', 'rgb(255,167,38,0.2)'],\r\n  ['rgb(141,110,99)', 'rgb(141,110,99,0.2)'],\r\n  ['rgb(102,187,106)', 'rgba(102,187,106,0.2)'],\r\n  ['rgb(92,107,192)', 'rgb(92,107,192,0.2)'],\r\n];\r\n","import {BaseChart, BaseChartProps} from './base-chart';\r\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\r\nimport {useMemo} from 'react';\r\nimport {formatReportData} from './data/format-report-data';\r\nimport {useSelectedLocale} from '../i18n/selected-locale';\r\nimport {ChartData, ChartOptions} from 'chart.js';\r\nimport {ChartColors} from './chart-colors';\r\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\r\nimport clsx from 'clsx';\r\n\r\nconst LineChartOptions: ChartOptions<'line'> = {\r\n  parsing: {\r\n    xAxisKey: 'label',\r\n    yAxisKey: 'value',\r\n  },\r\n  datasets: {\r\n    line: {\r\n      fill: 'origin',\r\n      tension: 0.1,\r\n      pointBorderWidth: 4,\r\n      pointHitRadius: 10,\r\n    },\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      intersect: false,\r\n      mode: 'index',\r\n    },\r\n  },\r\n};\r\n\r\ninterface LineChartProps extends Omit<BaseChartProps<'line'>, 'type' | 'data'> {\r\n  data?: ReportMetric<DatasetItem>;\r\n}\r\nexport function LineChart({data, className, ...props}: LineChartProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const formattedData: ChartData<'line', FormattedDatasetItem[]> =\r\n    useMemo(() => {\r\n      const formattedData = formatReportData(data, {localeCode});\r\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\r\n        ...dataset,\r\n        backgroundColor: ChartColors[i][1],\r\n        borderColor: ChartColors[i][0],\r\n        pointBackgroundColor: ChartColors[i][0],\r\n      }));\r\n      return formattedData;\r\n    }, [data, localeCode]);\r\n\r\n  return (\r\n    <BaseChart\r\n      {...props}\r\n      className={clsx(className, 'min-w-500')}\r\n      data={formattedData}\r\n      type=\"line\"\r\n      options={LineChartOptions}\r\n    />\r\n  );\r\n}\r\n","import {BaseChart, BaseChartProps} from './base-chart';\r\nimport {ChartData, ChartOptions} from 'chart.js';\r\nimport {ChartColors} from './chart-colors';\r\nimport {useSelectedLocale} from '../i18n/selected-locale';\r\nimport {useMemo} from 'react';\r\nimport {formatReportData} from './data/format-report-data';\r\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\r\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\r\nimport clsx from 'clsx';\r\n\r\nconst PolarAreaChartOptions: ChartOptions<'polarArea'> = {\r\n  parsing: {\r\n    key: 'value',\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      intersect: true,\r\n    },\r\n  },\r\n};\r\n\r\ninterface PolarAreaChartProps\r\n  extends Omit<BaseChartProps<'polarArea'>, 'type' | 'data'> {\r\n  data?: ReportMetric<DatasetItem>;\r\n}\r\nexport function PolarAreaChart({\r\n  data,\r\n  className,\r\n  ...props\r\n}: PolarAreaChartProps) {\r\n  const {localeCode} = useSelectedLocale();\r\n  const formattedData: ChartData<'polarArea', FormattedDatasetItem[]> =\r\n    useMemo(() => {\r\n      const formattedData = formatReportData(data, {localeCode});\r\n      formattedData.labels = formattedData.datasets[0]?.data.map(d => d.label);\r\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\r\n        ...dataset,\r\n        backgroundColor: ChartColors.map(c => c[1]),\r\n        borderColor: ChartColors.map(c => c[0]),\r\n        borderWidth: 2,\r\n      }));\r\n      return formattedData;\r\n    }, [data, localeCode]);\r\n\r\n  return (\r\n    <BaseChart\r\n      type=\"polarArea\"\r\n      data={formattedData}\r\n      options={PolarAreaChartOptions}\r\n      className={clsx(className, 'min-w-500')}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import lazyLoader from '../../../utils/http/lazy-loader';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {RefObject, useCallback, useEffect, useRef} from 'react';\r\nimport {useThemeSelector} from '@common/ui/themes/theme-selector-context';\r\nimport {themeValueToHex} from '@common/ui/themes/utils/theme-value-to-hex';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {LocationDatasetItem} from '@common/admin/analytics/report-metric';\r\n\r\nconst loaderUrl = 'https://www.gstatic.com/charts/loader.js';\r\n\r\ninterface UseGoogleGeoChartProps {\r\n  placeholderRef: RefObject<HTMLDivElement>;\r\n  data: LocationDatasetItem[];\r\n  onCountrySelected?: (countryCode: string) => void;\r\n  country?: string;\r\n}\r\nexport function useGoogleGeoChart({\r\n  placeholderRef,\r\n  data,\r\n  country,\r\n  onCountrySelected,\r\n}: UseGoogleGeoChartProps) {\r\n  const {trans} = useTrans();\r\n  const {analytics} = useSettings();\r\n  const apiKey = analytics?.gchart_api_key;\r\n  const {selectedTheme} = useThemeSelector();\r\n  const geoChartRef = useRef<google.visualization.GeoChart>();\r\n  // only allow selecting countries, not cities\r\n  const regionInteractivity = !!onCountrySelected && !country;\r\n  const drawGoogleChart = useCallback(() => {\r\n    if (typeof google === 'undefined') return;\r\n\r\n    const seedData = data.map(location => [location.label, location.value]);\r\n    seedData.unshift([\r\n      country ? trans(message('City')) : trans(message('Country')),\r\n      trans(message('Clicks')),\r\n    ]);\r\n\r\n    const backgroundColor = `${themeValueToHex(\r\n      selectedTheme.values['--be-paper'],\r\n    )}`;\r\n    const chartColor = `${themeValueToHex(\r\n      selectedTheme.values['--be-primary'],\r\n    )}`;\r\n\r\n    const options: google.visualization.GeoChartOptions = {\r\n      colorAxis: {colors: [chartColor]},\r\n      backgroundColor,\r\n      region: country ? country.toUpperCase() : undefined,\r\n      resolution: country ? 'provinces' : 'countries',\r\n      displayMode: country ? 'markers' : 'regions',\r\n      enableRegionInteractivity: regionInteractivity,\r\n    };\r\n\r\n    if (\r\n      !geoChartRef.current &&\r\n      placeholderRef.current &&\r\n      google?.visualization?.GeoChart\r\n    ) {\r\n      geoChartRef.current = new google.visualization.GeoChart(\r\n        placeholderRef.current,\r\n      );\r\n    }\r\n    geoChartRef.current?.draw(\r\n      google.visualization.arrayToDataTable(seedData),\r\n      options,\r\n    );\r\n  }, [\r\n    selectedTheme,\r\n    data,\r\n    placeholderRef,\r\n    trans,\r\n    country,\r\n    regionInteractivity,\r\n  ]);\r\n\r\n  const initGoogleGeoChart = useCallback(async () => {\r\n    if (lazyLoader.isLoadingOrLoaded(loaderUrl)) return;\r\n    await lazyLoader.loadAsset(loaderUrl, {type: 'js', id: 'google-charts-js'});\r\n    await google.charts.load('current', {\r\n      packages: ['geochart'],\r\n      mapsApiKey: apiKey,\r\n    });\r\n    drawGoogleChart();\r\n  }, [apiKey, drawGoogleChart]);\r\n\r\n  useEffect(() => {\r\n    if (geoChartRef.current && onCountrySelected) {\r\n      google.visualization.events.addListener(\r\n        geoChartRef.current,\r\n        'regionClick',\r\n        (a: {region: string}) => onCountrySelected?.(a.region),\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (geoChartRef.current) {\r\n        google.visualization.events.removeAllListeners(geoChartRef.current);\r\n      }\r\n    };\r\n    // this will correctly run when geochart instance is set on ref\r\n  }, [onCountrySelected, geoChartRef.current]);\r\n\r\n  // on component load: load chart library then draw, otherwise just draw\r\n  useEffect(() => {\r\n    initGoogleGeoChart();\r\n  }, [initGoogleGeoChart]);\r\n\r\n  // redraw chart if data or theme changes\r\n  useEffect(() => {\r\n    drawGoogleChart();\r\n  }, [selectedTheme, drawGoogleChart, data]);\r\n\r\n  return {drawGoogleChart};\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ArrowBackIcon = createSvgIcon(\r\n  <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\r\n, 'ArrowBackOutlined');\r\n","import {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\r\nimport {Dialog, DialogSize} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport React, {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface InfoDialogTriggerProps {\r\n  title?: ReactNode;\r\n  body: ReactNode;\r\n  dialogSize?: DialogSize;\r\n  className?: string;\r\n}\r\nexport function InfoDialogTrigger({\r\n  title,\r\n  body,\r\n  dialogSize = 'sm',\r\n  className,\r\n}: InfoDialogTriggerProps) {\r\n  return (\r\n    <DialogTrigger type=\"popover\" triggerOnHover>\r\n      <IconButton\r\n        className={clsx('ml-4 text-muted opacity-70', className)}\r\n        iconSize=\"xs\"\r\n        size=\"2xs\"\r\n      >\r\n        <InfoDialogTriggerIcon viewBox=\"0 0 16 16\" />\r\n      </IconButton>\r\n      <Dialog size={dialogSize}>\r\n        {title && (\r\n          <DialogHeader padding=\"px-18 pt-12\" size=\"md\" hideDismissButton>\r\n            {title}\r\n          </DialogHeader>\r\n        )}\r\n        <DialogBody>{body}</DialogBody>\r\n      </Dialog>\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useSelectedLocale} from '@common/i18n/selected-locale';\r\nimport {Fragment, memo} from 'react';\r\n\r\ninterface Props {\r\n  code: string;\r\n}\r\nexport const FormattedCountryName = memo(({code: countryCode}: Props) => {\r\n  const {localeCode} = useSelectedLocale();\r\n  const regionNames = new Intl.DisplayNames([localeCode], {type: 'region'});\r\n  let formattedName: string | undefined;\r\n\r\n  try {\r\n    formattedName = regionNames.of(countryCode.toUpperCase());\r\n  } catch (e) {}\r\n\r\n  return <Fragment>{formattedName}</Fragment>;\r\n});\r\n","import {\r\n  LocationDatasetItem,\r\n  ReportMetric,\r\n} from '@common/admin/analytics/report-metric';\r\nimport React, {useMemo, useRef} from 'react';\r\nimport {useGoogleGeoChart} from './use-google-geo-chart';\r\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\r\nimport clsx from 'clsx';\r\nimport {InfoDialogTrigger} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\r\nimport {FormattedCountryName} from '@common/i18n/formatted-country-name';\r\n\r\ninterface GeoChartData extends Partial<ChartLayoutProps> {\r\n  data?: ReportMetric<LocationDatasetItem>;\r\n  onCountrySelected?: (countryCode: string | undefined) => void;\r\n  country?: string;\r\n}\r\nexport function GeoChart({\r\n  data: metricData,\r\n  isLoading,\r\n  onCountrySelected,\r\n  country,\r\n  ...layoutProps\r\n}: GeoChartData) {\r\n  const placeholderRef = useRef<HTMLDivElement>(null);\r\n  const regionInteractivity = !!onCountrySelected;\r\n\r\n  // memo data to avoid redrawing chart on rerender\r\n  const initialData = metricData?.datasets[0].data;\r\n  const data = useMemo(() => {\r\n    return initialData || [];\r\n  }, [initialData]);\r\n  useGoogleGeoChart({placeholderRef, data, country, onCountrySelected});\r\n\r\n  return (\r\n    <ChartLayout\r\n      {...layoutProps}\r\n      className=\"min-w-500\"\r\n      title={\r\n        <div className=\"flex items-center\">\r\n          <Trans message=\"Top Locations\" />\r\n          {country ? (\r\n            <span className=\"pl-4\">\r\n              ({<FormattedCountryName code={country} />})\r\n            </span>\r\n          ) : null}\r\n          {regionInteractivity && <InfoTrigger />}\r\n        </div>\r\n      }\r\n      contentIsFlex={isLoading}\r\n    >\r\n      {isLoading && <ChartLoadingIndicator />}\r\n      <div className=\"flex gap-24\">\r\n        <div\r\n          ref={placeholderRef}\r\n          className=\"flex-auto w-[480px] min-h-[340px]\"\r\n        />\r\n        <div className=\"w-[170px]\">\r\n          <div className=\"text-sm max-h-[340px] w-full flex-initial overflow-y-auto\">\r\n            {data.map(location => (\r\n              <div\r\n                key={location.label}\r\n                className={clsx(\r\n                  'flex items-center gap-4 mb-4',\r\n                  regionInteractivity && 'cursor-pointer hover:underline'\r\n                )}\r\n                role={regionInteractivity ? 'button' : undefined}\r\n                onClick={() => {\r\n                  onCountrySelected?.(location.code);\r\n                }}\r\n              >\r\n                <div className=\"max-w-110 whitespace-nowrap overflow-hidden overflow-ellipsis\">\r\n                  {location.label}\r\n                </div>\r\n                <div>({location.percentage})%</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {country && (\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"xs\"\r\n              className=\"mt-14\"\r\n              startIcon={<ArrowBackIcon />}\r\n              onClick={() => {\r\n                onCountrySelected?.(undefined);\r\n              }}\r\n            >\r\n              <Trans message=\"Back to countries\" />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </ChartLayout>\r\n  );\r\n}\r\n\r\nfunction InfoTrigger() {\r\n  return (\r\n    <InfoDialogTrigger\r\n      title={<Trans message=\"Zooming in\" />}\r\n      body={\r\n        <Trans message=\"Click on a country inside the map or country list to zoom in and see city data for that country.\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {\r\n  DatasetItem,\r\n  LocationDatasetItem,\r\n  ReportMetric,\r\n} from '@common/admin/analytics/report-metric';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {Track} from '@app/web-player/tracks/track';\r\nimport {User} from '@common/auth/user';\r\nimport {Artist} from '@app/web-player/artists/artist';\r\nimport {Album} from '@app/web-player/albums/album';\r\n\r\nconst endpoint = 'reports/insights';\r\n\r\nexport interface TopModelDatasetItem extends DatasetItem {\r\n  model: Artist | Album | Track | User;\r\n}\r\n\r\nexport interface FetchInsightsReportResponse extends BackendResponse {\r\n  report: {\r\n    totalClicks: number;\r\n    plays: ReportMetric;\r\n    browsers: ReportMetric;\r\n    locations: ReportMetric<LocationDatasetItem>;\r\n    devices: ReportMetric;\r\n    platforms: ReportMetric;\r\n    tracks: ReportMetric<TopModelDatasetItem>;\r\n    artists: ReportMetric<TopModelDatasetItem>;\r\n    albums: ReportMetric<TopModelDatasetItem>;\r\n    users: ReportMetric<TopModelDatasetItem>;\r\n  };\r\n}\r\n\r\nexport type InsightsReportMetric =\r\n  | 'plays'\r\n  | 'devices'\r\n  | 'browsers'\r\n  | 'platforms'\r\n  | 'locations'\r\n  | 'tracks'\r\n  | 'artists'\r\n  | 'albums'\r\n  | 'users';\r\n\r\ninterface Payload {\r\n  dateRange: DateRangeValue;\r\n  model?: string;\r\n  metrics?: InsightsReportMetric[];\r\n}\r\n\r\ninterface Options {\r\n  isEnabled: boolean;\r\n}\r\n\r\nexport function useInsightsReport(payload: Payload, options: Options) {\r\n  return useQuery({\r\n    queryKey: [endpoint, payload],\r\n    queryFn: () => fetchReport(endpoint, payload),\r\n    placeholderData: options.isEnabled ? keepPreviousData : undefined,\r\n    enabled: options.isEnabled,\r\n  });\r\n}\r\n\r\nfunction fetchReport<\r\n  T extends FetchInsightsReportResponse = FetchInsightsReportResponse,\r\n>(endpoint: string, payload: Payload): Promise<T> {\r\n  const params: Record<string, any> = {\r\n    model: payload.model,\r\n    metrics: payload.metrics?.join(','),\r\n  };\r\n  params.startDate = payload.dateRange.start.toAbsoluteString();\r\n  params.endDate = payload.dateRange.end.toAbsoluteString();\r\n  params.timezone = payload.dateRange.start.timeZone;\r\n\r\n  return apiClient.get(endpoint, {params}).then(response => response.data);\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const InfoIcon = createSvgIcon(\r\n  <path d=\"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\r\n, 'InfoOutlined');\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\r\nimport React, {Fragment, ReactElement} from 'react';\r\nimport {ReportMetric} from '@common/admin/analytics/report-metric';\r\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\r\nimport {TopModelDatasetItem} from '@app/admin/reports/requests/use-insights-report';\r\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\r\nimport {InfoIcon} from '@common/icons/material/Info';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {AlbumLink} from '@app/web-player/albums/album-link';\r\nimport {TrackLink} from '@app/web-player/tracks/track-link';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\r\nimport {UserAvatar} from '@common/ui/images/user-avatar';\r\n\r\ninterface Props extends Partial<ChartLayoutProps> {\r\n  data?: ReportMetric<TopModelDatasetItem>;\r\n  title: ReactElement;\r\n}\r\nexport function TopModelsChartLayout({data, isLoading, ...layoutProps}: Props) {\r\n  const dataItems = data?.datasets[0].data || [];\r\n\r\n  return (\r\n    <ChartLayout\r\n      {...layoutProps}\r\n      className=\"min-w-500 md:min-w-0 w-1/2\"\r\n      contentIsFlex={isLoading}\r\n      contentClassName=\"max-h-[370px] overflow-y-auto compact-scrollbar\"\r\n    >\r\n      {isLoading && <ChartLoadingIndicator />}\r\n      {dataItems.map(item => (\r\n        <div\r\n          key={item.model.id}\r\n          className=\"mb-20 text-sm flex items-center justify-between gap-24\"\r\n        >\r\n          <div className=\"flex items-center gap-8\">\r\n            <Image\r\n              model={item.model}\r\n              size=\"w-42 h-42\"\r\n              className=\"rounded flex-shrink-0\"\r\n            />\r\n            <div>\r\n              <div className=\"text-sm\">\r\n                <Name model={item.model} />\r\n              </div>\r\n              <div className=\"text-xs text-muted\">\r\n                <Description model={item.model} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-4 flex-shrink-0\">\r\n            <PlayArrowFilledIcon className=\"text-muted\" size=\"sm\" />\r\n            <Trans\r\n              message=\":count plays\"\r\n              values={{count: <FormattedNumber value={item.value} />}}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {!isLoading && !dataItems.length ? (\r\n        <div className=\"flex items-center gap-8 text-muted\">\r\n          <InfoIcon size=\"sm\" />\r\n          <Trans message=\"No plays in selected timeframe.\" />\r\n        </div>\r\n      ) : null}\r\n    </ChartLayout>\r\n  );\r\n}\r\n\r\ninterface ImageProps {\r\n  model: TopModelDatasetItem['model'];\r\n  size: string;\r\n  className: string;\r\n}\r\nfunction Image({model, size, className}: ImageProps) {\r\n  const {pathname} = useLocation();\r\n  const inAdmin = pathname.includes('/admin');\r\n  const link = inAdmin\r\n    ? `/admin/${model.model_type}s/${model.id}/insights`\r\n    : `/backstage/${model.model_type}s/${model.id}/insights`;\r\n\r\n  switch (model.model_type) {\r\n    case 'artist':\r\n      return (\r\n        <Link to={link}>\r\n          <SmallArtistImage artist={model} size={size} className={className} />\r\n        </Link>\r\n      );\r\n    case 'album':\r\n      return (\r\n        <Link to={link}>\r\n          <AlbumImage album={model} size={size} className={className} />\r\n        </Link>\r\n      );\r\n    case 'track':\r\n      return (\r\n        <Link to={link}>\r\n          <TrackImage track={model} size={size} className={className} />\r\n        </Link>\r\n      );\r\n    case 'user':\r\n      // there's no separate insights page for user\r\n      return <UserAvatar user={model} size={size} className={className} />;\r\n  }\r\n}\r\n\r\ninterface NameProps {\r\n  model: TopModelDatasetItem['model'];\r\n}\r\nfunction Name({model}: NameProps) {\r\n  switch (model.model_type) {\r\n    case 'artist':\r\n      return <ArtistLink artist={model} target=\"_blank\" />;\r\n    case 'album':\r\n      return <AlbumLink album={model} target=\"_blank\" />;\r\n    case 'track':\r\n      return <TrackLink track={model} target=\"_blank\" />;\r\n    case 'user':\r\n      return model.id ? (\r\n        <UserProfileLink user={model} target=\"_blank\" />\r\n      ) : (\r\n        <Fragment>{model.display_name}</Fragment>\r\n      );\r\n  }\r\n}\r\n\r\ninterface DescriptionProps {\r\n  model: TopModelDatasetItem['model'];\r\n}\r\nfunction Description({model}: DescriptionProps) {\r\n  switch (model.model_type) {\r\n    case 'artist':\r\n    case 'user':\r\n      return null;\r\n    case 'album':\r\n    case 'track':\r\n      return <ArtistLinks artists={model.artists} target=\"_blank\" />;\r\n  }\r\n}\r\n","import React, {\r\n  cloneElement,\r\n  Fragment,\r\n  ReactElement,\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {LineChart} from '@common/charts/line-chart';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\r\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\r\nimport {BaseChartProps} from '@common/charts/base-chart';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {UseQueryResult} from '@tanstack/react-query';\r\nimport {\r\n  FetchInsightsReportResponse,\r\n  InsightsReportMetric,\r\n  useInsightsReport,\r\n} from '@app/admin/reports/requests/use-insights-report';\r\nimport {TopModelsChartLayout} from '@app/admin/reports/top-models-chart-layout';\r\n\r\nexport interface InsightsReportChartsProps {\r\n  showTracks?: boolean;\r\n  showArtistsAndAlbums?: boolean;\r\n  dateRange?: DateRangeValue;\r\n  model?: string;\r\n}\r\nexport function InsightsReportCharts(props: InsightsReportChartsProps) {\r\n  const colGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\r\n  const rowClassName = `flex flex-col lg:flex-row lg:items-center overflow-x-auto ${colGap}`;\r\n\r\n  // will be set via \"cloneElement\"\r\n  const model = props.model as string;\r\n  const dateRange = props.dateRange as DateRangeValue;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={rowClassName}>\r\n        <AsyncChart metric=\"plays\" model={model} dateRange={dateRange}>\r\n          {({data}) => (\r\n            <LineChart\r\n              className=\"flex-auto\"\r\n              title={<Trans message=\"Plays\" />}\r\n              hideLegend\r\n              description={\r\n                <Trans\r\n                  message=\":count total plays\"\r\n                  values={{\r\n                    count: (\r\n                      <FormattedNumber value={data?.report.plays.total || 0} />\r\n                    ),\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          )}\r\n        </AsyncChart>\r\n        <AsyncChart metric=\"devices\" model={model} dateRange={dateRange}>\r\n          <PolarAreaChart title={<Trans message=\"Top devices\" />} />\r\n        </AsyncChart>\r\n      </div>\r\n      <div className={rowClassName}>\r\n        {props.showTracks && (\r\n          <AsyncChart metric=\"tracks\" model={model} dateRange={dateRange}>\r\n            <TopModelsChartLayout\r\n              title={<Trans message=\"Most played tracks\" />}\r\n            />\r\n          </AsyncChart>\r\n        )}\r\n        <AsyncChart metric=\"users\" model={model} dateRange={dateRange}>\r\n          <TopModelsChartLayout title={<Trans message=\"Top listeners\" />} />\r\n        </AsyncChart>\r\n      </div>\r\n      {props.showArtistsAndAlbums && (\r\n        <div className={rowClassName}>\r\n          <AsyncChart metric=\"artists\" model={model} dateRange={dateRange}>\r\n            <TopModelsChartLayout\r\n              title={<Trans message=\"Most played artists\" />}\r\n            />\r\n          </AsyncChart>\r\n          <AsyncChart metric=\"albums\" model={model} dateRange={dateRange}>\r\n            <TopModelsChartLayout\r\n              title={<Trans message=\"Most played albums\" />}\r\n            />\r\n          </AsyncChart>\r\n        </div>\r\n      )}\r\n      <div className={rowClassName}>\r\n        <AsyncChart metric=\"locations\" model={model} dateRange={dateRange}>\r\n          <GeoChart className=\"flex-auto w-1/2 lg:max-w-[740px]\" />\r\n        </AsyncChart>\r\n        <AsyncChart metric=\"platforms\" model={model} dateRange={dateRange}>\r\n          <PolarAreaChart\r\n            className=\"max-w-500\"\r\n            title={<Trans message=\"Top platforms\" />}\r\n          />\r\n        </AsyncChart>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface AsyncChartProps {\r\n  children:\r\n    | ReactElement<BaseChartProps>\r\n    | ((\r\n        query: UseQueryResult<FetchInsightsReportResponse>\r\n      ) => ReactElement<BaseChartProps>);\r\n  metric: InsightsReportMetric;\r\n  model: string;\r\n  dateRange: DateRangeValue;\r\n}\r\nfunction AsyncChart({children, metric, model, dateRange}: AsyncChartProps) {\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const query = useInsightsReport(\r\n    {metrics: [metric], model, dateRange},\r\n    {isEnabled}\r\n  );\r\n  const chart = typeof children === 'function' ? children(query) : children;\r\n  const observerRef = useRef<IntersectionObserver>();\r\n\r\n  const contentRef = useCallback((el: HTMLDivElement | null) => {\r\n    if (el) {\r\n      const observer = new IntersectionObserver(\r\n        ([e]) => {\r\n          if (e.isIntersecting) {\r\n            setIsEnabled(true);\r\n            observerRef.current?.disconnect();\r\n            observerRef.current = undefined;\r\n          }\r\n        },\r\n        {threshold: 0.1} // if only header is visible, don't load\r\n      );\r\n      observerRef.current = observer;\r\n      observer.observe(el);\r\n    } else if (observerRef.current) {\r\n      observerRef.current?.disconnect();\r\n    }\r\n  }, []);\r\n\r\n  return cloneElement<BaseChartProps>(chart, {\r\n    data: query.data?.report?.[metric],\r\n    isLoading: query.isLoading,\r\n    contentRef,\r\n  });\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport React, {cloneElement, Fragment, ReactElement, useState} from 'react';\r\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\r\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\r\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\r\nimport {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {InsightsReportChartsProps} from '@app/admin/reports/insights-report-charts';\r\nimport {Footer} from '@common/ui/footer/footer';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\n\r\nimport {PlayerNavbarLayout} from '@app/web-player/layout/player-navbar-layout';\r\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\r\nimport {SidedavFrontend} from '@app/web-player/layout/sidenav-frontend';\r\nimport {Sidenav} from '@app/web-player/layout/sidenav';\r\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\ninterface Props {\r\n  children: ReactElement<InsightsReportChartsProps>;\r\n  reportModel: string;\r\n  title?: ReactElement;\r\n  isNested?: boolean;\r\n}\r\nexport function BackstageInsightsLayout({\r\n  children,\r\n  reportModel,\r\n  title,\r\n  isNested,\r\n}: Props) {\r\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\r\n    // This week\r\n    return DateRangePresets[2].getRangeValue();\r\n  });\r\n  const {player} = useSettings();\r\n  const isMobile = useIsMobileMediaQuery();\r\n  \r\n  return (\r\n    <Fragment>\r\n      <StaticPageTitle>\r\n        <Trans message=\"Insights\" />\r\n      </StaticPageTitle>\r\n      <div className=\"h-full flex flex-col\">\r\n      <DashboardLayout\r\n        name=\"web-player\"\r\n        initialRightSidenavStatus={player?.hide_queue ? 'closed' : 'open'}\r\n      >\r\n        <PlayerNavbarLayout\r\n          size=\"sm\"\r\n          menuPosition=\"pricing-table-page\"\r\n          className=\"flex-shrink-0\"\r\n        />\r\n        <SidedavFrontend position=\"left\" display=\"block\">\r\n          <Sidenav />\r\n        </SidedavFrontend>\r\n        <DashboardContent>\r\n        <div className=\"overflow-y-auto flex-auto bg-cover relative\">\r\n          <div className=\"min-h-full p-12 md:p-24 overflow-x-hidden max-w-[1600px] mx-auto flex flex-col\">\r\n            <div className=\"flex-auto\">\r\n              <div className=\"md:flex items-center justify-between gap-24 h-48 mt-14 mb-38\">\r\n                {title ? title : <Skeleton className=\"max-w-320\" />}\r\n                <div className=\"flex-shrink-0 flex items-center justify-between gap-10 md:gap-24\">\r\n                  <ReportDateSelector\r\n                    value={dateRange}\r\n                    onChange={setDateRange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {cloneElement(children, {dateRange, model: reportModel})}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </DashboardContent>\r\n      </DashboardLayout>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport React, {cloneElement, ReactElement} from 'react';\r\n\r\ninterface Props {\r\n  image: ReactElement<{size: string; className: string}>;\r\n  name: ReactElement;\r\n  description?: ReactElement;\r\n}\r\nexport function BackstageInsightsTitle({image, name, description}: Props) {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      {cloneElement(image, {size: 'w-48 h-48', className: 'rounded'})}\r\n      <div>\r\n        <h1 className=\"text-base whitespace-nowrap overflow-hidden overflow-ellipsis\">\r\n          “{name}“ <Trans message=\"insights\" />\r\n        </h1>\r\n        {description && <div className=\"text-muted text-sm\">{description}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {useParams} from 'react-router-dom';\r\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\r\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\r\nimport React from 'react';\r\nimport {useArtist} from '@app/web-player/artists/requests/use-artist';\r\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\r\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\r\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\r\n\r\ninterface Props {\r\n  isNested?: boolean;\r\n}\r\nexport function BackstageArtistInsights({isNested}: Props) {\r\n  const {artistId} = useParams();\r\n  const {data} = useArtist({loader: 'artist'});\r\n  return (\r\n    <BackstageInsightsLayout\r\n      reportModel={`artist=${artistId}`}\r\n      title={\r\n        data?.artist && (\r\n          <BackstageInsightsTitle\r\n            image={<SmallArtistImage artist={data.artist} />}\r\n            name={<ArtistLink artist={data.artist} />}\r\n          />\r\n        )\r\n      }\r\n      isNested={isNested}\r\n    >\r\n      <InsightsReportCharts showTracks />\r\n    </BackstageInsightsLayout>\r\n  );\r\n}\r\n","import {useParams} from 'react-router-dom';\r\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\r\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\r\nimport React from 'react';\r\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\r\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\r\nimport {AlbumLink} from '@app/web-player/albums/album-link';\r\n\r\ninterface Props {\r\n  isNested?: boolean;\r\n}\r\nexport function BackstageAlbumInsights({isNested}: Props) {\r\n  const {albumId} = useParams();\r\n  const {data} = useAlbum({loader: 'album'});\r\n  return (\r\n    <BackstageInsightsLayout\r\n      reportModel={`album=${albumId}`}\r\n      title={\r\n        data?.album && (\r\n          <BackstageInsightsTitle\r\n            image={<AlbumImage album={data.album} />}\r\n            name={<AlbumLink album={data.album} />}\r\n            description={<ArtistLinks artists={data.album.artists} />}\r\n          />\r\n        )\r\n      }\r\n      isNested={isNested}\r\n    >\r\n      <InsightsReportCharts showTracks />\r\n    </BackstageInsightsLayout>\r\n  );\r\n}\r\n","import {useParams} from 'react-router-dom';\r\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\r\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\r\nimport React from 'react';\r\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\r\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\r\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\r\nimport {TrackLink} from '@app/web-player/tracks/track-link';\r\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\r\n\r\ninterface Props {\r\n  isNested?: boolean;\r\n}\r\nexport function BackstageTrackInsights({isNested}: Props) {\r\n  const {trackId} = useParams();\r\n  const {data} = useTrack({loader: 'track'});\r\n  return (\r\n    <BackstageInsightsLayout\r\n      reportModel={`track=${trackId}`}\r\n      title={\r\n        data?.track && (\r\n          <BackstageInsightsTitle\r\n            image={<TrackImage track={data.track} />}\r\n            name={<TrackLink track={data.track} />}\r\n            description={<ArtistLinks artists={data.track.artists} />}\r\n          />\r\n        )\r\n      }\r\n      isNested={isNested}\r\n    >\r\n      <InsightsReportCharts />\r\n    </BackstageInsightsLayout>\r\n  );\r\n}\r\n"],"names":["_a","_b","now","isSameMonth","endpoint","response","Select","value","message","uploadId","SpotifyIdField","createTrack","Endpoint","PageContent","updateAlbum","createAlbum","locale","formattedData"],"mappings":"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"}