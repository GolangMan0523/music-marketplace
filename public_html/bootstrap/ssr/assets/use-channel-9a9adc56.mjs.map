{"version":3,"file":"use-channel-9a9adc56.mjs","sources":["../../../common/resources/client/datatable/filters/backend-filters-url-key.ts","../../../common/resources/client/datatable/filters/utils/decode-backend-filters.ts","../../../common/resources/client/datatable/filters/utils/encode-backend-filters.ts","../../../common/resources/client/datatable/filters/backend-filter-url-params.ts","../../../common/resources/client/http/backend-response/pagination-response.ts","../../../common/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/resources/client/ui/forms/slider/base-slider.tsx","../../../common/resources/client/ui/forms/slider/use-slider.ts","../../../common/resources/client/ui/forms/slider/slider-thumb.tsx","../../../common/resources/client/ui/forms/slider/slider.tsx","../../../common/resources/client/icons/material/MoreVert.tsx","../../../resources/client/web-player/artists/artist-page-tabs.ts","../../../common/resources/client/ui/overlays/dialog/image-zoom-dialog.tsx","../../../resources/client/web-player/genres/genre-link.tsx","../../../common/resources/client/comments/requests/use-delete-comments.ts","../../../common/resources/client/icons/material/TrendingUp.tsx","../../../common/resources/client/channels/channel.ts","../../../common/resources/client/icons/material/GridView.tsx","../../../common/resources/client/utils/hooks/is-touch-device.ts","../../../common/resources/client/channels/use-channel-query-params.ts","../../../common/resources/client/channels/requests/use-channel.ts"],"sourcesContent":["export const BackendFiltersUrlKey = 'filters';\r\n","import {FilterListValue} from './encode-backend-filters';\r\n\r\nexport function decodeBackendFilters(\r\n  encodedFilters: string | null\r\n): FilterListValue[] {\r\n  if (!encodedFilters) return [];\r\n  let filtersFromQuery: FilterListValue[] = [];\r\n  try {\r\n    filtersFromQuery = JSON.parse(atob(decodeURIComponent(encodedFilters)));\r\n    filtersFromQuery.map(filterValue => {\r\n      // set value key as value so selects work properly\r\n      if (filterValue.valueKey != null) {\r\n        filterValue.value = filterValue.valueKey;\r\n      }\r\n      return filterValue;\r\n    });\r\n  } catch (e) {\r\n    //\r\n  }\r\n  return filtersFromQuery;\r\n}\r\n","import {BackendFilter} from '../backend-filter';\r\n\r\nexport interface FilterListValue {\r\n  key: string | number;\r\n  value: BackendFilter['control']['defaultValue'];\r\n  operator?: BackendFilter['defaultOperator'];\r\n  valueKey?: string | number;\r\n  isInactive?: boolean;\r\n  extraFilters?: {key: string; operator: string; value: any}[];\r\n}\r\n\r\nexport function encodeBackendFilters(\r\n  filterValues: FilterListValue[] | null,\r\n  filters?: BackendFilter[],\r\n): string {\r\n  if (!filterValues) return '';\r\n\r\n  // prepare values for backend\r\n  filterValues = !filters\r\n    ? filterValues\r\n    : filterValues\r\n        .filter(item => item.value !== '')\r\n        .map(item => transformValue(item, filters));\r\n\r\n  // remove all placeholder filters\r\n  filterValues = filterValues.filter(fm => !fm.isInactive);\r\n\r\n  if (!filterValues.length) {\r\n    return '';\r\n  }\r\n\r\n  return encodeURIComponent(btoa(JSON.stringify(filterValues)));\r\n}\r\n\r\nfunction transformValue(\r\n  filterValue: FilterListValue,\r\n  filters: BackendFilter[],\r\n) {\r\n  const filterConfig = filters.find(f => f.key === filterValue.key);\r\n  // select components will use a key always, because we can't use objects as\r\n  // value. Map over select options and replace key with actual value\r\n  if (filterConfig?.control.type === 'select') {\r\n    const option = (filterConfig.control.options || []).find(\r\n      o => o.key === filterValue.value,\r\n    );\r\n    // if it's language or country select, there might not be an option\r\n    if (option) {\r\n      return {...filterValue, value: option.value, valueKey: option.key};\r\n    }\r\n  }\r\n\r\n  if (filterConfig?.extraFilters?.length) {\r\n    filterValue['extraFilters'] = filterConfig.extraFilters;\r\n  }\r\n\r\n  return filterValue;\r\n}\r\n","import {useNavigate, useSearchParams} from 'react-router-dom';\r\nimport {Key, useCallback, useMemo} from 'react';\r\nimport {BackendFilter} from './backend-filter';\r\nimport {BackendFiltersUrlKey} from './backend-filters-url-key';\r\nimport {decodeBackendFilters} from './utils/decode-backend-filters';\r\nimport {\r\n  encodeBackendFilters,\r\n  FilterListValue,\r\n} from './utils/encode-backend-filters';\r\n\r\nexport function useBackendFilterUrlParams(\r\n  filters?: BackendFilter[],\r\n  pinnedFilters?: string[]\r\n) {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n\r\n  const encodedFilters = searchParams.get(BackendFiltersUrlKey);\r\n\r\n  const decodedFilters: FilterListValue[] = useMemo(() => {\r\n    if (!filters) return [];\r\n    const decoded = decodeBackendFilters(encodedFilters);\r\n\r\n    // if filter is pinned, and it is not applied yet, add a placeholder\r\n    (pinnedFilters || []).forEach(key => {\r\n      if (!decoded.find(f => f.key === key)) {\r\n        const config = filters.find(f => f.key === key)!;\r\n        decoded.push({\r\n          key,\r\n          value: config.control.defaultValue,\r\n          operator: config.defaultOperator,\r\n          isInactive: true,\r\n        });\r\n      }\r\n    });\r\n\r\n    // preserve original filter order from configuration\r\n    decoded.sort(\r\n      (a, b) =>\r\n        filters.findIndex(f => f.key === a.key) -\r\n        filters.findIndex(f => f.key === b.key)\r\n    );\r\n\r\n    return decoded;\r\n  }, [encodedFilters, pinnedFilters, filters]);\r\n\r\n  const getDecodedWithoutKeys = useCallback(\r\n    (values: (FilterListValue | Key)[]) => {\r\n      const newFilters = [...decodedFilters];\r\n      values.forEach(value => {\r\n        const key = typeof value === 'object' ? value.key : value;\r\n        const index = newFilters.findIndex(f => f.key === key);\r\n        if (index > -1) {\r\n          newFilters.splice(index, 1);\r\n        }\r\n      });\r\n      return newFilters;\r\n    },\r\n    [decodedFilters]\r\n  );\r\n\r\n  const replaceAll = useCallback(\r\n    (filterValues: FilterListValue[]) => {\r\n      const encodedFilters = encodeBackendFilters(filterValues, filters);\r\n      if (encodedFilters) {\r\n        searchParams.set(BackendFiltersUrlKey, encodedFilters);\r\n      } else {\r\n        searchParams.delete(BackendFiltersUrlKey);\r\n      }\r\n      navigate({search: `?${searchParams}`}, {replace: true});\r\n    },\r\n    [filters, navigate, searchParams]\r\n  );\r\n\r\n  const add = useCallback(\r\n    (filterValues: FilterListValue[]) => {\r\n      const existing = getDecodedWithoutKeys(filterValues);\r\n      const decodedFilters = [...existing, ...filterValues];\r\n      replaceAll(decodedFilters);\r\n    },\r\n    [getDecodedWithoutKeys, replaceAll]\r\n  );\r\n\r\n  const remove = useCallback(\r\n    (key: Key) => replaceAll(getDecodedWithoutKeys([key])),\r\n    [getDecodedWithoutKeys, replaceAll]\r\n  );\r\n\r\n  return {\r\n    add,\r\n    remove,\r\n    replaceAll,\r\n    decodedFilters,\r\n    encodedFilters,\r\n  };\r\n}\r\n","import {BackendResponse} from './backend-response';\r\n\r\nexport interface LengthAwarePaginationResponse<T> {\r\n  data: T[];\r\n  from: number;\r\n  to: number;\r\n  total: number;\r\n  per_page: number;\r\n  current_page: number;\r\n  last_page: number;\r\n  next_page: number;\r\n  prev_page: number;\r\n}\r\n\r\nexport interface SimplePaginationResponse<T> {\r\n  data: T[];\r\n  from: number;\r\n  to: number;\r\n  per_page: number;\r\n  current_page: number;\r\n}\r\n\r\ninterface CursorPaginationResponse<T> {\r\n  data: T[];\r\n  next_cursor: string | null;\r\n  per_page: number;\r\n  prev_cursor: string | null;\r\n}\r\n\r\nexport type PaginationResponse<T> =\r\n  | LengthAwarePaginationResponse<T>\r\n  | SimplePaginationResponse<T>\r\n  | CursorPaginationResponse<T>;\r\n\r\nexport const EMPTY_PAGINATION_RESPONSE = {\r\n  pagination: {data: [], from: 0, to: 0, per_page: 15, current_page: 1},\r\n};\r\n\r\nexport interface PaginatedBackendResponse<T> extends BackendResponse {\r\n  pagination: PaginationResponse<T>;\r\n}\r\n\r\nexport function hasNextPage(pagination: PaginationResponse<unknown>): boolean {\r\n  if ('next_cursor' in pagination) {\r\n    return pagination.next_cursor != null;\r\n  }\r\n\r\n  if ('last_page' in pagination) {\r\n    return pagination.current_page < pagination.last_page;\r\n  }\r\n\r\n  return (\r\n    pagination.data.length > 0 && pagination.data.length >= pagination.per_page\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport {Avatar, AvatarProps} from '../../ui/images/avatar';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  image?: string;\r\n  label: ReactNode;\r\n  description?: ReactNode;\r\n  labelClassName?: string;\r\n  avatarSize?: AvatarProps['size'];\r\n}\r\nexport function NameWithAvatar({\r\n  image,\r\n  label,\r\n  description,\r\n  labelClassName,\r\n  avatarSize = 'md',\r\n}: Props) {\r\n  return (\r\n    <div className=\"flex items-center gap-12\">\r\n      {image && (\r\n        <Avatar size={avatarSize} className=\"flex-shrink-0\" src={image} />\r\n      )}\r\n      <div className=\"min-w-0 overflow-hidden\">\r\n        <div\r\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\r\n        >\r\n          {label}\r\n        </div>\r\n        {description && (\r\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\r\n            {description}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function NameWithAvatarPlaceholder({\r\n  labelClassName,\r\n  showDescription,\r\n}: Partial<Props> & {\r\n  showDescription?: boolean;\r\n}) {\r\n  return (\r\n    <div className=\"flex w-full max-w-4/5 items-center gap-12\">\r\n      <Skeleton size=\"w-40 h-40 md:w-32 md:h-32\" variant=\"rect\" />\r\n      <div className=\"flex-auto\">\r\n        <div className={clsx(labelClassName, 'leading-3')}>\r\n          <Skeleton />\r\n        </div>\r\n        {showDescription && (\r\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\r\nimport {UseSliderProps, UseSliderReturn} from './use-slider';\r\n\r\nexport interface BaseSliderProps extends UseSliderProps {\r\n  slider: UseSliderReturn;\r\n  children: ReactNode;\r\n}\r\n\r\nexport function BaseSlider(props: BaseSliderProps) {\r\n  const {\r\n    size = 'md',\r\n    inline,\r\n    label,\r\n    showValueLabel = !!label,\r\n    className,\r\n    width = 'w-full',\r\n    slider,\r\n    children,\r\n    trackColor = 'primary',\r\n    fillColor = 'primary',\r\n  } = props;\r\n\r\n  const {\r\n    domProps,\r\n    trackRef,\r\n    getThumbPercent,\r\n    getThumbValueLabel,\r\n    labelId,\r\n    groupId,\r\n    thumbIds,\r\n    isDisabled,\r\n    numberFormatter,\r\n    minValue,\r\n    maxValue,\r\n    step,\r\n    values,\r\n    getValueLabel,\r\n  } = slider;\r\n\r\n  let outputValue = '';\r\n  let maxLabelLength = Math.max(\r\n    [...numberFormatter.format(minValue)].length,\r\n    [...numberFormatter.format(maxValue)].length,\r\n    [...numberFormatter.format(step)].length,\r\n  );\r\n\r\n  if (getValueLabel) {\r\n    outputValue = getValueLabel(values[0]);\r\n  } else if (values.length === 1) {\r\n    outputValue = getThumbValueLabel(0);\r\n  } else if (values.length === 2) {\r\n    // This should really use the NumberFormat#formatRange proposal...\r\n    // https://github.com/tc39/ecma402/issues/393\r\n    // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\r\n    outputValue = `${getThumbValueLabel(0)} – ${getThumbValueLabel(1)}`;\r\n    maxLabelLength =\r\n      3 +\r\n      2 *\r\n        Math.max(\r\n          maxLabelLength,\r\n          [...numberFormatter.format(minValue)].length,\r\n          [...numberFormatter.format(maxValue)].length,\r\n        );\r\n  }\r\n  const style = getInputFieldClassNames({\r\n    size,\r\n    disabled: isDisabled,\r\n    labelDisplay: 'flex',\r\n  });\r\n\r\n  const wrapperClassname = clsx('touch-none', className, width, {\r\n    'flex items-center': inline,\r\n  });\r\n\r\n  return (\r\n    <div className={wrapperClassname} role=\"group\" id={groupId}>\r\n      {(label || showValueLabel) && (\r\n        <div className={clsx(style.label, 'select-none')}>\r\n          {label && (\r\n            <label\r\n              onClick={() => {\r\n                // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\r\n                // so do it manually. In addition, make sure we show the focus ring.\r\n                document.getElementById(thumbIds[0])?.focus();\r\n              }}\r\n              id={labelId}\r\n              htmlFor={groupId}\r\n            >\r\n              {label}\r\n            </label>\r\n          )}\r\n          {showValueLabel && (\r\n            <output\r\n              htmlFor={thumbIds[0]}\r\n              className=\"ml-auto text-right\"\r\n              aria-live=\"off\"\r\n              style={\r\n                !maxLabelLength\r\n                  ? undefined\r\n                  : {\r\n                      width: `${maxLabelLength}ch`,\r\n                      minWidth: `${maxLabelLength}ch`,\r\n                    }\r\n              }\r\n            >\r\n              {outputValue}\r\n            </output>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div\r\n        ref={trackRef}\r\n        className={clsx('relative', getWrapperHeight(props))}\r\n        {...domProps}\r\n        role=\"presentation\"\r\n      >\r\n        <div\r\n          className={clsx(\r\n            'absolute inset-0 m-auto rounded',\r\n            getTrackColor(trackColor, isDisabled),\r\n            getTrackHeight(size),\r\n          )}\r\n        />\r\n        <div\r\n          className={clsx(\r\n            'absolute inset-0 my-auto rounded',\r\n            getFillColor(fillColor, isDisabled),\r\n            getTrackHeight(size),\r\n          )}\r\n          style={{width: `${Math.max(getThumbPercent(0) * 100, 0)}%`}}\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getWrapperHeight({size, wrapperHeight}: UseSliderProps): string {\r\n  if (wrapperHeight) return wrapperHeight;\r\n  switch (size) {\r\n    case 'xs':\r\n      return 'h-14';\r\n    case 'sm':\r\n      return 'h-20';\r\n    default:\r\n      return 'h-30';\r\n  }\r\n}\r\n\r\nfunction getTrackHeight(size: UseSliderProps['size']): string {\r\n  switch (size) {\r\n    case 'xs':\r\n      return 'h-2';\r\n    case 'sm':\r\n      return 'h-3';\r\n    default:\r\n      return 'h-4';\r\n  }\r\n}\r\n\r\nfunction getTrackColor(color: string, isDisabled: boolean): string {\r\n  if (isDisabled) {\r\n    color = 'disabled';\r\n  }\r\n  switch (color) {\r\n    case 'disabled':\r\n      return 'bg-slider-disabled/60';\r\n    case 'primary':\r\n      return 'bg-primary-light';\r\n    case 'neutral':\r\n      return 'bg-divider';\r\n    default:\r\n      return color;\r\n  }\r\n}\r\n\r\nfunction getFillColor(color: string, isDisabled: boolean): string {\r\n  if (isDisabled) {\r\n    color = 'disabled';\r\n  }\r\n  switch (color) {\r\n    case 'disabled':\r\n      return 'bg-slider-disabled';\r\n    case 'primary':\r\n      return 'bg-primary';\r\n    default:\r\n      return color;\r\n  }\r\n}\r\n","import {\r\n  mergeProps,\r\n  snapValueToStep,\r\n  useGlobalListeners,\r\n} from '@react-aria/utils';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport React, {\r\n  HTMLAttributes,\r\n  ReactNode,\r\n  RefObject,\r\n  useId,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {clamp} from '@common/utils/number/clamp';\r\nimport {usePointerEvents} from '../../interactions/use-pointer-events';\r\nimport {useNumberFormatter} from '@common/i18n/use-number-formatter';\r\nimport type {NumberFormatOptions} from '@internationalized/number';\r\n\r\nexport interface UseSliderProps<T = number[]> {\r\n  formatOptions?: NumberFormatOptions;\r\n  onPointerDown?: () => void;\r\n  onPointerMove?: (e: React.PointerEvent) => void;\r\n  onChange?: (value: T) => void;\r\n  onChangeEnd?: (value: T) => void;\r\n  value?: T;\r\n  defaultValue?: T;\r\n  getValueLabel?: (value: number) => string;\r\n  minValue?: number;\r\n  maxValue?: number;\r\n  step?: number;\r\n  isDisabled?: boolean;\r\n  size?: 'xs' | 'sm' | 'md';\r\n  label?: ReactNode;\r\n  inline?: boolean;\r\n  className?: string;\r\n  width?: string;\r\n  showValueLabel?: boolean;\r\n  fillColor?: 'primary' | string;\r\n  trackColor?: 'primary' | 'neutral' | string;\r\n  showThumbOnHoverOnly?: boolean;\r\n  thumbSize?: string;\r\n  wrapperHeight?: string;\r\n}\r\n\r\nexport interface UseSliderReturn {\r\n  domProps: HTMLAttributes<HTMLElement>;\r\n  trackRef: RefObject<HTMLDivElement>;\r\n  isPointerOver: boolean;\r\n  showThumbOnHoverOnly?: boolean;\r\n  thumbSize?: string;\r\n  step: number;\r\n  isDisabled: boolean;\r\n  values: number[];\r\n  minValue: number;\r\n  maxValue: number;\r\n  focusedThumb: number | undefined;\r\n  labelId: string | undefined;\r\n  groupId: string;\r\n  thumbIds: string[];\r\n  numberFormatter: Intl.NumberFormat;\r\n  getThumbPercent: (index: number) => number;\r\n  getThumbMinValue: (index: number) => number;\r\n  getThumbMaxValue: (index: number) => number;\r\n  getThumbValueLabel: (index: number) => string;\r\n  setThumbValue: (index: number, value: number) => void;\r\n  updateDraggedThumbs: (index: number, dragging: boolean) => void;\r\n  isThumbDragging: (index: number) => boolean;\r\n  setThumbEditable: (index: number, editable: boolean) => void;\r\n  setFocusedThumb: (index: number | undefined) => void;\r\n  getValueLabel?: (value: number) => string;\r\n}\r\n\r\nexport function useSlider({\r\n  minValue = 0,\r\n  maxValue = 100,\r\n  isDisabled = false,\r\n  step = 1,\r\n  formatOptions,\r\n  onChangeEnd,\r\n  onPointerDown,\r\n  label,\r\n  getValueLabel,\r\n  showThumbOnHoverOnly,\r\n  thumbSize,\r\n  onPointerMove,\r\n  ...props\r\n}: UseSliderProps): UseSliderReturn {\r\n  const [isPointerOver, setIsPointerOver] = useState(false);\r\n  const numberFormatter = useNumberFormatter(formatOptions);\r\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\r\n  const trackRef = useRef<HTMLDivElement>(null);\r\n\r\n  // values will be stored in internal state as an array for both slider and range slider\r\n  const [values, setValues] = useControlledState<number[]>(\r\n    props.value ? props.value : undefined,\r\n    props.defaultValue ?? ([minValue] as any),\r\n    props.onChange as any,\r\n  );\r\n  // need to also store values in ref, because state value would\r\n  // lag behind by one between pointer down and move callbacks\r\n  const valuesRef = useRef<number[] | null>(null);\r\n  valuesRef.current = values;\r\n\r\n  // indices of thumbs that are being dragged currently (state and ref for same reasons as above)\r\n  const [draggedThumbs, setDraggedThumbs] = useState<boolean[]>(\r\n    new Array(values.length).fill(false),\r\n  );\r\n  const draggedThumbsRef = useRef<boolean[] | null>(null);\r\n  draggedThumbsRef.current = draggedThumbs;\r\n\r\n  // formatted value for <output> and thumb aria labels\r\n  function getFormattedValue(value: number) {\r\n    return numberFormatter.format(value);\r\n  }\r\n\r\n  const isThumbDragging = (index: number) => {\r\n    return draggedThumbsRef.current?.[index] || false;\r\n  };\r\n\r\n  const getThumbValueLabel = (index: number) =>\r\n    getFormattedValue(values[index]);\r\n\r\n  const getThumbMinValue = (index: number) =>\r\n    index === 0 ? minValue : values[index - 1];\r\n  const getThumbMaxValue = (index: number) =>\r\n    index === values.length - 1 ? maxValue : values[index + 1];\r\n\r\n  const setThumbValue = (index: number, value: number) => {\r\n    if (isDisabled || !isThumbEditable(index) || !valuesRef.current) {\r\n      return;\r\n    }\r\n    const thisMin = getThumbMinValue(index);\r\n    const thisMax = getThumbMaxValue(index);\r\n\r\n    // Round value to multiple of step, clamp value between min and max\r\n    value = snapValueToStep(value, thisMin, thisMax, step);\r\n    valuesRef.current = replaceIndex(valuesRef.current, index, value);\r\n    setValues(valuesRef.current);\r\n  };\r\n\r\n  // update \"dragging\" status of specified thumb\r\n  const updateDraggedThumbs = (index: number, dragging: boolean) => {\r\n    if (isDisabled || !isThumbEditable(index)) {\r\n      return;\r\n    }\r\n\r\n    const wasDragging = draggedThumbsRef.current?.[index];\r\n    draggedThumbsRef.current = replaceIndex(\r\n      draggedThumbsRef.current || [],\r\n      index,\r\n      dragging,\r\n    );\r\n    setDraggedThumbs(draggedThumbsRef.current);\r\n\r\n    // Call onChangeEnd if no handles are dragging.\r\n    if (onChangeEnd && wasDragging && !draggedThumbsRef.current.some(Boolean)) {\r\n      onChangeEnd(valuesRef.current || []);\r\n    }\r\n  };\r\n\r\n  const [focusedThumb, setFocusedThumb] = useState<number | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  const getValuePercent = (value: number) => {\r\n    const x = Math.min(1, (value - minValue) / (maxValue - minValue));\r\n    if (isNaN(x)) {\r\n      return 0;\r\n    }\r\n    return x;\r\n  };\r\n\r\n  const getThumbPercent = (index: number) =>\r\n    getValuePercent(valuesRef.current![index]);\r\n\r\n  const setThumbPercent = (index: number, percent: number) => {\r\n    setThumbValue(index, getPercentValue(percent));\r\n  };\r\n\r\n  const getRoundedValue = (value: number) =>\r\n    Math.round((value - minValue) / step) * step + minValue;\r\n\r\n  const getPercentValue = (percent: number) => {\r\n    const val = percent * (maxValue - minValue) + minValue;\r\n    return clamp(getRoundedValue(val), minValue, maxValue);\r\n  };\r\n\r\n  // allows disabling individual thumbs in range slider, instead of disable the whole slider\r\n  const editableThumbsRef = useRef<boolean[]>(\r\n    new Array(values.length).fill(true),\r\n  );\r\n  const isThumbEditable = (index: number) => editableThumbsRef.current[index];\r\n  const setThumbEditable = (index: number, editable: boolean) => {\r\n    editableThumbsRef.current[index] = editable;\r\n  };\r\n\r\n  // When the user clicks or drags the track, we want the motion to set and drag the\r\n  // closest thumb. Hence, we also need to install useMove() on the track element.\r\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\r\n  // It is set onMouseDown/onTouchDown; see trackProps below.\r\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\r\n\r\n  const currentPointer = useRef<number | null | undefined>(undefined);\r\n  const handlePointerDown = (e: React.PointerEvent) => {\r\n    if (\r\n      e.pointerType === 'mouse' &&\r\n      (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    onPointerDown?.();\r\n\r\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\r\n    if (\r\n      trackRef.current &&\r\n      !isDisabled &&\r\n      values.every((_, i) => !draggedThumbs[i])\r\n    ) {\r\n      const size = trackRef.current.offsetWidth;\r\n      // Find the closest thumb\r\n      const trackPosition = trackRef.current.getBoundingClientRect().left;\r\n      const offset = e.clientX - trackPosition;\r\n      const percent = offset / size;\r\n      const value = getPercentValue(percent);\r\n\r\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\r\n      let closestThumb;\r\n      const split = values.findIndex(v => value - v < 0);\r\n      if (split === 0) {\r\n        // If the index is zero then the closest thumb is the first one\r\n        closestThumb = split;\r\n      } else if (split === -1) {\r\n        // If no index is found they've clicked past all the thumbs\r\n        closestThumb = values.length - 1;\r\n      } else {\r\n        const lastLeft = values[split - 1];\r\n        const firstRight = values[split];\r\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\r\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\r\n          closestThumb = split - 1;\r\n        } else {\r\n          closestThumb = split;\r\n        }\r\n      }\r\n\r\n      // Confirm that the found closest thumb is editable, not disabled, and move it\r\n      if (closestThumb >= 0 && isThumbEditable(closestThumb)) {\r\n        // Don't un-focus anything\r\n        e.preventDefault();\r\n\r\n        realTimeTrackDraggingIndex.current = closestThumb;\r\n        setFocusedThumb(closestThumb);\r\n        currentPointer.current = e.pointerId;\r\n\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, true);\r\n        setThumbValue(closestThumb, value);\r\n\r\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\r\n      } else {\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  const currentPosition = useRef<number | null>(null);\r\n  const {domProps: moveDomProps} = usePointerEvents({\r\n    onPointerDown: handlePointerDown,\r\n    onMoveStart() {\r\n      currentPosition.current = null;\r\n    },\r\n    onMove(e, deltaX) {\r\n      const size = trackRef.current?.offsetWidth || 0;\r\n\r\n      if (currentPosition.current == null) {\r\n        currentPosition.current =\r\n          getThumbPercent(realTimeTrackDraggingIndex.current || 0) * size;\r\n      }\r\n\r\n      currentPosition.current += deltaX;\r\n\r\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\r\n        const percent = clamp(currentPosition.current / size, 0, 1);\r\n        setThumbPercent(realTimeTrackDraggingIndex.current, percent);\r\n      }\r\n    },\r\n    onMoveEnd() {\r\n      if (realTimeTrackDraggingIndex.current != null) {\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n    },\r\n  });\r\n\r\n  const domProps = mergeProps(moveDomProps, {\r\n    onPointerEnter: () => {\r\n      setIsPointerOver(true);\r\n    },\r\n    onPointerLeave: () => {\r\n      setIsPointerOver(false);\r\n    },\r\n    onPointerMove: (e: React.PointerEvent) => {\r\n      onPointerMove?.(e);\r\n    },\r\n  });\r\n\r\n  const onUpTrack = (e: PointerEvent) => {\r\n    const id = e.pointerId;\r\n    if (id === currentPointer.current) {\r\n      if (realTimeTrackDraggingIndex.current != null) {\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n\r\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\r\n    }\r\n  };\r\n\r\n  const id = useId();\r\n  const labelId = label ? `${id}-label` : undefined;\r\n  const groupId = `${id}-group`;\r\n  const thumbIds = [...Array(values.length)].map((v, i) => {\r\n    return `${id}-thumb-${i}`;\r\n  });\r\n\r\n  return {\r\n    domProps,\r\n    trackRef,\r\n    isDisabled,\r\n    step,\r\n    values,\r\n    minValue,\r\n    maxValue,\r\n    focusedThumb,\r\n    labelId,\r\n    groupId,\r\n    thumbIds,\r\n    numberFormatter,\r\n    getThumbPercent,\r\n    getThumbMinValue,\r\n    getThumbMaxValue,\r\n    getThumbValueLabel,\r\n    isThumbDragging,\r\n    setThumbValue,\r\n    updateDraggedThumbs,\r\n    setThumbEditable,\r\n    setFocusedThumb,\r\n    getValueLabel,\r\n    isPointerOver,\r\n    showThumbOnHoverOnly,\r\n    thumbSize,\r\n  };\r\n}\r\n\r\nfunction replaceIndex<T>(array: T[], index: number, value: T) {\r\n  if (array[index] === value) {\r\n    return array;\r\n  }\r\n\r\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\r\n}\r\n","import React, {Ref, useCallback, useEffect, useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport {UseSliderReturn} from './use-slider';\r\nimport {useGlobalListeners, useObjectRef} from '@react-aria/utils';\r\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\r\nimport {BaseSliderProps} from '@common/ui/forms/slider/base-slider';\r\n\r\ninterface SliderThumb {\r\n  index: number;\r\n  slider: UseSliderReturn;\r\n  isDisabled?: boolean;\r\n  ariaLabel?: string;\r\n  inputRef?: Ref<HTMLInputElement>;\r\n  onBlur?: React.FocusEventHandler;\r\n  fillColor?: BaseSliderProps['fillColor'];\r\n}\r\n\r\nexport function SliderThumb({\r\n  index,\r\n  slider,\r\n  isDisabled: isThumbDisabled,\r\n  ariaLabel,\r\n  inputRef,\r\n  onBlur,\r\n  fillColor = 'primary',\r\n}: SliderThumb) {\r\n  const inputObjRef = useObjectRef(inputRef);\r\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\r\n\r\n  const {\r\n    step,\r\n    values,\r\n    focusedThumb,\r\n    labelId,\r\n    thumbIds,\r\n    isDisabled: isSliderDisabled,\r\n    getThumbPercent,\r\n    getThumbMinValue,\r\n    getThumbMaxValue,\r\n    getThumbValueLabel,\r\n    setThumbValue,\r\n    updateDraggedThumbs,\r\n    isThumbDragging,\r\n    setThumbEditable,\r\n    setFocusedThumb,\r\n    isPointerOver,\r\n    showThumbOnHoverOnly,\r\n    thumbSize = 'w-18 h-18',\r\n  } = slider;\r\n\r\n  const isDragging = isThumbDragging(index);\r\n  const value = values[index];\r\n\r\n  // Immediately register editability with the state\r\n  setThumbEditable(index, !isThumbDisabled);\r\n  const isDisabled = isThumbDisabled || isSliderDisabled;\r\n\r\n  const focusInput = useCallback(() => {\r\n    if (inputObjRef.current) {\r\n      inputObjRef.current.focus({preventScroll: true});\r\n    }\r\n  }, [inputObjRef]);\r\n\r\n  // we will focus the native range input when slider is clicked or thumb is\r\n  // focused in some other way, and let browser handle keyboard interactions\r\n  const isFocused = focusedThumb === index;\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      focusInput();\r\n    }\r\n  }, [isFocused, focusInput]);\r\n\r\n  const currentPointer = useRef<number | undefined>(undefined);\r\n  const handlePointerUp = (e: PointerEvent) => {\r\n    if (e.pointerId === currentPointer.current) {\r\n      focusInput();\r\n      updateDraggedThumbs(index, false);\r\n      removeGlobalListener(window, 'pointerup', handlePointerUp, false);\r\n    }\r\n  };\r\n\r\n  const className = clsx(\r\n    'outline-none rounded-full top-1/2 -translate-y-1/2 -translate-x-1/2 absolute inset-0 transition-button duration-200',\r\n    thumbSize,\r\n    !isDisabled && 'shadow-md',\r\n    thumbColor({fillColor, isDisabled, isDragging: isDragging}),\r\n    // show thumb on hover and while dragging, otherwise \"blur\" event will fire on thumb and dragging will stop\r\n    !showThumbOnHoverOnly ||\r\n      (showThumbOnHoverOnly && isDragging) ||\r\n      isPointerOver\r\n      ? 'visible'\r\n      : 'invisible',\r\n  );\r\n\r\n  return (\r\n    <div\r\n      role=\"presentation\"\r\n      className={className}\r\n      style={{\r\n        left: `${Math.max(getThumbPercent(index) * 100, 0)}%`,\r\n      }}\r\n      onPointerDown={e => {\r\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\r\n          return;\r\n        }\r\n        focusInput();\r\n        currentPointer.current = e.pointerId;\r\n        updateDraggedThumbs(index, true);\r\n\r\n        addGlobalListener(window, 'pointerup', handlePointerUp, false);\r\n      }}\r\n    >\r\n      <input\r\n        id={thumbIds[index]}\r\n        onKeyDown={createEventHandler(() => {\r\n          updateDraggedThumbs(index, true);\r\n        })}\r\n        onKeyUp={createEventHandler(() => {\r\n          // make sure \"onChangeEnd\" is fired on keyboard navigation\r\n          updateDraggedThumbs(index, false);\r\n        })}\r\n        ref={inputObjRef}\r\n        tabIndex={!isDisabled ? 0 : undefined}\r\n        min={getThumbMinValue(index)}\r\n        max={getThumbMaxValue(index)}\r\n        step={step}\r\n        value={value}\r\n        disabled={isDisabled}\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={labelId}\r\n        aria-orientation=\"horizontal\"\r\n        aria-valuetext={getThumbValueLabel(index)}\r\n        onFocus={() => {\r\n          setFocusedThumb(index);\r\n        }}\r\n        onBlur={e => {\r\n          setFocusedThumb(undefined);\r\n          updateDraggedThumbs(index, false);\r\n          onBlur?.(e);\r\n        }}\r\n        onChange={e => {\r\n          setThumbValue(index, parseFloat(e.target.value));\r\n        }}\r\n        type=\"range\"\r\n        className=\"sr-only\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SliderThumbColorProps {\r\n  isDisabled?: boolean;\r\n  isDragging: boolean;\r\n  fillColor?: BaseSliderProps['fillColor'];\r\n}\r\n\r\nfunction thumbColor({\r\n  isDisabled,\r\n  isDragging,\r\n  fillColor,\r\n}: SliderThumbColorProps): string {\r\n  if (isDisabled) {\r\n    return 'bg-slider-disabled cursor-default';\r\n  }\r\n\r\n  if (fillColor && fillColor !== 'primary') {\r\n    return fillColor;\r\n  }\r\n\r\n  return clsx(\r\n    'hover:bg-primary-dark',\r\n    isDragging ? 'bg-primary-dark' : 'bg-primary',\r\n  );\r\n}\r\n","import {BaseSlider} from './base-slider';\r\nimport {useSlider, UseSliderProps} from './use-slider';\r\nimport React, {Ref} from 'react';\r\nimport {SliderThumb} from './slider-thumb';\r\nimport {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\n\r\ninterface SliderProps extends UseSliderProps<number> {\r\n  inputRef?: Ref<HTMLInputElement>;\r\n  onBlur?: React.FocusEventHandler;\r\n}\r\nexport function Slider({inputRef, onBlur, ...props}: SliderProps) {\r\n  const {onChange, onChangeEnd, value, defaultValue, ...otherProps} = props;\r\n\r\n  const baseProps: UseSliderProps = {\r\n    ...otherProps,\r\n    // Normalize `value: number[]` to `value: number`\r\n    value: value != null ? [value] : undefined,\r\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\r\n    onChange: (v: number[]): void => {\r\n      onChange?.(v[0]);\r\n    },\r\n    onChangeEnd: (v: number[]): void => {\r\n      onChangeEnd?.(v[0]);\r\n    },\r\n  };\r\n\r\n  const slider = useSlider(baseProps);\r\n\r\n  return (\r\n    <BaseSlider {...baseProps} slider={slider}>\r\n      <SliderThumb\r\n        fillColor={props.fillColor}\r\n        index={0}\r\n        slider={slider}\r\n        inputRef={inputRef}\r\n        onBlur={onBlur}\r\n      />\r\n    </BaseSlider>\r\n  );\r\n}\r\n\r\nexport interface FormSliderProps extends SliderProps {\r\n  name: string;\r\n}\r\n\r\nexport function FormSlider({name, ...props}: FormSliderProps) {\r\n  const {\r\n    field: {onChange, onBlur, value = '', ref},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  const formProps: SliderProps = {\r\n    onChange,\r\n    onBlur,\r\n    value: value || '', // avoid issues with \"null\" value when setting form defaults from backend model\r\n  };\r\n\r\n  return <Slider inputRef={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const MoreVertIcon = createSvgIcon(\r\n  <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n, 'MoreVertOutlined');\r\n","export const artistPageTabs = {\r\n  discography: 1,\r\n  similar: 2,\r\n  about: 3,\r\n  tracks: 4,\r\n  albums: 5,\r\n  followers: 6,\r\n} as const;\r\n","import React from 'react';\r\nimport {useDialogContext} from './dialog-context';\r\nimport {Dialog} from './dialog';\r\nimport {DialogBody} from './dialog-body';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\r\nimport {useControlledState} from '@react-stately/utils';\r\n\r\ninterface Props {\r\n  image?: string;\r\n  images?: string[];\r\n  activeIndex?: number;\r\n  onActiveIndexChange?: (index: number) => void;\r\n  defaultActiveIndex?: number;\r\n}\r\nexport function ImageZoomDialog(props: Props) {\r\n  const {close} = useDialogContext();\r\n  const {image, images} = props;\r\n  const [activeIndex, setActiveIndex] = useControlledState(\r\n    props.activeIndex,\r\n    props.defaultActiveIndex,\r\n    props.onActiveIndexChange,\r\n  );\r\n  const src = image || images?.[activeIndex];\r\n\r\n  return (\r\n    <Dialog size=\"fullscreenTakeover\" background=\"bg-black/80\">\r\n      <DialogBody padding=\"p-0\" className=\"h-full w-full\">\r\n        <IconButton\r\n          size=\"lg\"\r\n          color=\"paper\"\r\n          className=\"absolute right-0 top-0 z-20 text-white\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <div className=\"relative flex h-full w-full items-center justify-center p-40\">\r\n          {images?.length ? (\r\n            <IconButton\r\n              size=\"lg\"\r\n              color=\"white\"\r\n              variant=\"flat\"\r\n              className=\"absolute bottom-0 left-20 top-0 my-auto\"\r\n              disabled={activeIndex < 1}\r\n              onClick={() => {\r\n                setActiveIndex(activeIndex - 1);\r\n              }}\r\n            >\r\n              <KeyboardArrowLeftIcon />\r\n            </IconButton>\r\n          ) : null}\r\n          <img\r\n            src={src}\r\n            alt=\"\"\r\n            className=\"max-h-full w-auto object-contain shadow\"\r\n          />\r\n          {images?.length ? (\r\n            <IconButton\r\n              size=\"lg\"\r\n              color=\"white\"\r\n              variant=\"flat\"\r\n              className=\"absolute bottom-0 right-20 top-0 my-auto\"\r\n              disabled={activeIndex + 1 === images?.length}\r\n              onClick={() => {\r\n                setActiveIndex(activeIndex + 1);\r\n              }}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </IconButton>\r\n          ) : null}\r\n        </div>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {Link, LinkProps} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport React, {useMemo} from 'react';\r\nimport {slugifyString} from '@common/utils/string/slugify-string';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\nimport {Genre} from '@app/web-player/genres/genre';\r\n\r\ninterface GenreLinkProps extends Omit<LinkProps, 'to'> {\r\n  genre: Genre;\r\n  className?: string;\r\n}\r\nexport function GenreLink({genre, className, ...linkProps}: GenreLinkProps) {\r\n  const uri = useMemo(() => {\r\n    return getGenreLink(genre);\r\n  }, [genre]);\r\n\r\n  return (\r\n    <Link\r\n      {...linkProps}\r\n      className={clsx(\r\n        'block outline-none first-letter:capitalize hover:underline focus-visible:underline',\r\n        className,\r\n      )}\r\n      to={uri}\r\n    >\r\n      {genre.display_name || genre.name}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport function getGenreLink(\r\n  genre: Genre,\r\n  {absolute}: {absolute?: boolean} = {},\r\n) {\r\n  const genreName = slugifyString(genre.name);\r\n  let link = `/genre/${genreName}`;\r\n  if (absolute) {\r\n    link = `${getBootstrapData().settings.base_url}${link}`;\r\n  }\r\n  return link;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  //\r\n}\r\n\r\ninterface Payload {\r\n  commentIds: number[];\r\n}\r\n\r\nexport function useDeleteComments() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => deleteComments(payload),\r\n    onSuccess: (response, payload) => {\r\n      toast(\r\n        message('[one Comment deleted|other Deleted :count comments]', {\r\n          values: {count: payload.commentIds.length},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction deleteComments({commentIds}: Payload): Promise<Response> {\r\n  return apiClient.delete(`comment/${commentIds.join(',')}`).then(r => r.data);\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const TrendingUpIcon = createSvgIcon(\r\n  <path d=\"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6h-6z\" />\r\n, 'TrendingUpOutlined');\r\n","import {PaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {User} from '@common/auth/user';\r\n\r\nexport const CHANNEL_MODEL = 'channel';\r\n\r\nexport type ChannelContentItem<T = unknown> = T & {\r\n  channelable_id?: number;\r\n  channelable_order?: number;\r\n};\r\n\r\nexport interface ChannelConfig {\r\n  autoUpdateMethod?: string;\r\n  autoUpdateProvider?: string;\r\n  disablePagination?: boolean;\r\n  disablePlayback?: boolean;\r\n  restriction?: string;\r\n  restrictionModelId?: 'urlParam' | number;\r\n  contentModel: string;\r\n  contentType: 'listAll' | 'manual' | 'autoUpdate';\r\n  contentOrder: string;\r\n  // layout user selected manually, it's stored in a cookie and set as this\r\n  // prop in channel controller so there are no mismatches during SSR\r\n  selectedLayout?: string;\r\n  layout: string;\r\n  nestedLayout: string;\r\n  hideTitle?: boolean;\r\n  lockSlug?: boolean;\r\n  preventDeletion?: boolean;\r\n  actions?: {tooltip: string; icon: string; route: string}[];\r\n}\r\n\r\nexport interface Channel<T = ChannelContentItem> {\r\n  id: number;\r\n  name: string;\r\n  internal: boolean;\r\n  public: boolean;\r\n  description?: string;\r\n  type: string;\r\n  slug: string;\r\n  config: ChannelConfig;\r\n  items?: T[];\r\n  model_type: 'channel';\r\n  items_count?: number;\r\n  user?: User;\r\n  updated_at?: string;\r\n  restriction?: {id: number; name: string; model_type: string};\r\n  content?: PaginationResponse<T>;\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const GridViewIcon = createSvgIcon(\r\n  <path d=\"M3 3v8h8V3H3zm6 6H5V5h4v4zm-6 4v8h8v-8H3zm6 6H5v-4h4v4zm4-16v8h8V3h-8zm6 6h-4V5h4v4zm-6 4v8h8v-8h-8zm6 6h-4v-4h4v4z\" />\r\n, 'GridViewOutlined');\r\n","import {useMediaQuery} from './use-media-query';\r\n\r\nexport function useIsTouchDevice() {\r\n  return useMediaQuery('((pointer: coarse))');\r\n}\r\n","import {Channel} from '@common/channels/channel';\r\nimport {useParams, useSearchParams} from 'react-router-dom';\r\nimport {useBackendFilterUrlParams} from '@common/datatable/filters/backend-filter-url-params';\r\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\r\n\r\nexport function useChannelQueryParams(\r\n  channel?: Channel,\r\n  userParams?: Record<string, string | null>\r\n) {\r\n  const params = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const {encodedFilters} = useBackendFilterUrlParams();\r\n\r\n  const queryParams = {\r\n    ...userParams,\r\n    restriction: params.restriction || '',\r\n    order: searchParams.get('order'),\r\n    [BackendFiltersUrlKey]: encodedFilters,\r\n    paginate: 'simple',\r\n  };\r\n\r\n  // always set default channel order to keep query key stable\r\n  if (!queryParams.order && channel) {\r\n    queryParams.order = channel.config.contentOrder || 'popularity:desc';\r\n  }\r\n\r\n  return queryParams;\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Channel} from '@common/channels/channel';\r\nimport {useChannelQueryParams} from '@common/channels/use-channel-query-params';\r\nimport {isSsr} from '@common/utils/dom/is-ssr';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nexport interface GetChannelResponse extends BackendResponse {\r\n  channel: Channel;\r\n}\r\n\r\nexport function useChannel(\r\n  slugOrId: string | number | undefined,\r\n  loader: 'channelPage' | 'editChannelPage' | 'editUserListPage',\r\n  userParams?: Record<string, string | null>,\r\n) {\r\n  const params = useParams();\r\n  const channelId = slugOrId || params.slugOrId!;\r\n  const queryParams = useChannelQueryParams(undefined, userParams);\r\n  return useQuery({\r\n    // only refetch when channel ID or restriction changes and not query params.\r\n    // content will be re-fetched in channel content components\r\n    // on SSR use query params as well, to avoid caching wrong data when query params change\r\n    queryKey: isSsr()\r\n      ? channelQueryKey(channelId, queryParams)\r\n      : channelQueryKey(channelId, {restriction: queryParams.restriction}),\r\n\r\n    queryFn: () => fetchChannel(channelId, {...queryParams, loader}),\r\n    initialData: () => {\r\n      // @ts-ignore\r\n      const data = getBootstrapData().loaders?.[loader];\r\n      const isSameChannel =\r\n        data?.channel.id == channelId || data?.channel.slug == channelId;\r\n      const isSameRestriction =\r\n        !queryParams.restriction ||\r\n        data?.channel.restriction?.name === queryParams.restriction;\r\n      if (isSameChannel && isSameRestriction) {\r\n        return data;\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nexport function channelQueryKey(\r\n  slugOrId: number | string,\r\n  params?: Record<string, string | null>,\r\n) {\r\n  return ['channel', `${slugOrId}`, params];\r\n}\r\n\r\nexport function channelEndpoint(slugOrId: number | string) {\r\n  return `channel/${slugOrId}`;\r\n}\r\n\r\nfunction fetchChannel(\r\n  slugOrId: number | string,\r\n  params: Record<string, string | number | undefined | null> = {},\r\n): Promise<GetChannelResponse> {\r\n  return apiClient\r\n    .get(channelEndpoint(slugOrId), {params})\r\n    .then(response => response.data);\r\n}\r\n"],"names":["encodedFilters","decodedFilters","id"],"mappings":"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"}